mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> ext { <nl> bintrayPublish = false <nl> + / / Sets release version <nl> grailsVersion = ' 3 . 0 . 0 ' <nl> isBuildSnapshot = grailsVersion . endsWith ( " . BUILD - SNAPSHOT " ) <nl> isTravisBuild = System . getenv ( ) . get ( " TRAVIS " ) = = ' true ' <nl> 
new file mode 100644 <nl> index 0000000 . . 4fd62c4 <nl> mmm / dev / null <nl> ppp b / spring - web - reactive / settings . gradle <nl> + rootProject . name = " spring - reactive " <nl> 
mmm a / library - core / build . gradle <nl> ppp b / library - core / build . gradle <nl> if ( project . hasProperty ( ' pushall ' ) | | project . hasProperty ( ' librarycoreonly ' ) ) { <nl> } <nl> dependencies { <nl> - compile ' com . android . support : support - v4 : 23 . 0 . 0 ' <nl> + compile ' com . android . support : support - v4 : 23 . 0 . 1 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> findbugs { <nl> toolVersion = ' 3 . 0 . 1 ' <nl> effort = ' max ' <nl> reportLevel = ' low ' <nl> + sourceSets = [ sourceSets . main ] <nl> } <nl> findbugsMain { <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 5 <nl> - versionName " 1 . 1 . 1 " <nl> + versionCode 6 <nl> + versionName " 1 . 1 . 2 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - alpha3 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> dependencies { <nl> classpath ' me . trnl : clirr - gradle - plugin : 0 . 4 ' <nl> classpath ' com . antwerkz . github : github - release - gradle - plugin : 1 . 0 . 0 - RC3 ' <nl> + classpath ' org . gradle . api . plugins : gradle - nexus - plugin : 0 . 3 ' <nl> } <nl> } <nl> 
new file mode 100644 <nl> index 000000000000 . . 1d3ed0a832bd <nl> mmm / dev / null <nl> ppp b / osgi / modules / liferay - registry / build . gradle <nl> + apply from : ' . . / gradle / java . gradle ' <nl> \ No newline at end of file <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 2 . 0 - alpha1 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 5 . 0 - alpha1 ' <nl> smackMinAndroidSdk = 8 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15125 <nl> - versionName = ' 24 ' <nl> + versionCode = 15130 <nl> + versionName = ' 25 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> allprojects { <nl> group = ' io . realm ' <nl> - version = new File ( " $ { rootDir } / version . txt " ) . text <nl> + version = new File ( " version . txt " ) . text <nl> repositories { <nl> jcenter ( ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15010 <nl> - versionName = ' 16 - beta1 ' <nl> + versionCode = 15011 <nl> + versionName = ' 16 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / main / build . gradle <nl> ppp b / main / build . gradle <nl> dependencies { <nl> android { <nl> compileSdkVersion 21 <nl> - buildToolsVersion " 21 . 0 . 1 " <nl> + buildToolsVersion " 21 . 0 . 2 " <nl> def Properties versionProps = new Properties ( ) <nl> versionProps . load ( new FileInputStream ( file ( ' version . properties ' ) ) ) <nl> 
mmm a / UltimateAndroidGradle / demoofui / build . gradle <nl> ppp b / UltimateAndroidGradle / demoofui / build . gradle <nl> apply plugin : ' com . android . application ' <nl> + apply plugin : ' idea ' <nl> + <nl> + idea { <nl> + module { <nl> + downloadJavadoc = true <nl> + downloadSources = true <nl> + } <nl> + } <nl> android { <nl> compileSdkVersion 21 <nl> 
mmm a / gradle / javaModule . gradle <nl> ppp b / gradle / javaModule . gradle <nl> tasks . withType ( Test ) { <nl> if ( isCloudCi ) { <nl> doFirst { <nl> - maxParallelForks 1 <nl> + maxParallelForks isAppveyor ? 2 : 1 <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> - id ' nebula . netflixoss ' version ' 3 . 2 . 2 ' <nl> + id ' nebula . netflixoss ' version ' 3 . 2 . 3 ' <nl> id ' me . champeau . gradle . jmh ' version ' 0 . 2 . 0 ' <nl> id ' net . saliman . cobertura ' version ' 2 . 2 . 8 ' <nl> } <nl> 
mmm a / docs / docs . gradle <nl> ppp b / docs / docs . gradle <nl> / / Docbook and Javadoc building and uploading tasks <nl> apply plugin : ' base ' <nl> + task docs { <nl> + dependsOn ' manual : docbook ' , ' faq : docbookHtmlSingle ' , ' apidocs ' <nl> + } <nl> + <nl> subprojects { <nl> apply plugin : ' base ' <nl> apply plugin : ' docbook ' <nl> 
mmm a / modules / build - module . gradle <nl> ppp b / modules / build - module . gradle <nl> idea { <nl> } <nl> } <nl> } <nl> + <nl> + excludeDirs + = file ( ' classes ' ) <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task sourceJar ( type : Jar , dependsOn : sourceMainJava ) { <nl> task javadocJar ( type : Jar , dependsOn : javadoc ) { <nl> from javadoc . destinationDir <nl> from project ( " SpongeAPI " ) . tasks . javadoc . destinationDir <nl> - classifier = " javadocs " <nl> + classifier = " javadoc " <nl> dependsOn " SpongeAPI : javadoc " <nl> } <nl> 
mmm a / framework / build . gradle <nl> ppp b / framework / build . gradle <nl> buildscript { <nl> } <nl> - apply plugin : ' android - library ' <nl> + apply plugin : ' com . android . library ' <nl> ext { <nl> apply from : ' cordova . gradle ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> bintrayRepo = ' tbruyelle ' <nl> bintrayName = ' RxPermissions ' <nl> - publishedGroupId = ' com . tbruyelle ' <nl> + publishedGroupId = ' com . tbruyelle . rxpermissions ' <nl> artifact = ' rxpermissions ' <nl> libraryName = ' RxPermissions ' <nl> libraryVersion = ' 0 . 5 . 2 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha3 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha4 ' <nl> } <nl> } <nl> 
mmm a / grails - plugin - domain - class / build . gradle <nl> ppp b / grails - plugin - domain - class / build . gradle <nl> dependencies { <nl> transitive = false <nl> } <nl> - <nl> + runtime project ( " : grails - plugin - i18n " ) / / for messageSource <nl> } <nl> jar . appendix = ' plugin - domain - class ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 220 <nl> - versionName = ' 12 - beta5 ' <nl> + versionCode = 221 <nl> + versionName = ' 12 - beta6 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 157 <nl> - versionName " 3 . 1 . 0 " <nl> + versionCode 158 <nl> + versionName " 3 . 1 . 0 . 1 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> allprojects { <nl> - version = ' 1 . 6 . 1 ' <nl> + version = ' 2 . 0 - BETA ' <nl> } <nl> subprojects { <nl> 
mmm a / buildsystem / dependencies . gradle <nl> ppp b / buildsystem / dependencies . gradle <nl> allprojects { <nl> ext { <nl> / / Android <nl> - androidBuildToolsVersion = " 21 . 1 . 2 " <nl> + androidBuildToolsVersion = ' 22 . 0 . 1 ' <nl> androidMinSdkVersion = 15 <nl> androidTargetSdkVersion = 21 <nl> androidCompileSdkVersion = 21 <nl> 
mmm a / gradle / projectLocalRepo . gradle <nl> ppp b / gradle / projectLocalRepo . gradle <nl> * / <nl> plugins . withType ( MavenPlugin ) { <nl> - ext . localRepoUrl = " $ { rootProject . buildDir . toURI ( ) } localrepo " <nl> + ext . localRepoUrl = " $ { rootProject . buildDir . toURI ( ) } / localrepo " <nl> install { <nl> repositories { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> - compileSdkVersion 21 <nl> + compileSdkVersion 22 <nl> buildToolsVersion " 20 . 0 . 0 " <nl> defaultConfig { <nl> applicationId " com . saulmm . material . myapplication " <nl> minSdkVersion 21 <nl> - targetSdkVersion 21 <nl> + targetSdkVersion 22 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15170 <nl> - versionName = ' 29 - beta1 ' <nl> + versionCode = 15171 <nl> + versionName = ' 29 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task cleanLocalMavenRepos ( type : Delete ) { <nl> task clean { <nl> description = ' Perform all the other clean tasks ' <nl> group = ' Clean ' <nl> - dependsOn cleanRealm <nl> - dependsOn cleanGradlePlugin <nl> - dependsOn cleanExamples <nl> + cleanLocalMavenRepos . dependsOn cleanRealm <nl> + cleanLocalMavenRepos . dependsOn cleanGradlePlugin <nl> + cleanLocalMavenRepos . dependsOn cleanExamples <nl> dependsOn cleanLocalMavenRepos <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> + group = GROUP <nl> + version = VERSION_NAME <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> processResources { <nl> ' BUILD - NUMBER ' : buildNumber , <nl> ] <nl> } <nl> + <nl> + afterEvaluate { <nl> + tasks . getByName ( ' buildPlugin ' ) { <nl> + archiveName = " $ intellij . pluginName - $ version - $ { buildNumber } . zip " <nl> + } <nl> + } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 3 . 0 - beta - 2 " <nl> - versionCode 119 <nl> + versionName " 3 . 0 - rc - 1 " <nl> + versionCode 121 <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> - id ' nebula . netflixoss ' version ' 2 . 2 . 3 ' <nl> + id ' nebula . netflixoss ' version ' 2 . 2 . 5 ' <nl> } <nl> ext { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> mavenRepo urls : ' http : / / repository . jboss . com / maven2 / ' <nl> + mavenRepo urls : ' http : / / elasticsearch . googlecode . com / svn / maven ' <nl> } <nl> } <nl> 
mmm a / subprojects / groovy - test / build . gradle <nl> ppp b / subprojects / groovy - test / build . gradle <nl> apply plugin : ' checkstyle ' <nl> dependencies { <nl> groovy project ( ' : ' ) <nl> compile " junit : junit : 4 . 10 " <nl> + testRuntime project ( ' : subprojects : groovy - ant ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 17 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 22 . Final ' <nl> + nettyVersion = ' 4 . 0 . 23 . Final ' <nl> slf4jVersion = ' 1 . 7 . 7 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 4 . 1 . 2 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> - classpath ' ch . netzwerg : gradle - release - plugin : 1 . 1 . 0 ' <nl> + classpath ' ch . netzwerg : gradle - release - plugin : 1 . 2 . 0 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : astyanax - core ' ) { <nl> dependencies { <nl> testCompile " junit : junit : $ junitVersion " <nl> } <nl> + jar { <nl> + dependsOn configurations . runtime <nl> + from { configurations . runtime . collect { it . isDirectory ( ) ? it : zipTree ( it ) } } <nl> + } <nl> } <nl> project ( ' : astyanax - thrift ' ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> - shortVersion = ' 4 . 0 . 4 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 0 . 5 ' <nl> + isSnapshot = true <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( buildDir , ' documentation ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> buildConfigField " String " , " APP_PN_KEY " , " \ " org . wordpress . android . beta . build \ " " <nl> buildConfigField " String " , " STATS_PROVIDER_AUTHORITY " , " \ " org . wordpress . android . providers . StatsContentProviderBeta \ " " <nl> packageNameSuffix " . beta " <nl> - versionNameSuffix " - beta " <nl> } / / end zbetagroup <nl> } / / end buildTypes <nl> 
mmm a / SlidingLayerSample / build . gradle <nl> ppp b / SlidingLayerSample / build . gradle <nl> repositories { <nl> android { <nl> compileSdkVersion 22 <nl> - buildToolsVersion " 21 . 1 . 2 " <nl> + buildToolsVersion " 22 . 0 . 1 " <nl> defaultConfig { <nl> minSdkVersion 8 <nl> 
mmm a / zipkin - ui / build . gradle <nl> ppp b / zipkin - ui / build . gradle <nl> task webpack ( type : NpmTask ) { <nl> args = [ ' run - script ' , ' build ' ] <nl> dependsOn npmInstall <nl> } <nl> - build . dependsOn webpack <nl> processResources . dependsOn ( webpack ) <nl> task karma ( type : NpmTask ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> - versionCode = 241 <nl> - versionName = ' 13 - beta1 ' <nl> + versionCode = 242 <nl> + versionName = ' 13 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> repository ( url : stagingUrl , configureAuth ) <nl> snapshotRepository ( url : ' https : / / oss . sonatype . org / content / repositories / snapshots / ' , configureAuth ) <nl> } <nl> + uploadArchives . onlyIf { ! name . contains ( " thrift " ) } <nl> [ <nl> install . repositories . mavenInstaller , <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : moco - runner ' ) { <nl> archives uberjar <nl> } <nl> } <nl> + <nl> + task wrapper ( type : Wrapper ) { <nl> + gradleVersion = ' 1 . 10 ' <nl> + } <nl> 
mmm a / moco - runner / build . gradle <nl> ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> - proguardVersion = ' 5 . 0 ' <nl> + proguardVersion = ' 5 . 1 ' <nl> } <nl> it . dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> group = ' com . augusttechgroup ' <nl> - version = ' 0 . 6 ' <nl> + version = ' 0 . 6 . 1 ' <nl> ext { <nl> poms = [ ] <nl> task groovydocJar ( type : Jar ) { <nl> } <nl> artifacts { <nl> - archives groovydocJar , sourceJar <nl> + archives groovydocJar , sourceJar , jar <nl> } <nl> signing { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply plugin : ' android - apt ' <nl> android { <nl> compileSdkVersion 24 <nl> - buildToolsVersion " 24 . 0 . 2 " <nl> + buildToolsVersion ' 24 . 0 . 2 ' <nl> defaultConfig { <nl> applicationId ' io . github . ryanhoo . music ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : WordPress ' <nl> include ' : libs : utils : WordPressUtils ' <nl> include ' : libs : networking : WordPressNetworking ' <nl> include ' : libs : wpcomrest : WordPressComRest ' <nl> - ' : WordPressGraphLib ' <nl> + include ' : libs : graphview : WordPressGraphView ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11246 <nl> + versionCode = 11247 <nl> versionName = ' 13 - beta4 ' <nl> } <nl> 
mmm a / grails - core / build . gradle <nl> ppp b / grails - core / build . gradle <nl> dependencies { <nl> exclude group : ' xml - apis ' , module : ' xml - apis ' <nl> } <nl> + runtime ' org . liquibase : liquibase - core : 2 . 0 . 5 ' <nl> + <nl> compile ( " com . springsource . springloaded : springloaded - core : $ springLoadedVersion " ) { <nl> ext . notInPom = true <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> compile ( ' org . codehaus . gpars : gpars : 0 . 9 ' ) { <nl> exclude module : ' netty ' <nl> } <nl> - <nl> - jsp21 ' javax . servlet . jsp : jsp - api : 2 . 1 ' <nl> } <nl> install . doLast { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 2 " <nl> + buildToolsVersion " 23 . 0 . 3 " <nl> defaultConfig { <nl> applicationId " com . eightbitlab . blurview " <nl> 
mmm a / SeriesGuideX / build . gradle <nl> ppp b / SeriesGuideX / build . gradle <nl> dependencies { <nl> android { <nl> compileSdkVersion 18 <nl> - buildToolsVersion " 18 . 0 . 1 " <nl> + buildToolsVersion " 18 . 1 " <nl> sourceSets { <nl> main { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> + jcenter ( ) <nl> } <nl> } <nl> 
mmm a / subprojects / docs / src / samples / cpp / dependencies / build . gradle <nl> ppp b / subprojects / docs / src / samples / cpp / dependencies / build . gradle <nl> project ( " : lib " ) { <nl> + archivesBaseName = " some - lib " <nl> + <nl> / / START SNIPPET use - plugin - lib <nl> apply plugin : " cpp - lib " <nl> / / END SNIPPET use - plugin - lib <nl> 
mmm a / gradle / publish . gradle <nl> ppp b / gradle / publish . gradle <nl> if ( ! artifactoryUser ) { <nl> } <nl> } <nl> - logger . lifecycle " Bintray user : $ bintrayUser " <nl> + logger . lifecycle " ArtifactoryUser user : $ artifactoryUser " <nl> allprojects { <nl> apply plugin : ' com . jfrog . artifactory - upload ' <nl> 
mmm a / smack - resolver - dnsjava / build . gradle <nl> ppp b / smack - resolver - dnsjava / build . gradle <nl> javax . naming API ( e . g . Android ) . " " " <nl> dependencies { <nl> compile project ( path : ' : smack - core ' ) <nl> - compile ' dnsjava : dnsjava : 2 . 1 . + ' <nl> + compile ' dnsjava : dnsjava : 2 . 1 . 6 ' <nl> } <nl> 
mmm a / v7 / palette / build . gradle <nl> ppp b / v7 / palette / build . gradle <nl> dependencies { <nl> android { <nl> compileSdkVersion 7 <nl> - buildToolsVersion " 19 . 0 . 1 " <nl> defaultConfig { <nl> minSdkVersion 7 <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> } <nl> - jvmArgs " - Xss320k " , " - noverify " <nl> + jvmArgs " - Xss320k " <nl> maxHeapSize " 256m " <nl> if ( isCloudCi ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15112 <nl> - versionName = ' 23 - beta3 ' <nl> + versionCode = 15113 <nl> + versionName = ' 23 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 1 . 0 . 0 " <nl> + version = " 1 . 0 . 1 " <nl> group = " com . edmodo " <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> } <nl> } <nl> 
mmm a / hystrix - contrib / hystrix - javanica / build . gradle <nl> ppp b / hystrix - contrib / hystrix - javanica / build . gradle <nl> + apply plugin : ' osgi ' <nl> + <nl> ext { <nl> aspectjVersion = ' 1 . 7 . 4 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 7 . 1 ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 8 . + ' <nl> } <nl> } <nl> 
mmm a / gradle / javaModule . gradle <nl> ppp b / gradle / javaModule . gradle <nl> javadoc { <nl> } <nl> test { <nl> - maxParallelForks 2 <nl> - } <nl> \ No newline at end of file <nl> + maxParallelForks System . getenv ( " TRAVIS " ) ? 1 : 2 <nl> + } <nl> 
mmm a / hugo - plugin / build . gradle <nl> ppp b / hugo - plugin / build . gradle <nl> apply plugin : ' groovy ' <nl> apply plugin : ' nexus ' <nl> + <nl> + targetCompatibility = JavaVersion . VERSION_1_7 <nl> + sourceCompatibility = JavaVersion . VERSION_1_7 <nl> + <nl> dependencies { <nl> compile gradleApi ( ) <nl> compile localGroovy ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15005 <nl> - versionName = ' 15 . 0 . 3 ' <nl> + versionCode = 15006 <nl> + versionName = ' 15 . 0 . 4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / grails - plugin - testing / build . gradle <nl> ppp b / grails - plugin - testing / build . gradle <nl> dependencies { <nl> compile " junit : junit : $ { junitVersion } " , { <nl> exclude group : ' org . hamcrest ' , module : ' hamcrest - core ' <nl> } <nl> + <nl> + runtime " cglib : cglib : $ { cglibVersion } " <nl> } <nl> eclipse { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . automattic . android : gradle - wordpresslibraries : 1 . 1 . 0 ' <nl> + classpath ' com . automattic . android : gradle - wordpresslibraries : 1 . 1 . 1 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 56 <nl> - versionName " 1 . 2 . 0 " <nl> + versionCode 57 <nl> + versionName " 1 . 3 . 0 - alpha " <nl> } <nl> compileOptions { <nl> 
mmm a / subprojects / migration / migration . gradle <nl> ppp b / subprojects / migration / migration . gradle <nl> dependencies { <nl> } <nl> useTestFixtures ( ) <nl> + eclipse { <nl> + classpath { <nl> + file . whenMerged { classpath - > <nl> + classpath . entries . removeAll { it . path . contains ( ' src / integTest / resources ' ) } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 226 <nl> - versionName ' 3 . 3 . 8 ' <nl> + versionCode 227 <nl> + versionName ' 3 . 3 . 9 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha7 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha8 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> mavenLocal ( ) <nl> - maven { <nl> - name ' snoatype - staging ' <nl> - url ' https : / / oss . sonatype . org / content / groups / staging ' <nl> - } <nl> } <nl> } <nl> 
mmm a / clients / flash / build . gradle <nl> ppp b / clients / flash / build . gradle <nl> buildscript { <nl> subprojects { <nl> apply plugin : ' gradlefx ' <nl> + apply plugin : ' flashbuilder ' <nl> version = ' 0 . 1 - SNAPSHOT ' <nl> } <nl> 
mmm a / AIMSICD / build . gradle <nl> ppp b / AIMSICD / build . gradle <nl> android { <nl> applicationId " com . SecUpwN . AIMSICD " <nl> minSdkVersion 16 <nl> targetSdkVersion 22 <nl> - versionCode 41 <nl> + versionCode 42 <nl> testApplicationId " com . SecUpwN . AIMSICD . test " <nl> buildConfigField ' String ' , ' BUILD_NUMBER ' , ( getBuildNumber ( ) = = null ? ' null ' : " \ " $ { buildNumber } \ " " ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> } <nl> } <nl> 
mmm a / subprojects / docs / docs . gradle <nl> ppp b / subprojects / docs / docs . gradle <nl> test { <nl> } <nl> - if ( project . hasProperty ( ' noDocsTests ' ) ) { <nl> - gradle . startParameter . excludedTaskNames < < test . path <nl> - } <nl> - <nl> task docs { <nl> dependsOn javadocAll , groovydocAll , userguide , distDocs , samplesDocs , dslHtml , releaseNotes <nl> description = ' Generates all documentation ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 236 <nl> + versionCode = 237 <nl> versionName = ' 12 . 2 - beta ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> idea { <nl> project { <nl> languageLevel = ' JDK_1_7 ' <nl> + vcs = ' Git ' <nl> ipr { <nl> withXml { provider - > <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> classifier = ' sources ' <nl> } <nl> + task javadocJar ( type : Jar , dependsOn : javadoc ) { <nl> + classifier = ' javadoc ' <nl> + from ' build / docs / javadoc ' <nl> + } <nl> + <nl> artifacts { <nl> archives jar <nl> archives sourcesJar <nl> + archives javadocJar <nl> } <nl> signing { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( [ " storeFile " , " storePassword " , " keyAlias " , " keyPassword " ] . count { ! project . ha <nl> } <nl> } <nl> android . buildTypes . release . signingConfig = android . signingConfigs . release <nl> + android . buildTypes . betagroup . signingConfig = android . signingConfigs . release <nl> } <nl> 
mmm a / grails - plugin - url - mappings / build . gradle <nl> ppp b / grails - plugin - url - mappings / build . gradle <nl> sourceSets { <nl> main { <nl> compileClasspath + = files ( configurations . optional ) <nl> } <nl> + test { <nl> + runtimeClasspath + = files ( configurations . optional ) <nl> + } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / DaoExample / build . gradle <nl> ppp b / DaoExample / build . gradle <nl> android { <nl> } <nl> } <nl> - greendao { <nl> + greendao { <nl> + schemaVersion 1000 <nl> encrypt true <nl> } <nl> 
mmm a / OsmAnd / build . gradle <nl> ppp b / OsmAnd / build . gradle <nl> task cleanupDuplicatesInCore ( ) { <nl> } <nl> } <nl> tasks . withType ( JavaCompile ) { <nl> - compileTask - > compileTask . dependsOn < < [ buildOsmAndCore , cleanupDuplicatesInCore ] <nl> + compileTask - > compileTask . dependsOn < < [ collectExternalResources , buildOsmAndCore , cleanupDuplicatesInCore ] <nl> } <nl> repositories { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> - nettyVersion = ' 4 . 1 . 0 . Final ' <nl> + nettyVersion = ' 4 . 1 . 1 . Final ' <nl> slf4jVersion = ' 1 . 7 . 21 ' <nl> commonsIoVersion = ' 2 . 5 ' <nl> jacksonVersion = ' 2 . 7 . 4 ' <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> - / / Quick fix for this project not being compilable on Java 5 <nl> - if ( buildTypes . active & & ! buildTypes . isActive ( " performanceTest " ) ) { <nl> - tasks . all { it . enabled = false } <nl> - } <nl> - <nl> apply from : ' src / generator . groovy ' <nl> configurations { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " osgi " <nl> group = " org . reactivestreams " <nl> - version = " 1 . 0 . 0 . RC4 " <nl> + version = " 1 . 0 . 0 . RC5 " <nl> sourceCompatibility = 1 . 6 <nl> targetCompatibility = 1 . 6 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> avsGroup = ' com . wire ' <nl> / / proprietary avs artifact config <nl> - customAvsVersion = ' 2 . 9 . 11 @ aar ' <nl> + customAvsVersion = ' 2 . 9 . 3 @ aar ' <nl> customAvsInternalVersion = customAvsVersion <nl> customAvsName = ' avs ' <nl> customAvsGroup = ' com . wearezeta . avs ' <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> task downloadDependencies < < { <nl> } <nl> } <nl> } <nl> + <nl> + task sanityCheck { t - > <nl> + allprojects { <nl> + dependsOn it . tasks . withType ( CodeNarc ) <nl> + dependsOn it . tasks . withType ( Checkstyle ) <nl> + } <nl> + } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : libraries : pagerslidingtabstrip ' <nl> include ' : libraries : android - menudrawer ' <nl> include ' : libraries : stickygridheaders ' <nl> include ' : SeriesGuide ' <nl> - include ' : SeriesGuideX ' <nl> \ No newline at end of file <nl> + include ' : SeriesGuideFree ' <nl> \ No newline at end of file <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 5 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 6 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / moco - runner / build . gradle <nl> ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> - logbackVersion = ' 1 . 1 . 8 ' <nl> + logbackVersion = ' 1 . 1 . 9 ' <nl> commonsCliVersion = ' 1 . 3 . 1 ' <nl> } <nl> 
new file mode 100644 <nl> index 000000000 . . 6c108df4c <nl> mmm / dev / null <nl> ppp b / settings . gradle <nl> + / / empty file to prevent Gradle searching upper directories for settings . gradle <nl> + / / please remove this comment when this file contains any configuration <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 2b1 ' <nl> + version = ' 2 . 2b2 ' <nl> if ( ! ( ' release ' in gradle . startParameter . taskNames ) ) { <nl> def versionSuffix <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' requery - persistence ' <nl> include ' : requery ' <nl> include ' : requery - processor ' <nl> include ' : requery - test ' <nl> 
mmm a / sample - kotlin / build . gradle <nl> ppp b / sample - kotlin / build . gradle <nl> android { <nl> } <nl> } <nl> sourceSets { <nl> + main . java . srcDirs + = ' src / main / kotlin ' <nl> } <nl> } <nl> 
mmm a / fragmentation / build . gradle <nl> ppp b / fragmentation / build . gradle <nl> android { <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> } <nl> - } <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> nebulaRelease { <nl> } <nl> / / the snapshot versioning should increment the path number <nl> - release . scope = patch <nl> + / / release . scope = patch / / this isn ' t working yet <nl> if ( project . hasProperty ( ' release . useLastTag ' ) ) { <nl> tasks . prepare . enabled = false <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> maven { <nl> url " https : / / dl . bintray . com / wire - android / third - party " <nl> } <nl> - mavenCentral ( ) <nl> jcenter ( ) <nl> + mavenCentral ( ) <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' android - library ' <nl> android { <nl> - compileSdkVersion 16 <nl> + compileSdkVersion 17 <nl> buildToolsVersion ' 17 . 0 . 0 ' <nl> sourceSets { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> compile ' com . android . support : appcompat - v7 : 21 . 0 . 3 ' <nl> compile ' com . android . support : recyclerview - v7 : 21 . + ' <nl> + compile ' com . yqritc : recyclerview - flexibledivider : 1 . 0 . 0 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> pmdMain { <nl> } <nl> } <nl> - build . dependsOn pmdMain <nl> - <nl> task pmdPrint ( dependsOn : ' pmdMain ' ) < < { <nl> File file = new File ( ' build / reports / pmd / main . xml ' ) <nl> if ( file . exists ( ) ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15004 <nl> - versionName = ' 15 . 0 . 2 ' <nl> + versionCode = 15005 <nl> + versionName = ' 15 . 0 . 3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / grails - hibernate / build . gradle <nl> ppp b / grails - hibernate / build . gradle <nl> dependencies { <nl> runtime ( ' antlr : antlr : 2 . 7 . 7 ' ) { <nl> exclude group : ' commons - logging ' , module : ' commons - logging ' <nl> } <nl> + runtime ' javax . validation : validation - api : 1 . 0 . 0 . GA ' <nl> } <nl> test { <nl> 
mmm a / subprojects / model - core / model - core . gradle <nl> ppp b / subprojects / model - core / model - core . gradle <nl> useClassycle ( exclude : [ <nl> ] ) <nl> strictCompileIgnoreDeprecations ( ) <nl> - verifyTestFilesCleanup . errorWhenNotEmpty = false <nl> - <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' } ) { <nl> evaluationDependsOn ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> - version = ' 3 . 1 . 0 - SNAPSHOT ' <nl> + version = ' 3 . 1 . 0 ' <nl> sourceCompatibility = JavaVersion . VERSION_1_6 <nl> targetCompatibility = JavaVersion . VERSION_1_6 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> javadoc { <nl> options . bottom = " < i > Copyright & # 169 ; 2011 - $ { Calendar . instance [ Calendar . YEAR ] } LMAX Ltd . All Rights Reserved . < / i > " <nl> options . use = true <nl> options . version = true <nl> - options . windowTitle = ' Disruptor API ' <nl> + options . showFromPublic ( ) <nl> } <nl> jar { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> repositories { <nl> + jcenter ( ) <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 0 . 1 ' <nl> } <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " alpha - 5 " <nl> - versionCode 251 <nl> + versionName " alpha - 6 " <nl> + versionCode 252 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
new file mode 100644 <nl> index 000000000 . . 6e8fc1c02 <nl> mmm / dev / null <nl> ppp b / buildSrc / build . gradle <nl> + dependencies { <nl> + compile files ( " $ { System . getProperty ( ' java . home ' ) } / . . / lib / tools . jar " ) <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> checkstyleMain . doLast { <nl> } <nl> dependencies { <nl> + compile ' com . squareup . okio : okio : 1 . 9 . 0 ' <nl> compile ' com . squareup . moshi : moshi : 1 . 2 . 0 ' <nl> compile ' com . annimon : stream : 1 . 1 . 1 ' <nl> compile ' com . squareup . okhttp3 : okhttp : 3 . 4 . 0 - RC1 ' <nl> 
mmm a / gradle / javadoc . gradle <nl> ppp b / gradle / javadoc . gradle <nl> task mockitoJavadoc ( type : Javadoc ) { <nl> doLast { <nl> copy { <nl> + / / TODO SF move ' javadoc ' to src and make ' src ' - > ' src / main / java ' <nl> from " javadoc " <nl> into " $ buildDir / javadoc " <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 4 . 2 - rc - 2 " <nl> - versionCode 190 <nl> + versionName " 4 . 2 " <nl> + versionCode 191 <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 159 <nl> - versionName " 3 . 1 . 0 . 2 " <nl> + versionCode 160 <nl> + versionName " 3 . 1 . 0 . 3 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / spock - specs / build . gradle <nl> ppp b / spock - specs / build . gradle <nl> dependencies { <nl> testRuntime libs . h2database <nl> } <nl> + tasks . withType ( Test ) { <nl> + maxParallelForks Math . max ( 2 , ( int ) ( Runtime . runtime . availableProcessors ( ) / 2 ) ) <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavenDeployer { <nl> repository ( url : uri ( " $ rootProject . ext . supportRepoOut " ) ) <nl> - } <nl> + <nl> + / / Disable unique names for SNAPSHOTS so they can be updated in place . <nl> + setUniqueVersion ( false ) <nl> + } <nl> } <nl> } <nl> 
mmm a / demo / extras / build . gradle <nl> ppp b / demo / extras / build . gradle <nl> - buildscript { <nl> - repositories { <nl> - mavenCentral ( ) <nl> - } <nl> - dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 7 . + ' <nl> - } <nl> - } <nl> + <nl> apply plugin : ' android ' <nl> repositories { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 187 <nl> - versionName " 3 . 1 . 4 . 1 " <nl> + versionCode 188 <nl> + versionName " 3 . 1 . 4 . 2 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> def setBuildFile ( project ) { <nl> } <nl> setBuildFile ( rootProject ) <nl> - rootProject . children . each { <nl> - setBuildFile ( it ) <nl> - } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - rc3 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> 
mmm a / viewanimator / build . gradle <nl> ppp b / viewanimator / build . gradle <nl> dependencies { <nl> ext { <nl> bintrayRepo = ' maven ' <nl> - bintrayName = ' GlidePalette ' <nl> + bintrayName = ' ViewAnimator ' <nl> orgName = ' florent37 ' <nl> publishedGroupId = ' com . github . florent37 ' <nl> 
mmm a / smack - core / build . gradle <nl> ppp b / smack - core / build . gradle <nl> class CreateFileTask extends DefaultTask { <nl> } <nl> task createVersionResource ( type : CreateFileTask ) { <nl> - fileContent = version <nl> + fileContent = version + ' ( ' + gitCommit + ' ) ' <nl> outputFile = new File ( projectDir , ' src / main / resources / org . jivesoftware . smack / version ' ) <nl> } <nl> 
mmm a / project / Libraries / DroidPlugin / build . gradle <nl> ppp b / project / Libraries / DroidPlugin / build . gradle <nl> android { <nl> renderscript . srcDirs = [ ' src ' ] <nl> res . srcDirs = [ ' res ' ] <nl> assets . srcDirs = [ ' assets ' ] <nl> + jniLibs . srcDirs = [ ' libs ' ] <nl> } <nl> instrumentTest . setRoot ( ' tests ' ) <nl> 
mmm a / json2view / build . gradle <nl> ppp b / json2view / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> + androidTestCompile ' junit : junit : 4 . 12 ' <nl> compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> } <nl> 
mmm a / blurringview / build . gradle <nl> ppp b / blurringview / build . gradle <nl> android { <nl> uploadArchives { <nl> repositories . mavenDeployer { <nl> - pom . groupId = ' com . 500px ' <nl> + pom . groupId = ' com . fivehundredpx ' <nl> pom . artifactId = ' blurringview ' <nl> pom . version = android . defaultConfig . versionName <nl> repository ( url : " file : . / releases / " ) <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> if ( project . hasProperty ( ' pushall ' ) | | project . hasProperty ( ' libraryonly ' ) ) { <nl> } <nl> dependencies { <nl> - compile " com . mikepenz : iconics - core : + " <nl> + compile " com . mikepenz : iconics - core : 1 . 5 . 1 " <nl> } <nl> 
mmm a / realm / build . gradle <nl> ppp b / realm / build . gradle <nl> dependencies { <nl> android { <nl> compileSdkVersion 19 <nl> buildToolsVersion ' 20 . 0 . 0 ' <nl> + <nl> + defaultConfig { <nl> + minSdkVersion 9 <nl> + targetSdkVersion 19 <nl> + } <nl> } <nl> android . libraryVariants . all { variant - > <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> exclude ' META - INF / NOTICE ' <nl> } <nl> } <nl> + <nl> + task testsOnJVM ( type : GradleBuild , dependsOn : assemble ) { <nl> + buildFile = ' tests - on - jvm / build . gradle ' <nl> + tasks = [ ' test ' ] <nl> + } <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> repositories { <nl> android { <nl> - compileSdkVersion Integer . parseInt ( project . ANDROID_BUILD_SDK_VERSION ) <nl> + compileSdkVersion Integer . parseInt ( project . ANDROID_BUILD_COMPILE_SDK_VERSION ) <nl> buildToolsVersion project . ANDROID_BUILD_TOOLS_VERSION <nl> defaultConfig { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> defaultTasks ' build ' <nl> group = ' com . lmax ' <nl> - version = new Version ( major : 3 , minor : 3 , revision : 5 , stage : " rc2 " ) <nl> + version = new Version ( major : 3 , minor : 3 , revision : 5 ) <nl> ext { <nl> fullName = ' Disruptor Framework ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15051 <nl> - versionName = ' 19 - beta2 ' <nl> + versionCode = 15052 <nl> + versionName = ' 19 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> / / We haven ' t been ready for Marshmallow ' s permission model yet . <nl> / / noinspection OldTargetApi <nl> targetSdkVersion 22 <nl> - versionCode 3 <nl> - versionName " 1 . 0 . 0 - beta . 1 " <nl> + versionCode 4 <nl> + versionName " 1 . 0 . 0 - beta . 2 " <nl> } <nl> buildTypes { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . android . testOptions . unitTests . all { <nl> testLogging { <nl> events ' passed ' , ' skipped ' , ' failed ' , ' standardOut ' , ' standardError ' <nl> + exceptionFormat ' full ' <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15093 <nl> - versionName = ' 22 . 0 . 0 - beta4 ' <nl> + versionCode = 15094 <nl> + versionName = ' 22 . 0 . 0 - beta5 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / rajawali / build . gradle <nl> ppp b / rajawali / build . gradle <nl> version = VERSION_NAME <nl> status = ' debug ' <nl> android { <nl> - compileSdkVersion 21 <nl> - buildToolsVersion " 21 . 1 . 2 " <nl> + compileSdkVersion 22 <nl> + buildToolsVersion " 22 . 0 . 0 " <nl> defaultConfig { <nl> minSdkVersion 15 <nl> - targetSdkVersion 21 <nl> + targetSdkVersion 22 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> - compile ( ' com . mikepenz : aboutlibraries : 5 . 0 . 0 @ aar ' ) { <nl> + compile ( ' com . mikepenz : aboutlibraries : 5 . 0 . 5 @ aar ' ) { <nl> transitive = true <nl> } <nl> } <nl> 
mmm a / examples / performance / build . gradle <nl> ppp b / examples / performance / build . gradle <nl> android { <nl> buildTypes { <nl> release { <nl> runProguard false <nl> - proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> + / / proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> } <nl> 
mmm a / quasar - kotlin / build . gradle <nl> ppp b / quasar - kotlin / build . gradle <nl> dependencies { <nl> compile project ( ' : quasar - actors ' ) <nl> compile " org . jetbrains . kotlin : kotlin - stdlib : 0 . 1 - SNAPSHOT " <nl> + compile " org . jetbrains . kotlin : kotlin - reflect : 0 . 1 - SNAPSHOT " <nl> } <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> sourceCompatibility = 1 . 7 <nl> targetCompatibility = 1 . 7 <nl> group = ' com . github . tomakehurst ' <nl> - version = ' 2 . 0 . 10 - beta ' <nl> + version = ' 2 . 0 . 11 - beta ' <nl> def shouldPublishLocally = System . getProperty ( ' LOCAL_PUBLISH ' ) <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> } <nl> ext { <nl> - supportVersion = ' 23 . 1 . 0 ' <nl> + supportVersion = ' 23 . 1 . 1 ' <nl> okHttpVersion = ' 2 . 5 . 0 ' <nl> daggerVersion = ' 1 . 2 . 2 ' <nl> } <nl> 
mmm a / bbb - common - message / build . gradle <nl> ppp b / bbb - common - message / build . gradle <nl> artifacts { <nl> } <nl> repositories { <nl> - flatDir ( name : ' fileRepo ' , dirs : " / home / firstuser / dev / repo " ) <nl> + flatDir ( name : ' fileRepo ' , dirs : " / opt / bigbluebutton / repo " ) <nl> } <nl> uploadArchives { <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> publishing { <nl> github { <nl> owner = ' albertlatacz ' <nl> repo = ' java - repl ' <nl> - token = System . getenv ( ' GITHUB_TOKEN ' ) <nl> + token = System . getenv ( ' GITHUB_TOKEN ' ) = = null ? " UNSPECIFIED " : System . getenv ( ' GITHUB_TOKEN ' ) <nl> tagName = projectVersion <nl> targetCommitish = ' master ' <nl> assets = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> avsGroup = ' com . wire . avs ' <nl> / / proprietary avs artifact config <nl> - customAvsVersion = ' 2 . 8 . 7 @ aar ' <nl> + customAvsVersion = ' 2 . 8 . 8 @ aar ' <nl> customAvsInternalVersion = customAvsVersion <nl> customAvsName = ' avs ' <nl> customAvsGroup = ' com . wearezeta . avs ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configurations { <nl> } <nl> ext { <nl> - antVersion = ' 1 . 9 . 6 ' <nl> + antVersion = ' 1 . 9 . 7 ' <nl> asmVersion = ' 5 . 1 ' <nl> antlrVersion = ' 2 . 7 . 7 ' <nl> coberturaVersion = ' 1 . 9 . 4 . 1 ' <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - alpha6 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 16 . 0 . 1 ' <nl> - nettyVersion = ' 4 . 0 . 15 . Final ' <nl> + nettyVersion = ' 4 . 0 . 17 . Final ' <nl> slf4jVersion = ' 1 . 7 . 6 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 3 . 1 ' <nl> 
mmm a / gradle / testGroupings . gradle <nl> ppp b / gradle / testGroupings . gradle <nl> ext . testGroupings = [ <nl> " runtimeIntegTests " : " integTest " , <nl> " runtimeForkingIntegTests " : " forkingIntegTest " , <nl> " runtimeDaemonIntegTests " : " daemonIntegTest " , <nl> - " runtimeParallelIntegTest " : " parallelIntegTest " <nl> + " runtimeParallelIntegTests " : " parallelIntegTest " <nl> ] <nl> testGroupings . each { grouping , testTask - > <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 21 <nl> - buildToolsVersion " 21 . 1 . 1 " <nl> + buildToolsVersion " 21 . 1 . 2 " <nl> defaultConfig { <nl> applicationId " io . github . izzyleung . zhihudailypurify " <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> android { <nl> dependencies { <nl> compile ' com . android . support : appcompat - v7 : 19 . + ' <nl> + compile ' com . larswerkman : HoloColorPicker : 1 . 4 ' <nl> compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> compile project ( ' : library ' ) <nl> } <nl> 
mmm a / grails - plugin - converters / build . gradle <nl> ppp b / grails - plugin - converters / build . gradle <nl> dependencies { <nl> compile " commons - lang : commons - lang : $ commonsLangVersion " <nl> - compile " commons - io : commons - io : $ { commonsIOVersion } " <nl> compile project ( " : grails - web " ) , <nl> project ( ' : grails - plugin - domain - class ' ) <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : app ' , ' : library ' <nl> + include ' : app ' , ' : library ' , ' : blogcodes ' <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> if ( isCloudCi ) { <nl> doFirst { <nl> maxParallelForks 1 <nl> - forkEvery 10 <nl> + if ( isTravis ) { <nl> + forkEvery 1 <nl> + } <nl> } <nl> } <nl> } <nl> 
mmm a / subprojects / docs / src / samples / native - binaries / variants / build . gradle <nl> ppp b / subprojects / docs / src / samples / native - binaries / variants / build . gradle <nl> model { <nl> / / START SNIPPET target - platforms <nl> executables { <nl> main { <nl> - targetPlatforms " x86 " , " x64 " <nl> + targetPlatform " x86 " , " x64 " <nl> } <nl> } <nl> / / END SNIPPET target - platforms <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 188 <nl> - versionName " 9 . 1 - beta1 " <nl> + versionCode 189 <nl> + versionName " 9 . 1 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> ext { <nl> supportVersion = ' 23 . 4 . 0 ' <nl> okHttpVersion = ' 3 . 3 . 1 ' <nl> - daggerVersion = ' 1 . 2 . 2 ' <nl> + daggerVersion = ' 1 . 2 . 5 ' <nl> leakCanaryVersion = ' 1 . 4 - beta2 ' <nl> retrofitVersion = ' 2 . 0 . 2 ' <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> } <nl> } <nl> - apply from : ' . . / maven_push . gradle ' <nl> + / / apply from : ' . . / maven_push . gradle ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> into archivesBaseName <nl> destinationDir project . parent . ext . distDir <nl> baseName = project . group <nl> + version = project . parent . ext . buildNumber <nl> } <nl> project . parent . createArchive . dependsOn createSeparateZip <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> android { <nl> signingConfigs { <nl> release { <nl> - storeFile file ( WASABEEF_KEYSTORE ) <nl> - keyAlias WASABEEF_KEYALIAS <nl> - storePassword WASABEEF_KEYSTOREPASSWORD <nl> - keyPassword WASABEEF_KEYALIASPASSWORD <nl> + storeFile file ( keyStoreProperty ) <nl> + keyAlias keyAliasProperty <nl> + storePassword keyStorePasswordProperty <nl> + keyPassword keyAliasPasswordProperty <nl> } <nl> } <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> jvmArgs " - Xss320k " <nl> / / Same min and max heap to fail fast if we can ' t allocate memory <nl> - minHeapSize " 312m " <nl> - maxHeapSize " 312m " <nl> + minHeapSize " 368m " <nl> + maxHeapSize " 368m " <nl> if ( isCloudCi ) { <nl> doFirst { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 243 <nl> - versionName ' 3 . 3 . 25 ' <nl> + versionCode 244 <nl> + versionName ' 3 . 3 . 26 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : driver - compat ' ) { <nl> clirr { <nl> formats = [ ' xml ' , ' html ' ] <nl> - baseline ' org . mongodb : mongo - java - driver : 2 . 10 . 1 ' <nl> + baseline ' org . mongodb : mongo - java - driver : 2 . 11 . 0 ' <nl> failOnBinError = false <nl> failOnSrcError = false <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task distDoc ( type : Zip , dependsOn : doc ) { <nl> } <nl> task syncDoc ( type : Copy , dependsOn : doc ) { <nl> + inputs . files javadoc . outputs . files <nl> + inputs . files groovydoc . outputs . files <nl> + <nl> destinationDir ( file ( " $ buildDir / html " ) ) <nl> into ( ' api ' ) { <nl> from javadoc . destinationDir <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 175 <nl> - versionName " 3 . 1 . 1 . 3 " <nl> + versionCode 176 <nl> + versionName " 3 . 1 . 1 . 4 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15003 <nl> - versionName = ' 15 . 0 . 1 ' <nl> + versionCode = 15004 <nl> + versionName = ' 15 . 0 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> java . srcDirs = [ ' src ' ] <nl> res . srcDirs = [ ' res ' ] <nl> } <nl> + <nl> + instrumentTest { <nl> + manifest . srcFile ' tests / AndroidManifest . xml ' <nl> + java . srcDirs = [ ' tests / src ' ] <nl> + } <nl> } <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> repositories { <nl> apply plugin : ' com . android . application ' <nl> apply plugin : ' android - cq ' <nl> + apply plugin : ' io . fabric ' <nl> android { <nl> useLibrary ' org . apache . http . legacy ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> - guavaVersion = ' 14 . 0 . 1 ' <nl> + guavaVersion = ' 15 . 0 ' <nl> nettyVersion = ' 4 . 0 . 9 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> 
