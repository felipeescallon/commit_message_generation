mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 233 <nl> - versionName ' 3 . 3 . 15 ' <nl> + versionCode 234 <nl> + versionName ' 3 . 3 . 16 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> - classpath ' io . freefair : gradle - plugins : 0a610f7 ' <nl> + classpath ' io . freefair : gradle - plugins : 2 . 0 . 0 - beta5 ' <nl> } <nl> } <nl> 
mmm a / gradle / publish . gradle <nl> ppp b / gradle / publish . gradle <nl> artifacts { <nl> } <nl> uploadArchives { task - > <nl> + onlyIf { ! project . hasProperty ( " noUpload " ) } <nl> + <nl> gradle . taskGraph . whenReady { graph - > <nl> if ( graph . hasTask ( task ) ) { <nl> / / check properties defined and fail early <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile ' com . squareup . okhttp3 : okhttp : 3 . 1 . 2 ' <nl> + compile ' com . squareup . okhttp3 : okhttp : 3 . 2 . 0 ' <nl> } <nl> apply from : ' https : / / raw . githubusercontent . com / Jacksgong / JCenter / master / license . gradle ' <nl> 
mmm a / libraries / drag - sort - listview / build . gradle <nl> ppp b / libraries / drag - sort - listview / build . gradle <nl> android { <nl> buildToolsVersion rootProject . ext . buildToolsVersion <nl> defaultConfig { <nl> + minSdkVersion 9 <nl> versionCode 4 <nl> versionName " 0 . 6 . 1 " <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task pluginsFromSvn { <nl> } <nl> } <nl> - binExecutables = [ " cygrails " , " grails " , " grails - debug " ] <nl> + binExecutables = [ " cygrails " , " grails " , " grails - debug " , " grails - debug . bat " , " grails . bat " ] <nl> distSpec = copySpec { <nl> from ( projectDir ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> compileSdkVersion 19 <nl> buildToolsVersion ' 20 . 0 . 0 ' <nl> + defaultConfig { <nl> + minSdkVersion 15 <nl> + targetSdkVersion 17 <nl> + } <nl> + <nl> dexOptions { <nl> preDexLibraries = rootProject . ext . preDexLibs <nl> } <nl> 
mmm a / gradle / test . gradle <nl> ppp b / gradle / test . gradle <nl> logger . lifecycle " Detected $ { isRunningOnCI ( ) ? ' Continuous Integration environment <nl> allprojects { <nl> test { <nl> - forkEvery = isRunningOnCI ( ) ? 400 : 200 <nl> + forkEvery = isRunningOnCI ( ) ? 50 : 200 <nl> maxParallelForks = isRunningOnCI ( ) ? 1 : Runtime . runtime . availableProcessors ( ) <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 43 <nl> + versionCode 44 <nl> versionName " 2 . 5 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 20 <nl> + versionCode 21 <nl> versionName " 1 . 6 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> } <nl> 
mmm a / subprojects / launcher / launcher . gradle <nl> ppp b / subprojects / launcher / launcher . gradle <nl> dependencies { <nl> compile project ( ' : core ' ) <nl> compile project ( ' : ui ' ) <nl> + <nl> + runtime project ( ' : plugins ' ) <nl> + runtime project ( ' : codeQuality ' ) <nl> compile libraries . slf4j_api <nl> 
mmm a / gradle / javaModule . gradle <nl> ppp b / gradle / javaModule . gradle <nl> tasks . withType ( Test ) { <nl> } <nl> jacoco { <nl> - toolVersion = " 0 . 7 . 2 . 201409121644 " <nl> + toolVersion = " 0 . 7 . 6 . 201602180812 " <nl> } <nl> task codeQuality { <nl> 
mmm a / grails - shell / build . gradle <nl> ppp b / grails - shell / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> - gradleToolingApiVersion = " 2 . 3 - 20141120230022 + 0000 " / / gradle . gradleVersion <nl> + gradleToolingApiVersion = " 2 . 3 - 20141218230037 + 0000 " / / gradle . gradleVersion <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> } <nl> } <nl> + / / At a test failure , log the stack trace to the console so that we don ' t <nl> + / / have to open the HTML in a browser . <nl> + test { <nl> + testLogging { <nl> + exceptionFormat = ' full ' <nl> + } <nl> + } <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> def modules = [ <nl> ' databus - core ' , <nl> ' databus - events ' , <nl> ' databus - group - leader ' , <nl> - / / ' databus - profile - client ' , <nl> + ' databus - profile - client ' , <nl> / / ' databus - profile - relay ' , <nl> ' databus - relay ' , <nl> ' databus - util - cmdline ' , <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11248 <nl> - versionName = ' 13 - beta5 ' <nl> + versionCode = 11249 <nl> + versionName = ' 13 - beta6 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 24 . Final ' <nl> + nettyVersion = ' 4 . 0 . 25 . Final ' <nl> slf4jVersion = ' 1 . 7 . 9 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 4 . 4 ' <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - rc1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - alpha1 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 189 <nl> - versionName " 3 . 1 . 5 " <nl> + versionCode 190 <nl> + versionName " 3 . 1 . 5 . 1 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 8 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 9 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15113 <nl> - versionName = ' 23 - beta4 ' <nl> + versionCode = 15114 <nl> + versionName = ' 23 - beta5 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - alpha6 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 0 - alpha7 ' <nl> + isSnapshot = true <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects <nl> apply plugin : ' java ' <nl> group = ' com . netflix . curator ' <nl> - version = " 0 . 4 . 1 " <nl> + version = " 0 . 4 . 2 - SNAPSHOT " <nl> repositories <nl> { <nl> - mavenCentral ( ) <nl> + mavenCentral ( ) <nl> } <nl> dependencies <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> applicationId " com . oguzdev . circularfloatingactionmenu . library " <nl> minSdkVersion 15 <nl> targetSdkVersion 19 <nl> - versionCode 2 <nl> - versionName " 1 . 0 . 1 " <nl> + versionCode 3 <nl> + versionName " 1 . 0 . 2 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 2 ' <nl> + version = ' 2 . 0 . 3 ' <nl> def jarVersion = version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( JavaVersion . current ( ) . isJava8Compatible ( ) ) { <nl> task fetchNatives < < { <nl> ant . importBuild " fetch . xml " <nl> fetch . execute ( ) <nl> + copy . execute ( ) <nl> } <nl> 
mmm a / gradle / code_quality . gradle <nl> ppp b / gradle / code_quality . gradle <nl> tasks . withType ( Pmd ) { <nl> } <nl> } <nl> + jacoco . reportsDir = file ( " $ { rootDir } / build / reports / jacoco " ) <nl> + <nl> jacocoTestReport { <nl> reports { <nl> xml . enabled = true <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11261 <nl> - versionName = ' 14 - beta4 ' <nl> + versionCode = 11262 <nl> + versionName = ' 14 - beta5 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> / / applicationId " me . drakeet . materialdialog " <nl> minSdkVersion 9 <nl> targetSdkVersion 22 <nl> - versionCode 16 <nl> - versionName " 1 . 2 . 8 " <nl> + versionCode 30 <nl> + versionName " 1 . 3 . 0 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / gradle / performanceTest . gradle <nl> ppp b / gradle / performanceTest . gradle <nl> class PerformanceReport extends JavaExec { <nl> tasks . withType ( ProjectGeneratorTask ) { <nl> sharedTemplateDirectory = project . findProject ( ' : internalPerformanceTesting ' ) . file ( ' src / templates ' ) <nl> - } <nl> - <nl> - tasks . withType ( JvmProjectGeneratorTask ) { <nl> dependsOn ' : internalPerformanceTesting : measurementPluginJar ' <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 211 <nl> - versionName ' 3 . 2 . 7 ' <nl> + versionCode 212 <nl> + versionName ' 3 . 2 . 8 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' } ) { <nl> evaluationDependsOn ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> - version = ' 3 . 1 . 0 ' <nl> + version = ' 3 . 2 . 0 - SNAPSHOT ' <nl> sourceCompatibility = JavaVersion . VERSION_1_6 <nl> targetCompatibility = JavaVersion . VERSION_1_6 <nl> 
mmm a / gradle / bintray . gradle <nl> ppp b / gradle / bintray . gradle <nl> if ( ! bintrayUser ) { <nl> } <nl> } <nl> + logger . lifecycle " Bintray user : $ bintrayUser " <nl> + <nl> allprojects { <nl> apply plugin : ' artifactory ' <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 2 " <nl> + buildToolsVersion " 23 . 0 . 3 " <nl> defaultConfig { <nl> applicationId " com . avocarrot . json2view " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : astyanax - core ' ) { <nl> } <nl> jar { <nl> dependsOn configurations . runtime <nl> + baseName = ' astyanax - all ' <nl> from { configurations . runtime . collect { it . isDirectory ( ) ? it : zipTree ( it ) } } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> signing { <nl> sign configurations . archives <nl> - required { gradle . taskGraph . hasTask ( uploadArchives ) } <nl> } <nl> - tasks . withType ( Compile ) { task - > <nl> - options . useAnt = false <nl> + signArchives { <nl> + onlyIf { gradle . taskGraph . hasTask ( uploadArchives ) } <nl> } <nl> configureJavadoc ( javadoc ) <nl> 
mmm a / subprojects / scala / scala . gradle <nl> ppp b / subprojects / scala / scala . gradle <nl> if ( ! javaVersion . java6Compatible ) { <nl> sourceSets . test . groovy . exclude " org / gradle / api / internal / tasks / scala / ZincScalaCompilerIntegrationTest . * " <nl> } <nl> - integTest { <nl> + configure ( [ integTest , daemonIntegTest ] ) { <nl> jvmArgs " - XX : MaxPermSize = 1g " / / AntScalaCompilerIntegrationTest needs lots of permgen <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> rxJavaVersion = " 1 . 1 . 0 " <nl> rxJavaRulesVersion = " 1 . 1 . 0 . 0 " <nl> - audioPlayerVersion = " v1 . 0 . 12 " <nl> + audioPlayerVersion = " v1 . 0 . 13 " <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 156 <nl> - versionName " 3 . 0 . 6 . 5 " <nl> + versionCode 157 <nl> + versionName " 3 . 1 . 0 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - rootProject . name = ' PokeGOAPI - Java ' <nl> include ' : library ' , ' : sample ' <nl> \ No newline at end of file <nl> 
mmm a / ratpack - hystrix / ratpack - hystrix . gradle <nl> ppp b / ratpack - hystrix / ratpack - hystrix . gradle <nl> dependencies { <nl> compile commonDependencies . jackson <nl> testCompile project ( " : ratpack - rx " ) <nl> + } <nl> + <nl> + test { <nl> + forkEvery 1 <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> plugins . withType ( JavaPlugin ) { <nl> plugins . apply ( ' eclipse ' ) <nl> + plugins . apply ( ' idea ' ) <nl> if ( System . getProperty ( ' open_source ' ) ! = null ) { <nl> plugins . apply ( ' findbugs ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 79 <nl> - versionName " 1 . 5 . 1 " <nl> + versionCode 80 <nl> + versionName " 1 . 5 . 2 " <nl> } <nl> compileOptions { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> intellij { <nl> / / password publishPassword <nl> / / } <nl> } <nl> - <nl> - dependencies { <nl> - compile group : ' org . swinglabs . swingx ' , name : ' swingx - all ' , version : ' 1 . 6 . 3 ' <nl> - } <nl> - <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> dependencies { <nl> compile project ( ' : ' ) <nl> + testCompile group : ' junit ' , name : ' junit ' , version : ' 4 . 10 ' <nl> } <nl> } <nl> } <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / grails - test - suite - persistence / build . gradle <nl> ppp b / grails - test - suite - persistence / build . gradle <nl> dependencies { <nl> } <nl> test { <nl> maxParallelForks = 2 <nl> - jvmArgs = [ ' - Xmx2048M ' , ' - XX : MaxPermSize = 256m ' ] <nl> + forkEvery = 200 <nl> + jvmArgs = [ ' - Xmx1048M ' , ' - XX : MaxPermSize = 256m ' ] <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> targetSdkVersion 23 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> - buildConfigField " String " , " PROJECT_URL " , ' " https : / / github . com / renaudcerrato / toggledrawable " ' <nl> + buildConfigField " String " , " PROJECT_URL " , ' " https : / / github . com / renaudcerrato / ToggleDrawable " ' <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / AIMSICD / build . gradle <nl> ppp b / AIMSICD / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 16 <nl> targetSdkVersion 19 / / Do not change : Working Icons on Android 5 + <nl> - versionCode 39 <nl> + versionCode 40 <nl> testApplicationId " com . SecUpwN . AIMSICD . test " <nl> buildConfigField ' String ' , ' BUILD_NUMBER ' , ( getBuildNumber ( ) = = null ? ' null ' : " \ " $ { buildNumber } \ " " ) <nl> 
mmm a / modules / frontend / frontend - editors - web / build . gradle <nl> ppp b / modules / frontend / frontend - editors - web / build . gradle <nl> buildCKEditor { <nl> File ckEditorDestinationDir = new File ( editorsDestinationDir , " ckeditor " ) <nl> File ckEditorZipFile = new File ( thirdPartyDir , " ckeditor_ $ { ckEditorVersion } _liferay . zip " ) <nl> - dependsOn buildCKEditorBBCode <nl> - <nl> doFirst { <nl> delete ckEditorDestinationDir <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> test { <nl> excludes = [ " * * / * TestCase . class " , " * * / * \ $ * . class " ] <nl> + ignoreFailures = true <nl> } <nl> task sourcesJar ( type : Jar , dependsOn : classes ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 2 . 2 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 3 ' <nl> } <nl> } <nl> 
mmm a / gradle / test . gradle <nl> ppp b / gradle / test . gradle <nl> logger . lifecycle " Detected $ { isRunningOnCI ( ) ? ' Continuous Integration environment <nl> allprojects { <nl> test { <nl> - forkEvery = isRunningOnCI ( ) ? 400 : 200 <nl> + forkEvery = isRunningOnCI ( ) ? 50 : 200 <nl> maxParallelForks = isRunningOnCI ( ) ? 1 : Runtime . runtime . availableProcessors ( ) <nl> } <nl> } <nl> 
mmm a / OsmAnd / build . gradle <nl> ppp b / OsmAnd / build . gradle <nl> repositories { <nl> } <nl> } <nl> mavenCentral ( ) <nl> - jcenter ( ) <nl> + / / jcenter ( ) <nl> } <nl> def analytics = ( System . getenv ( " APP_FEATURES " ) & & System . getenv ( " APP_FEATURES " ) . contains ( " + play_market " ) & & <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " jacoco " <nl> group = " io . grpc " <nl> - version = " 0 . 8 . 0 - SNAPSHOT " <nl> + version = " 0 . 9 . 0 - SNAPSHOT " <nl> sourceCompatibility = 1 . 6 <nl> targetCompatibility = 1 . 6 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 77 <nl> - versionName " 1 . 5 . 0 - beta . 2 " <nl> + versionCode 78 <nl> + versionName " 1 . 5 . 0 " <nl> } <nl> compileOptions { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> / / dist <nl> - ext . distPath = " $ rootProject . buildDir / dist - " + project . version <nl> + ext . distPath = " $ rootProject . buildDir / dist " <nl> task collectJars ( type : Copy , overwrite : true ) { <nl> into " $ project . ext . distPath / libs " <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 125 <nl> + versionCode 126 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> grailsVersion = ' 1 . 4 . 0 . BUILD - SNAPSHOT ' <nl> antVersion = " 1 . 8 . 2 " <nl> - antNodepsVersion = " 1 . 8 . 1 " <nl> antTraxVersion = " 1 . 7 . 1 " <nl> springVersion = " 3 . 0 . 5 . RELEASE " <nl> ivyVersion = " 2 . 2 . 0 " <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 181 <nl> - versionName " 3 . 1 . 3 " <nl> + versionCode 182 <nl> + versionName " 3 . 1 . 3 . 1 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> / / project and then reference this from the modules <nl> ext { <nl> compileSdkVersion = 22 <nl> - buildToolsVersion = " 22 " <nl> + buildToolsVersion = " 22 . 0 . 1 " <nl> } <nl> allprojects { <nl> 
mmm a / gradle / versioning . gradle <nl> ppp b / gradle / versioning . gradle <nl> if ( rcNumber ! = null ) { <nl> } <nl> ext . isSnapshot = finalRelease = = false & & rcNumber = = null <nl> if ( isSnapshot ) { <nl> - version + = " $ buildTimestamp " <nl> + version + = " - $ buildTimestamp " <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { subProject - > <nl> defaultTasks ' build ' <nl> group = ' org . hibernate ' <nl> - version = ' 4 . 0 . 0 - SNAPSHOT ' <nl> + version = ' 4 . 0 . 0 . Beta5 ' <nl> / / minimize changes , at least for now ( gradle uses ' build ' by default ) . . <nl> buildDir = " target " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 0 . 1 ' <nl> } <nl> } <nl> 
mmm a / plugins / openpgp - api - library / build . gradle <nl> ppp b / plugins / openpgp - api - library / build . gradle <nl> apply plugin : ' android - library ' <nl> android { <nl> compileSdkVersion 17 <nl> - buildToolsVersion ' 19 . 0 . 1 ' <nl> + buildToolsVersion ' 19 . 0 . 3 ' <nl> / / NOTE : We are using the old folder structure to also support Eclipse <nl> sourceSets { <nl> 
mmm a / h2o - assembly / build . gradle <nl> ppp b / h2o - assembly / build . gradle <nl> description = " H2O Application Assembly " <nl> dependencies { <nl> compile project ( " : h2o - app " ) <nl> + compile project ( " : h2o - persist - hdfs " ) <nl> } <nl> fatJarPrepareFiles { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 5 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 6 . + ' <nl> } <nl> } <nl> 
mmm a / gradle / integTest . gradle <nl> ppp b / gradle / integTest . gradle <nl> dependencies { <nl> sourceSets { <nl> integTest { <nl> - compileClasspath = sourceSets . main . output + sourceSets . test . output + configurations . integTestCompile <nl> - runtimeClasspath = output + compileClasspath + configurations . integTestRuntime <nl> + compileClasspath + = sourceSets . main . output + sourceSets . test . output <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> pomConfig = { <nl> name POM_NAME <nl> - description ' test description ' <nl> + description POM_DESCRIPTION <nl> url POM_URL <nl> scm { <nl> url POM_SCM_URL <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 21 <nl> + versionCode 22 <nl> versionName " 1 . 6 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 122 <nl> + versionCode 123 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " com . etiennelawlor . quickreturn " <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> - versionCode 8 <nl> - versionName " 0 . 0 . 8 " <nl> + versionCode 9 <nl> + versionName " 0 . 0 . 9 " <nl> } <nl> signingConfigs { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11244 <nl> + versionCode = 11245 <nl> versionName = ' 13 - beta3 ' <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : fbcore ' <nl> include ' : imagepipeline ' <nl> include ' : sample ' <nl> include ' : imagepipeline - backends : imagepipeline - okhttp ' <nl> - include ' : round ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15044 <nl> - versionName = ' 18 . 0 . 1 ' <nl> + versionCode = 15045 <nl> + versionName = ' 18 . 0 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> - import org . apache . xalan . xsltc . cmdline . Compile <nl> - <nl> Properties props = new Properties ( ) <nl> props . load ( new FileInputStream ( " $ { rootProject . projectDir } / version . properties " ) ) <nl> 
mmm a / UltimateRecyclerView / app / build . gradle <nl> ppp b / UltimateRecyclerView / app / build . gradle <nl> android { <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> repositories { <nl> flatDir { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 2 " <nl> - supportLibVersion = " 23 . 1 . 1 " <nl> + supportLibVersion = " 23 . 2 . 1 " <nl> } <nl> allprojects { <nl> 
mmm a / tileview / build . gradle <nl> ppp b / tileview / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 11 <nl> targetSdkVersion 22 <nl> - versionCode 28 <nl> + versionCode 29 <nl> versionName " 2 . 1 . 4 " <nl> } <nl> buildTypes { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> minSdkVersion = 9 <nl> compileSdkVersion = 24 <nl> targetSdkVersion = compileSdkVersion <nl> - buildToolsVersion = ' 24 . 0 . 1 ' <nl> + buildToolsVersion = ' 24 . 0 . 3 ' <nl> rxJava = ' io . reactivex : rxjava : 1 . 1 . 8 ' <nl> appCompat = ' com . android . support : appcompat - v7 : 24 . 1 . 1 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task determineCommitId { <nl> } <nl> commitId = strategies . find { it . call ( ) } <nl> + if ( ! commitId ) { <nl> + throw new InvalidUserDataException ( " Could not determine commit id " ) <nl> + } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 3 " <nl> - supportLibVersion = " 23 . 2 . 1 " <nl> + supportLibVersion = " 23 . 3 . 0 " <nl> } <nl> allprojects { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> outputJar { <nl> from extraTxts <nl> / / add crowdin locales <nl> - from { crowdin . getDidWork ( ) ? zipTree ( crowdin ) : null } <nl> + from { crowdin . getDidWork ( ) ? zipTree ( crowdin . outputs ) : null } <nl> dependsOn ' crowdin ' <nl> manifest . attributes ( [ <nl> 
mmm a / config / quality . gradle <nl> ppp b / config / quality . gradle <nl> task findbugs ( type : FindBugs ) { <nl> classes = files ( " $ project . buildDir / intermediates / classes / " ) <nl> source ' src ' <nl> - include ' * * / * . java ' <nl> + include ' * * / com / mobsandgeeks / saripaar / * . java ' <nl> exclude ' * * / gen / * * ' <nl> reports { <nl> 
mmm a / framework / build . gradle <nl> ppp b / framework / build . gradle <nl> buildscript { <nl> apply plugin : ' android - library ' <nl> + ext { <nl> + apply from : ' cordova . gradle ' <nl> + cdvCompileSdkVersion = privateHelpers . getProjectTarget ( ) <nl> + cdvBuildToolsVersion = privateHelpers . findLatestInstalledBuildTools ( ) <nl> + } <nl> + <nl> android { <nl> compileSdkVersion cdvCompileSdkVersion <nl> buildToolsVersion cdvBuildToolsVersion <nl> 
mmm a / flexbox / maven . gradle <nl> ppp b / flexbox / maven . gradle <nl> install { <nl> } <nl> } <nl> } <nl> + <nl> + task sourcesJar ( type : Jar ) { <nl> + from android . sourceSets . main . java . srcDirs <nl> + classifier = ' sources ' <nl> + } <nl> + <nl> + artifacts { <nl> + archives sourcesJar <nl> + } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> dependencies { <nl> } <nl> android { <nl> - compileSdkVersion 19 <nl> + compileSdkVersion 17 <nl> buildToolsVersion " 19 " <nl> defaultConfig { <nl> minSdkVersion 10 <nl> - targetSdkVersion 19 <nl> + targetSdkVersion 17 <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> + File javaHome = new File ( System . getProperty ( ' java . home ' ) ) <nl> + logger . lifecycle " Using Java from $ javaHome ( version $ { System . getProperty ( ' java . version ' ) } ) " <nl> + <nl> / / TODO use antlr plugin <nl> / / apply plugin : ' antlr ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> apply plugin : ' android - library ' <nl> - apply from : ' https : / / raw . github . com / chrisbanes / gradle - mvn - push / master / gradle - mvn - push . gradle ' <nl> android { <nl> compileSdkVersion 19 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha1 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha3 ' <nl> } <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> compileSdkVersion 19 <nl> defaultConfig { <nl> - minSdkVersion 8 <nl> + minSdkVersion 7 <nl> } <nl> compileOptions { <nl> 
mmm a / eureka - client - archaius2 / build . gradle <nl> ppp b / eureka - client - archaius2 / build . gradle <nl> apply plugin : ' nebula . test - jar ' <nl> - def archaius2Version = ' 2 . 1 . 6 ' <nl> + def archaius2Version = ' 2 . 1 . 7 ' <nl> sourceSets { <nl> test { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> } <nl> repositories { <nl> - mavenLocal ( ) <nl> mavenRepo ( urls : " http : / / repo . grails . org / grails / core " ) { <nl> if ( project . hasProperty ( ' snapshotTimeout ' ) ) { <nl> setSnapshotTimeout ( Long . parseLong ( project . snapshotTimeout ) ) <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' DaoTestBase ' <nl> include ' DaoTest ' <nl> include ' DaoTestPerformance ' <nl> include ' DaoTestGenerator ' <nl> - include ' DaoExample ' <nl> + / / Disable until new plugins are pushed : <nl> + / / include ' DaoExample ' <nl> 
mmm a / subprojects / scala / scala . gradle <nl> ppp b / subprojects / scala / scala . gradle <nl> if ( ! javaVersion . java6Compatible ) { <nl> sourceSets . test . groovy . exclude " org / gradle / api / internal / tasks / scala / ZincScalaCompilerIntegrationTest . * " <nl> } <nl> - integrationTest { <nl> + integTest { <nl> jvmArgs " - XX : MaxPermSize = 1g " / / AntScalaCompilerIntegrationTest needs lots of permgen <nl> } <nl> 
mmm a / config . gradle <nl> ppp b / config . gradle <nl> ext { <nl> applicationId : " me . henrytao . smoothappbarlayout " , <nl> minSdkVersion : 8 , <nl> targetSdkVersion : 23 , <nl> - versionCode : 6 , <nl> - versionName : " 0 . 1 . 4 " <nl> + versionCode : 7 , <nl> + versionName : " 0 . 1 . 5 " <nl> ] <nl> dependencies = [ <nl> 
mmm a / WordPressAnalytics / build . gradle <nl> ppp b / WordPressAnalytics / build . gradle <nl> android { <nl> buildToolsVersion " 23 . 0 . 2 " <nl> defaultConfig { <nl> - versionName " 1 . 0 . 0 " <nl> + versionName " 1 . 1 . 0 " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> } <nl> 
mmm a / gradle / unit - test . gradle <nl> ppp b / gradle / unit - test . gradle <nl> def createTestTaskWithoutSuffix ( String name , includes , excludes ) { <nl> / * classpath = classpath + project . rootProject . configurations . coverage * / <nl> classpath = sourceSets . test . runtimeClasspath + project . rootProject . configurations . coverage <nl> testClassesDir = sourceSets . test . classesDir <nl> - <nl> + <nl> + forkEvery = 1 <nl> } <nl> test . dependsOn task <nl> task . dependsOn coreJar <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - alpha1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - alpha2 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 - alpha1 ' <nl> smackMinAndroidSdk = 8 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> * / <nl> plugins { <nl> - id ' java ' / / or ' groovy ' Must be explicitly applied <nl> + id ' java ' <nl> id ' com . github . johnrengelman . shadow ' version ' 1 . 2 . 0 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> signing { <nl> } <nl> artifacts { <nl> - archives sourcesJar , javadocJar <nl> - shadow sourcesJar , javadocJar <nl> + archives sourcesJar <nl> + archives javadocJar <nl> + <nl> + shadow sourcesJar <nl> + shadow javadocJar <nl> } <nl> shadowJar { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> dependencies { <nl> compile ' com . android . support : appcompat - v7 : 22 . 2 . 0 ' <nl> - compile project ( ' : library ' ) <nl> + compile ' com . github . recruit - lifestyle : WaveSwipeRefreshLayout : 1 . 6 ' <nl> } <nl> \ No newline at end of file <nl> 
mmm a / sample - war / build . gradle <nl> ppp b / sample - war / build . gradle <nl> repositories { <nl> dependencies { <nl> compile " javax . servlet : servlet - api : 2 . 4 " <nl> compile " log4j : log4j : 1 . 2 . 16 " <nl> - compile " com . github . tomakehurst : wiremock : 1 . 18 " <nl> + compile " com . github . tomakehurst : wiremock : 1 . 19 " <nl> } <nl> 
mmm a / website / build . gradle <nl> ppp b / website / build . gradle <nl> task html ( dependsOn : configureReleases ) { <nl> copy { <nl> into buildWebsiteDir <nl> + from ( webContentSrcDir ) { <nl> + include " . htaccess " <nl> + } <nl> from ( webSrcDir ) { <nl> include ' css / * * ' <nl> include ' img / * * ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> / / Realm projects <nl> - include ' realm ' , ' : realm - annotations - processor ' <nl> + include ' realm ' <nl> / / Example projects <nl> include ' : introExample ' , <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 192 <nl> - versionName " 3 . 1 . 5 . 3 " <nl> + versionCode 193 <nl> + versionName " 3 . 1 . 6 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> buildToolsVersion " 21 . 1 . 1 " <nl> defaultConfig { <nl> - applicationId " com . afollestad . materialdialogs " <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> versionCode 1 <nl> 
mmm a / osgi / modules / portal - registry / settings . gradle <nl> ppp b / osgi / modules / portal - registry / settings . gradle <nl> - include ' portal - registry - api ' , ' portal - registry - impl ' <nl> \ No newline at end of file <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> test { <nl> testLogging { <nl> + exceptionFormat " full " <nl> quiet { <nl> events " failed " <nl> - exceptionFormat " full " <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> jar { <nl> ' Implementation - Vendor ' : ' hamcrest . org ' , <nl> ' Implementation - Version ' : version <nl> } <nl> + baseName = ' java - hamcrest ' <nl> } <nl> repositories { <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " alpha - 4 " <nl> - versionCode 248 <nl> + versionName " alpha - 5 " <nl> + versionCode 251 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task wrapper ( type : Wrapper ) { <nl> / / Define a GroovyDoc task which depends on the generated groovydoc tool <nl> apply from : " $ projectDir / gradle / groovydoc . gradle " <nl> - <nl> - class MyGroovyOptions extends org . gradle . api . tasks . compile . GroovyCompileOptions { <nl> - boolean indy = true <nl> - } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> sourceCompatibility = 1 . 7 <nl> targetCompatibility = 1 . 7 <nl> group = ' com . github . tomakehurst ' <nl> - version = ' 2 . 0 . 9 - beta ' <nl> + version = ' 2 . 0 . 10 - beta ' <nl> def shouldPublishLocally = System . getProperty ( ' LOCAL_PUBLISH ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 2 " <nl> - supportLibVersion = " 23 . 2 . 0 " <nl> + supportLibVersion = " 23 . 2 . 1 " <nl> minSdkVersion = 10 <nl> targetSdkVersion = 23 <nl> 
mmm a / UltimateAndroidGradle / ultimateandroiduicomponent / build . gradle <nl> ppp b / UltimateAndroidGradle / ultimateandroiduicomponent / build . gradle <nl> dependencies { <nl> compile project ( ' : ultimateandroid ' ) <nl> compile ' com . lid . labelview : lib : 0 . 1 . 1 ' <nl> compile ' com . squareup . picasso : picasso : 2 . 5 . 2 ' <nl> + compile ' com . yalantis : flipviewpager : 1 . 0 . 0 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> } <nl> - publishTask { <nl> + publishPlugin { <nl> username publishUsername <nl> password publishPassword <nl> channels publishChannel <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 0 . 1 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> dependencies { <nl> compile fileTree ( include : [ ' * . jar ' ] , dir : ' libs ' ) <nl> compile ' com . android . support : support - v4 : 20 . 0 . + ' <nl> - compile project ( ' : library ' ) <nl> + compile ' com . ikimuhendis : ldrawer : 0 . 1 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - alpha1 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - alpha3 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> apply plugin : ' eclipse ' / / Only used so the Eclipse STS Gradle plugin can see the ' perf ' source set dependencies . : - ( <nl> apply plugin : ' checkstyle ' <nl> + apply plugin : ' idea ' <nl> defaultTasks ' build ' <nl> 
mmm a / h2o - app / build . gradle <nl> ppp b / h2o - app / build . gradle <nl> dependencies { <nl> compile project ( " : h2o - web " ) <nl> compile project ( " : h2o - algos " ) <nl> compile project ( " : h2o - core " ) <nl> + compile project ( " : h2o - scala " ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenLocal ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 13 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 13 . + ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> - versionCode = 239 <nl> - versionName = ' 12 . 2 ' <nl> + versionCode = 240 <nl> + versionName = ' 12 . 3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> versionCode = 236 <nl> - versionName = ' 12 . 1 ' <nl> + versionName = ' 12 . 2 - beta ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> } <nl> + project ( ' : rxjava - core ' ) { <nl> + sourceSets . test . java . srcDir ' src / test / java ' <nl> + } <nl> + <nl> 
mmm a / grails - core / build . gradle <nl> ppp b / grails - core / build . gradle <nl> compileGroovy . doFirst { <nl> } <nl> jar . appendix = ' core ' <nl> - <nl> - eclipse { <nl> - classpath { <nl> - plusConfigurations + = configurations . agent <nl> - } <nl> - } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : extensions : net ' <nl> include ' : testapp ' <nl> gradle . ext . versionCode = 10100 <nl> - gradle . ext . versionName = ' 1 . 1 . 0 - beta1 ' <nl> + gradle . ext . versionName = ' 1 . 1 . 0 - SNAPSHOT ' <nl> gradle . ext . bintrayRepo = ' Agera ' <nl> gradle . ext . bintrayName = ' agera ' <nl> 
mmm a / hibernate - core / hibernate - core . gradle <nl> ppp b / hibernate - core / hibernate - core . gradle <nl> task testingJar ( type : Jar , dependsOn : compileTestJava ) { <nl> include ' org / hibernate / testing / * * ' <nl> include ' org / hibernate / testing / * ' <nl> classifier = ' testing ' <nl> + includeEmptyDirs = false <nl> } <nl> / / allow other modules to use it <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - rc5 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 176 <nl> - versionName " 8 " <nl> + versionCode 177 <nl> + versionName " 8 . 1 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 195 <nl> + versionCode 196 <nl> versionName " 10 - beta3 " <nl> } <nl> beta { <nl> 
new file mode 100644 <nl> index 000000000000 . . 259a5569ce96 <nl> mmm / dev / null <nl> ppp b / modules / apps / social - private - messaging / build . gradle <nl> + apply plugin : " com . liferay . app . defaults . plugin " <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 1 . 3 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> renderscriptTargetApi 19 <nl> renderscriptSupportModeEnabled true <nl> applicationId " com . eightbitlab . blurview_sample " <nl> - minSdkVersion 16 <nl> + minSdkVersion 14 <nl> targetSdkVersion 23 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / common / android - set - common - properties . gradle <nl> ppp b / common / android - set - common - properties . gradle <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion ' 23 . 0 . 1 ' <nl> + buildToolsVersion ' 23 . 0 . 2 ' <nl> compileOptions { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> 
mmm a / ProKey / LinkBubblePro / build . gradle <nl> ppp b / ProKey / LinkBubblePro / build . gradle <nl> buildscript { <nl> def versionMajor = 0 <nl> def versionMinor = 9 <nl> def versionPatch = 1 <nl> - def versionBuild = 1 / / bump for dogfood builds , public betas , etc . <nl> + def versionBuild = 3 / / bump for dogfood builds , public betas , etc . <nl> apply plugin : ' android ' <nl> / / apply plugin : ' dexguard ' <nl> 
mmm a / syncany - lib / build . gradle <nl> ppp b / syncany - lib / build . gradle <nl> task ( runSql , dependsOn : " classes " , type : JavaExec ) { <nl> classpath = sourceSets . test . runtimeClasspath <nl> args = [ " $ { db } " , " $ { sql } " ] <nl> } <nl> + <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11266 <nl> - versionName = ' 14 . 0 . 3 ' <nl> + versionCode = 11267 <nl> + versionName = ' 14 . 0 . 4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> run { <nl> main " ratpack . site . SiteMain " <nl> } <nl> + mainClassName = " ratpack . site . SiteMain " <nl> + <nl> task createScriptsDir { <nl> doLast { <nl> mkdir " src / ratpack / assets / scripts " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta3 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta4 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - rc1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - rc2 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> def configDir = new File ( rootDir , ' config ' ) <nl> buildscript { <nl> repositories { <nl> - mavenLocal ( ) <nl> mavenCentral ( ) <nl> + mavenLocal ( ) <nl> maven { url ' https : / / oss . sonatype . org / content / repositories / snapshots ' } <nl> jcenter ( ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 11 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 12 . + ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15021 <nl> - versionName = ' 16 ' <nl> + versionCode = 15022 <nl> + versionName = ' 16 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task clean ( type : Delete ) { <nl> ext { <nl> androidCompileSdkVersion = 23 <nl> - androidBuildToolsVersion = ' 23 . 0 . 2 ' <nl> + androidBuildToolsVersion = ' 23 . 0 . 3 ' <nl> / / API level 15 + - > version 15xxx <nl> androidVersionCode = 15181 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> hadoopVersion = ' 2 . 5 . 0 - cdh5 . 2 . 0 ' <nl> jets3tVersion = ' 0 . 7 . 1 ' <nl> awsJavaSdkVersion = ' 1 . 8 . 3 ' <nl> - h2oFlowVersion = ' 0 . 2 . 3 ' <nl> + h2oFlowVersion = ' 0 . 2 . 4 ' <nl> } <nl> / / <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> task bundle ( type : Jar ) { <nl> with jar <nl> } <nl> + jar . finalizedBy ( bundle ) <nl> + <nl> protobuf { <nl> / / Configure the protoc executable <nl> protoc { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 25 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 67 <nl> + versionCode 68 <nl> versionName " 3 . 1 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 62 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / grails - core / build . gradle <nl> ppp b / grails - core / build . gradle <nl> sourceSets { <nl> } <nl> } <nl> + javadoc { <nl> + classpath + = configurations . agent <nl> + } <nl> + <nl> compileGroovy . doFirst { <nl> delete ( " $ { buildDir } / classes / main / META - INF " ) <nl> ant . mkdir ( dir : sourceSets . main . classesDir ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 25 . Final ' <nl> + nettyVersion = ' 4 . 0 . 26 . Final ' <nl> slf4jVersion = ' 1 . 7 . 10 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 5 . 1 ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : storeio ' <nl> \ No newline at end of file <nl> + include ' : storio ' <nl> \ No newline at end of file <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 204 <nl> - versionName " 11 - beta4 " <nl> + versionCode 205 <nl> + versionName " 11 - beta5 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> targetSdkVersion 21 <nl> buildConfigField " String " , " APP_PN_KEY " , " \ " org . wordpress . android . playstore \ " " <nl> - buildConfigField " String " , " STATS_PROVIDER_AUTHORITY " , <nl> - " \ " org . wordpress . android . providers . StatsContentProvider \ " " <nl> } <nl> productFlavors { <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> jar { <nl> } <nl> def modules ( ) { <nl> - subprojects . findAll { it . name = ~ / groovy / } <nl> + subprojects . findAll { it . name = ~ / groovy - ( ? ! all - tests ) / } <nl> } <nl> def moduleJars ( ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15142 <nl> - versionName = ' 26 - beta3 ' <nl> + versionCode = 15143 <nl> + versionName = ' 26 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 15 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 11 . Final ' <nl> + nettyVersion = ' 4 . 0 . 12 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 2 . 3 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 2 " <nl> - supportLibVersion = " 23 . 2 . 1 " <nl> + supportLibVersion = " 23 . 3 . 0 " <nl> } <nl> allprojects { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task javadoc ( type : Javadoc ) { <nl> configureJavadoc ( javadoc ) <nl> - task publishJavadoc ( type : Copy ) { <nl> + task publishJavadoc ( type : Sync ) { <nl> from javadoc <nl> into " file : / / / var / www / spock / javadoc / $ version / " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task cleanLogs ( type : Delete ) { <nl> } <nl> task cleanHadoop ( type : Delete , dependsOn : cleanLogs ) { <nl> - delete hadoopHome , hiveHome , pigHome <nl> + delete hadoopBinaries <nl> } <nl> task historicalYield ( dependsOn : configureCluster ) < < { <nl> 
new file mode 100644 <nl> index 0000000 . . 9152d02 <nl> mmm / dev / null <nl> ppp b / settings . gradle <nl> + include ' : FreeFlow ' <nl> + <nl> + include ' : examples : PhotoGrid ' <nl> + include ' : examples : Artbook ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> ivyVersion = ' 2 . 4 . 0 - rc1 ' <nl> jansiVersion = ' 1 . 11 ' <nl> jarjarVersion = ' 1 . 3 ' <nl> - jlineVersion = ' 2 . 12 ' <nl> + jlineVersion = ' 2 . 11 ' <nl> jmockVersion = ' 1 . 2 . 0 ' <nl> logbackVersion = ' 1 . 1 . 2 ' <nl> log4jVersion = ' 1 . 2 . 17 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configurations { <nl> ext { <nl> antVersion = ' 1 . 9 . 3 ' <nl> - asmVersion = ' 5 . 0 . 1 ' <nl> + asmVersion = ' 5 . 0 . 2 ' <nl> antlrVersion = ' 2 . 7 . 7 ' <nl> bndVersion = ' 0 . 0 . 401 ' <nl> checkstyleVersion = ' 4 . 4 ' <nl> 
mmm a / gradle / integTest . gradle <nl> ppp b / gradle / integTest . gradle <nl> project ( " : " ) { <nl> } <nl> task cleanUpCaches { <nl> + dependsOn ' : createBuildReceipt ' <nl> doLast { <nl> def executingVersion = GradleVersion . version ( gradle . gradleVersion ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> checkstyle { <nl> configFile = file ( ' guidelines / buildcraft . checkstyle ' ) <nl> } <nl> + checkstyleApi . exclude ' cofh / * * ' <nl> + <nl> / / make sure all of these happen when we run build <nl> build . dependsOn sourceJar , javadocJar , deobfJar , apiJar <nl> 
mmm a / core / build . gradle <nl> ppp b / core / build . gradle <nl> test { <nl> } <nl> } <nl> + jmh { <nl> + resultFormat = ' JSON ' <nl> + } <nl> + <nl> forbiddenApisMain { <nl> bundledSignatures = [ ' jdk - unsafe ' , ' jdk - deprecated ' ] <nl> ignoreFailures = false <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : owncloud - android - library ' <nl> include ' : ' <nl> + include ' oc_jb_workaround ' <nl> 
mmm a / hystrix - core / build . gradle <nl> ppp b / hystrix - core / build . gradle <nl> jar { <nl> } <nl> jmh { <nl> - fork = 1 <nl> - iterations = 25 <nl> + fork = 10 <nl> + iterations = 3 <nl> jmhVersion = ' 1 . 9 ' <nl> profilers = [ ' gc ' ] <nl> threads = 8 <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> apply plugin : ' android ' <nl> android { <nl> compileSdkVersion 18 <nl> buildToolsVersion " 18 . 1 " <nl> + compileOptions . encoding = " UTF - 8 " <nl> defaultConfig { <nl> minSdkVersion 8 <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - beta4 ' <nl> - isSnapshot = true <nl> + shortVersion = ' 4 . 2 . 0 - rc1 ' <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 5 . 0 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / Bolts / build . gradle <nl> ppp b / Bolts / build . gradle <nl> uploadArchives { <nl> distribution ' repo ' <nl> } <nl> } <nl> + <nl> + developers { <nl> + developer { <nl> + id ' parse ' <nl> + name ' Parse ' <nl> + } <nl> + } <nl> } <nl> } <nl> } <nl> 
mmm a / subprojects / docs / src / samples / javaLibraryPlugin / toolchains / build . gradle <nl> ppp b / subprojects / docs / src / samples / javaLibraryPlugin / toolchains / build . gradle <nl> * / <nl> plugins { <nl> - id ' jvm - components ' <nl> + id ' jvm - component ' <nl> } <nl> / / START SNIPPET java - installations <nl> 
mmm a / python / educational - core / build . gradle <nl> ppp b / python / educational - core / build . gradle <nl> subprojects { <nl> sourceSets { <nl> main { <nl> java . srcDir ' src ' <nl> + kotlin . srcDirs ' src ' <nl> resources . srcDir ' resources ' <nl> } <nl> test { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . afollestad . materialdialogssample " <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 23 <nl> - versionName " 0 . 0 . 6 " <nl> + versionCode 24 <nl> + versionName " 0 . 0 . 7 " <nl> } <nl> buildTypes { <nl> release { <nl> Binary files a / sample / sample . apk and b / sample / sample . apk differ <nl> 
mmm a / subprojects / plugin - development / plugin - development . gradle <nl> ppp b / subprojects / plugin - development / plugin - development . gradle <nl> dependencies { <nl> compile project ( ' : core ' ) <nl> compile project ( ' : plugins ' ) <nl> testRuntime project ( ' : toolingApi ' ) <nl> + testRuntime project ( ' : launcher ' ) <nl> } <nl> useTestFixtures ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' idea ' <nl> + apply plugin : ' maven ' <nl> } <nl> subprojects { <nl> apply plugin : ' java ' <nl> group = ' com . github . dreamhead . moco ' <nl> - version = ' 1 . 0 ' <nl> + version = ' 0 . 5 ' <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / OsmAnd / build . gradle <nl> ppp b / OsmAnd / build . gradle <nl> android { <nl> targetSdkVersion 21 <nl> versionCode System . getenv ( " APK_NUMBER_VERSION " ) ? System . getenv ( " APK_NUMBER_VERSION " ) . toInteger ( ) : versionCode <nl> - versionName System . getenv ( " APK_VERSION " ) ? : versionName <nl> + versionName System . getenv ( " APK_VERSION " ) ? System . getenv ( " APK_NUMBER_VERSION " ) . toString ( ) : versionName <nl> } <nl> lintOptions { <nl> 
old mode 100644 <nl> new mode 100755 <nl> index 038192e14 . . 983b0e60f <nl> mmm a / deskshare / applet / build . gradle <nl> ppp b / deskshare / applet / build . gradle <nl> + usePlugin ' java ' <nl> + sourceCompatibility = 1 . 6 <nl> + targetCompatibility = 1 . 6 <nl> + <nl> ant . importBuild ' build . xml ' <nl> version = ' 0 . 64 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11265 <nl> - versionName = ' 14 . 0 . 2 ' <nl> + versionCode = 11266 <nl> + versionName = ' 14 . 0 . 3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / gradle / unit - test . gradle <nl> ppp b / gradle / unit - test . gradle <nl> def createTestTaskWithoutSuffix ( String name , includes , excludes ) { <nl> / * classpath = classpath + project . rootProject . configurations . coverage * / <nl> classpath = sourceSets . test . runtimeClasspath + project . rootProject . configurations . coverage <nl> testClassesDir = sourceSets . test . classesDir <nl> - <nl> + forkEvery = 1 <nl> } <nl> test . dependsOn task <nl> task . dependsOn coreJar <nl> 
mmm a / UltimateAndroidGradle / settings . gradle <nl> ppp b / UltimateAndroidGradle / settings . gradle <nl> - include ' : app ' , ' : ultimateandroid ' , ' : ultimateandroidui ' , ' : demoofui ' <nl> + include ' : app ' , ' : ultimateandroid ' , ' : ultimateandroidui ' , ' : demoofui ' , ' : ultimateandroiduiwidget ' , ' : ultimateandroiduianimation ' <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 4 . 3 - rc1 " <nl> - versionCode 193 <nl> + versionName " 4 . 3 " <nl> + versionCode 194 <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 174 <nl> - versionName " 3 . 1 . 1 . 2 " <nl> + versionCode 175 <nl> + versionName " 3 . 1 . 1 . 3 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15031 <nl> - versionName = ' 17 - beta2 ' <nl> + versionCode = 15032 <nl> + versionName = ' 17 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> / / API level 15 + - > version 15xxx <nl> versionCode = 15001 <nl> - versionName = ' 14 . 0 . 4 ' <nl> + versionName = ' 15 . 0 . 0 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> ext { <nl> bintrayPublish = false <nl> - grailsVersion = ' 3 . 0 . 0 . BUILD - SNAPSHOT ' <nl> + grailsVersion = ' 3 . 0 . 0 . RC3 ' <nl> isBuildSnapshot = grailsVersion . endsWith ( " . BUILD - SNAPSHOT " ) <nl> isTravisBuild = System . getenv ( ) . get ( " TRAVIS " ) = = ' true ' <nl> 
mmm a / python / educational - core / build . gradle <nl> ppp b / python / educational - core / build . gradle <nl> import org . apache . tools . ant . filters . ReplaceTokens <nl> buildscript { <nl> - ext . kotlin_version = ' 1 . 0 . 1 - 2 ' <nl> + ext . kotlin_version = ' 1 . 0 . 2 ' <nl> repositories { <nl> mavenCentral ( ) <nl> } <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> warningsAsErrors true <nl> quiet false <nl> showAll true <nl> - disable ' OldTargetApi ' , ' LongLogTag ' <nl> - / / TODO : long log tag should be fixed instead of ignored <nl> + disable ' OldTargetApi ' <nl> } <nl> compileOptions { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 235 <nl> - versionName ' 3 . 3 . 17 ' <nl> + versionCode 236 <nl> + versionName ' 3 . 3 . 18 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> allprojects { <nl> group = " org . spockframework " <nl> - version = " 0 . 7 - groovy - 1 . 8 - SNAPSHOT " <nl> + version = " 0 . 7 - groovy - 1 . 8 " <nl> apply from : script ( " common " ) <nl> } <nl> 
mmm a / libs / graphview / WordPressGraphView / build . gradle <nl> ppp b / libs / graphview / WordPressGraphView / build . gradle <nl> android { <nl> buildToolsVersion " 19 . 1 . 0 " <nl> defaultConfig { <nl> - versionName " 3 . 2 . 1 " <nl> + versionName " 3 . 2 . 2 " <nl> versionCode 1 <nl> minSdkVersion 8 <nl> targetSdkVersion 19 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task shutdownCluster < < { <nl> commandLine " build / hadoop - $ { branchVersion } . sh " <nl> args " shutdown " <nl> } <nl> - <nl> - mustRunAfter test <nl> } <nl> task historicalYield ( dependsOn : configureCluster ) < < { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> mavenCentral ( ) <nl> } <nl> + group = GROUP <nl> + version = VERSION_NAME <nl> + <nl> / / The default ' assemble ' task only applies to normal variants . Add test variants as well . <nl> afterEvaluate { <nl> android . testVariants . all { variant - > <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 197 <nl> - versionName " 10 " <nl> + versionCode 198 <nl> + versionName " 11 - beta1 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> - guavaVersion = ' 13 . 0 . 1 ' <nl> + guavaVersion = ' 14 . 0 ' <nl> nettyVersion = ' 3 . 6 . 3 . Final ' <nl> slf4jVersion = ' 1 . 7 . 2 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - alpha3 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( buildDir , ' documentation ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> version = ' 0 . 0 . 1 - SNAPSHOT ' <nl> buildscript { <nl> repositories { <nl> mavenCentral ( ) <nl> + maven { url " https : / / jitpack . io " } <nl> } <nl> dependencies { <nl> classpath ' com . google . protobuf : protobuf - gradle - plugin : 0 . 7 . 7 ' <nl> 
mmm a / h2o - app / build . gradle <nl> ppp b / h2o - app / build . gradle <nl> dependencies { <nl> fatJar { <nl> manifest { <nl> - attributes ' Main - Class ' : ' H2OApp ' <nl> + attributes ' Main - Class ' : ' water . H2OApp ' <nl> } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 204 <nl> - versionName ' 3 . 2 . 0 ' <nl> + versionCode 205 <nl> + versionName ' 3 . 2 . 1 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / cas - management - webapp - support - ldap / build . gradle <nl> ppp b / cas - management - webapp - support - ldap / build . gradle <nl> description = " Apereo CAS Management Web Application LDAP Support " <nl> dependencies { <nl> - compile project ( " : cas - server - support - ldap " ) <nl> + compile project ( " : cas - server - support - ldap - core " ) <nl> } <nl> 
mmm a / smalidea / build . gradle <nl> ppp b / smalidea / build . gradle <nl> if ( ! ( ' idea ' in gradle . startParameter . taskNames ) ) { <nl> version ' IC - 14 . 1 . 4 ' <nl> pluginName ' smalidea ' <nl> + updateSinceUntilBuild false <nl> + <nl> sandboxDirectory sandboxDir <nl> } <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> configure ( [ smallJavaSwModelProject , largeJavaSwModelProject , <nl> templateArgs = [ projectDependencies : true , generatedDependencies : dependencyGenerator . createDependencies ( ) , testMethodCount : 1 , useApiDependencies : false ] <nl> if ( tinyProjectType ) { <nl> - println templateArgs . generatedDependencies <nl> templateArgs . generatedDependencies [ 3 ] = [ 1 ] <nl> - println templateArgs . generatedDependencies <nl> } <nl> testDependencies = files ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> project ( ' : toolingApi ' ) , <nl> project ( ' : wrapper ' ) , <nl> project ( ' : baseServices ' ) , <nl> + project ( ' : baseServicesGroovy ' ) , <nl> project ( ' : messaging ' ) , <nl> project ( ' : resources ' ) <nl> ] <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : library ' <nl> - include ' : processor ' <nl> - include ' : sample ' <nl> + include ' : library ' , ' : processor ' , ' : sample ' <nl> \ No newline at end of file <nl> 
mmm a / jodd - core / build . gradle <nl> ppp b / jodd - core / build . gradle <nl> ext . moduleName = ' Jodd Core ' <nl> - ext . moduleDescription = ' Jodd Core tools and utilities , including type converters , JDateTime , cache etc . ' <nl> + ext . moduleDescription = ' Jodd Core tools and huge number of utilities . ' <nl> dependencies { <nl> testCompile lib . junit <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> dependencies { <nl> compile libraries . android_support <nl> compile ' com . android . support : appcompat - v7 : 19 . 0 . 0 ' <nl> compile ' com . squareup . picasso : picasso : 2 . 1 . 1 ' <nl> + compile ' com . jakewharton : butterknife : 4 . 0 . 1 ' <nl> compile project ( ' : library ' ) <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 11 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 12 . + ' <nl> } <nl> } <nl> apply plugin : ' android ' <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - rc1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 0 - rc2 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / sql / build . gradle <nl> ppp b / sql / build . gradle <nl> test { <nl> testLogging { <nl> / / show standard out and standard error of the test JVM ( s ) on the console <nl> showStandardStreams = true <nl> + exceptionFormat = ' full ' <nl> / / Show that tests are run in the command - line output <nl> events ' started ' , ' passed ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> + def githubBase = ' https : / / github . com / valkolovos / gradle_cobertura / raw / master / ivy ' <nl> + apply from : " $ { githubBase } / gradle_cobertura / gradle_cobertura / 1 . 0 - rc4 / coberturainit . gradle " <nl> + <nl> repositories { <nl> mavenRepo urls : ' http : / / repo . smokejumperit . com ' <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 11 <nl> targetSdkVersion 23 <nl> - versionCode 112 <nl> - versionName ' 1 . 1 . 2 ' <nl> + versionCode 120 <nl> + versionName ' 1 . 2 . 0 ' <nl> applicationVariants . all { variant - > <nl> variant . outputs . each { output - > <nl> 
mmm a / android / PhysicalWeb / app / build . gradle <nl> ppp b / android / PhysicalWeb / app / build . gradle <nl> android { <nl> minSdkVersion 18 <nl> targetSdkVersion 21 <nl> versionCode 4 <nl> - versionName " 0 . 1 . 737 " <nl> + versionName " 0 . 1 . 800 " <nl> } <nl> buildTypes { <nl> 
mmm a / release . gradle <nl> ppp b / release . gradle <nl> afterEvaluate { project - > <nl> classpath + = files ( android . bootClasspath ) <nl> } <nl> - task androidJavadocJar ( type : Jar ) { <nl> + task androidJavadocJar ( type : Jar , dependsOn : androidJavadoc ) { <nl> classifier = ' javadoc ' <nl> from androidJavadoc . destinationDir <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> junitVersion = ' 4 . 11 ' <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 9 . 5 ' <nl> - httpComponentVersion = ' 4 . 3 ' <nl> + httpComponentVersion = ' 4 . 3 . 2 ' <nl> jsonpathVersion = ' 0 . 9 . 1 ' <nl> freemarkerVersion = ' 2 . 3 . 20 ' <nl> } <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> android { <nl> buildToolsVersion ' 19 . 0 . 3 ' <nl> defaultConfig { <nl> - minSdkVersion 8 <nl> + minSdkVersion 14 <nl> targetSdkVersion 19 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> } <nl> } <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> + <nl> sourceSets { <nl> / / Move the tests to test / java , test / res , etc . . . <nl> androidTest { <nl> 
mmm a / subprojects / diagnostics / diagnostics . gradle <nl> ppp b / subprojects / diagnostics / diagnostics . gradle <nl> dependencies { <nl> compile project ( ' : platformNative ' ) <nl> compile project ( ' : languageNative ' ) <nl> compile project ( ' : coreImpl ' ) <nl> + <nl> + integTestRuntime project ( ' : cunit ' ) <nl> } <nl> useTestFixtures ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> compileSdkVersion = 21 <nl> - buildToolsVersion = ' 21 . 0 . 2 ' <nl> + buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> versionCode = 15055 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> minSdkVersion = 10 <nl> targetSdkVersion = 23 <nl> - supportVersion = " 23 . 2 . 1 " <nl> + supportVersion = " 24 . 0 . 0 " <nl> commonsioVersion = " 2 . 4 " <nl> commonslangVersion = " 3 . 4 " <nl> eventbusVersion = " 2 . 4 . 0 " <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' com . android . library ' <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . theartofdev . edmodo ' <nl> PUBLISH_ARTIFACT_ID = ' android - image - cropper ' <nl> - PUBLISH_VERSION = ' 1 . 2 . 1 ' <nl> + PUBLISH_VERSION = ' 1 . 2 . 2 ' <nl> / / gradlew clean build generateRelease <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11253 <nl> + versionCode = 11254 <nl> versionName = ' 13 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> audioPlayerVersion = " v1 . 0 . 16 " <nl> - castCompanionLibVer = " 2 . 8 . 2 " <nl> + castCompanionLibVer = " 2 . 8 . 3 " <nl> / / playServicesVersion = " 8 . 4 . 0 " <nl> } <nl> 
mmm a / android / playground / app / build . gradle <nl> ppp b / android / playground / app / build . gradle <nl> android { <nl> applicationId " com . alibaba . weex " <nl> minSdkVersion 15 <nl> targetSdkVersion 23 <nl> - versionCode 3 <nl> + versionCode 4 <nl> versionName " 0 . 5 . 2 . 4 " <nl> testInstrumentationRunner " android . support . test . runner . AndroidJUnitRunner " <nl> ndk { <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> buildscript { <nl> apply plugin : ' android - library ' <nl> group = ' com . tjerkw . slideexpandable ' <nl> - artifact = ' library ' <nl> + archivesBaseName = ' library ' <nl> version = ' 1 . 0 ' <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15094 <nl> - versionName = ' 22 . 0 . 0 - beta5 ' <nl> + versionCode = 15095 <nl> + versionName = ' 22 . 0 . 0 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15156 <nl> - versionName = ' 27 . 0 . 2 ' <nl> + versionCode = 15157 <nl> + versionName = ' 27 . 0 . 3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / gradle / timing . gradle <nl> ppp b / gradle / timing . gradle <nl> class TimingsListener implements TaskExecutionListener , BuildListener { <nl> void buildFinished ( BuildResult result ) { <nl> def sortedTimings = timings . sort { - it . secs } <nl> - def maxNumItemized = 15 <nl> + def maxNumItemized = 7 <nl> println " " <nl> println " Task timings : " <nl> def i = 0 <nl> 
mmm a / libraries . gradle <nl> ppp b / libraries . gradle <nl> / / use . In that respect it serves a role similar to < dependencyManagement > in Maven <nl> ext { <nl> - junitVersion = ' 4 . 11 ' <nl> + junitVersion = ' 4 . 12 ' <nl> / / h2Version = ' 1 . 2 . 145 ' <nl> h2Version = ' 1 . 3 . 176 ' <nl> bytemanVersion = ' 2 . 1 . 2 ' <nl> 
mmm a / integration / build . gradle <nl> ppp b / integration / build . gradle <nl> android { <nl> dependencies { <nl> provided ' com . android . support : support - v4 : 19 . 1 . 0 ' <nl> - provided project ( ' : zxing - android ' ) <nl> - provided project ( ' : zxing - android - legacy ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> signing { <nl> sign configurations . archives <nl> + required { gradle . taskGraph . hasTask ( uploadArchives ) } <nl> } <nl> ext { <nl> 
mmm a / pushMaven . gradle <nl> ppp b / pushMaven . gradle <nl> afterEvaluate { project - > <nl> } <nl> signing { <nl> - required { isRelease & & gradle . taskGraph . hasTask ( " uploadArchives " ) } <nl> + required { isRelease = = ' true ' & & gradle . taskGraph . hasTask ( " uploadArchives " ) } <nl> sign configurations . archives <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 7 <nl> - versionName " 2 . 0 . 0 " <nl> + versionCode 8 <nl> + versionName " 2 . 0 . 1 " <nl> / / consumerProguardFiles ' consumer - proguard - rules . txt ' <nl> } <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> dependencies { <nl> android { <nl> compileSdkVersion 21 <nl> buildToolsVersion ' 21 . 1 . 0 ' <nl> + <nl> + defaultConfig { <nl> + minSdkVersion 7 <nl> + } <nl> } <nl> install { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> version = " $ minecraft . version - $ forgeBuild - $ apiVersion - $ buildNumber " <nl> compileJava { <nl> options . compilerArgs + = [ " - Atokens = FORGE = $ forgeBuild ; FML = $ forgeBuild " ] <nl> - sourceCompatibility = ' 1 . 8 ' <nl> } <nl> jar { <nl> 
mmm a / common / android - set - common - properties . gradle <nl> ppp b / common / android - set - common - properties . gradle <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion ' 23 . 0 . 2 ' <nl> + buildToolsVersion ' 23 . 0 . 3 ' <nl> compileOptions { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> } <nl> } <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> + <nl> compileOptions { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configurations { <nl> ext { <nl> antVersion = ' 1 . 9 . 6 ' <nl> - asmVersion = ' 5 . 0 . 3 ' <nl> + asmVersion = ' 5 . 0 . 4 ' <nl> antlrVersion = ' 2 . 7 . 7 ' <nl> coberturaVersion = ' 1 . 9 . 4 . 1 ' <nl> commonsCliVersion = ' 1 . 3 . 1 ' <nl> 
mmm a / design / build . gradle <nl> ppp b / design / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 9 <nl> - targetSdkVersion 22 <nl> + targetSdkVersion 21 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> targetCompatibility = 1 . 8 <nl> } <nl> - compileJava . options . encoding = ' UTF - 8 ' <nl> + [ compileJava , compileTestJava ] * . options * . encoding = ' UTF - 8 ' <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> dependencies { <nl> / / Version Information <nl> def versionMajor = 1 <nl> def versionMinor = 2 <nl> - def versionPatch = 1 <nl> - def versionBuild = 4 <nl> + def versionPatch = 2 <nl> + def versionBuild = 5 <nl> android { <nl> compileSdkVersion 21 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 2 " <nl> - supportLibVersion = " 23 . 2 . 1 " <nl> + supportLibVersion = " 23 . 3 . 0 " <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project ( ' : aeron - common ' ) { <nl> dependencies { <nl> - compile ' uk . co . real - logic : Agrona : 0 . 1 ' <nl> + compile ' uk . co . real - logic : Agrona : 0 . 2 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task clean ( type : Delete ) { <nl> homeSrcDir <nl> } <nl> + task allDependencies ( dependsOn : { subprojects * . implicitTasks * . dependencies } ) <nl> + <nl> / / From this point on we need the subprojects to be fully configured , so force their full evaluation <nl> subprojects . each { evaluationDependsOn it . path } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> dependencies { <nl> / / The ' exclude ' clause simulates the optional dependency on support - v13 for local Project Dependencies <nl> compile ( project ( ' : library ' ) ) { exclude group : ' com . android . support ' , module : ' support - v13 ' } <nl> - apt project ( ' : processor ' ) <nl> + provided project ( ' : processor ' ) <nl> } <nl> 
mmm a / subprojects / docs / docs . gradle <nl> ppp b / subprojects / docs / docs . gradle <nl> task configureGroovyDoc { <nl> } <nl> } <nl> - / / TODO SF - generates for java as well , rename to codedoc ? <nl> task groovydoc ( type : Groovydoc , dependsOn : configureGroovyDoc ) { <nl> group = ' documentation ' <nl> source groovyProjects ( ) . collect { project - > project . sourceSets . main . groovy + project . sourceSets . main . java } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' base ' <nl> description = ' Spring Security ' <nl> allprojects { <nl> - version = ' 3 . 1 . 0 . CI - SNAPSHOT ' <nl> + version = ' 3 . 1 . 0 . RC2 ' <nl> releaseBuild = version . endsWith ( ' RELEASE ' ) <nl> snapshotBuild = version . endsWith ( ' SNAPSHOT ' ) <nl> 
mmm a / extras / actionbarsherlock / build . gradle <nl> ppp b / extras / actionbarsherlock / build . gradle <nl> android { <nl> main { <nl> manifest . srcFile ' AndroidManifest . xml ' <nl> java . srcDirs = [ ' src ' ] <nl> + res . srcDirs = [ ' res ' ] <nl> } <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " com . etiennelawlor . quickreturn " <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> - versionCode 17 <nl> - versionName " 0 . 0 . 17 " <nl> + versionCode 18 <nl> + versionName " 0 . 0 . 18 " <nl> } <nl> signingConfigs { <nl> release { <nl> 
mmm a / Application / LinkBubble / build . gradle <nl> ppp b / Application / LinkBubble / build . gradle <nl> buildscript { <nl> def versionMajor = 1 <nl> def versionMinor = 4 <nl> def versionPatch = 6 <nl> - def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> + def versionBuild = 2 / / bump for dogfood builds , public betas , etc . <nl> if ( buildMode = = " dexguard " ) { <nl> apply plugin : ' dexguard ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha5 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta5 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15141 <nl> - versionName = ' 26 - beta2 ' <nl> + versionCode = 15142 <nl> + versionName = ' 26 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / modules / build - module . gradle <nl> ppp b / modules / build - module . gradle <nl> import com . liferay . gradle . util . FileUtil <nl> - import com . liferay . gradle . util . OSDetector <nl> - import com . liferay . gradle . util . copy . StripPathSegmentsAction <nl> import org . gradle . api . tasks . testing . logging . TestLogEvent <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildTypes { <nl> daemonTest " daemonIntegTest " , noDistTests : true , useIncomingDistributions : true <nl> / / Run the integration tests using the parallel executer <nl> - parallelTest " parallelIntegTest " , noDistTests : true <nl> + parallelTest " parallelIntegTest " , noDistTests : true , useIncomingDistributions : true <nl> / / Run the performance tests <nl> performanceTest " performance : integTest " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15150 <nl> - versionName = ' 27 - beta1 ' <nl> + versionCode = 15151 <nl> + versionName = ' 27 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> configFile = new File ( " $ configDir / checkstyle . xml " ) <nl> } <nl> + javadoc { <nl> + classpath + = configurations . provided <nl> + } <nl> + <nl> checkstyleMain { <nl> classpath + = configurations . compile <nl> } <nl> 
mmm a / eureka - client - archaius2 / build . gradle <nl> ppp b / eureka - client - archaius2 / build . gradle <nl> apply plugin : ' nebula . test - jar ' <nl> - def archaius2Version = ' 2 . 1 . 4 ' <nl> + def archaius2Version = ' 2 . 1 . 5 ' <nl> dependencies { <nl> compile project ( ' : eureka - client ' ) <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> apply plugin : ' android - library ' <nl> - apply plugin : ' maven ' <nl> - apply plugin : ' signing ' <nl> android { <nl> compileSdkVersion 18 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> compileSdkVersion = 21 <nl> - buildToolsVersion = ' 21 . 0 . 1 ' <nl> + buildToolsVersion = ' 21 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> versionCode = 15050 <nl> 
mmm a / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / ios - moe / build . gradle <nl> ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / ios - moe / build . gradle <nl> moe { <nl> } <nl> } <nl> + moeXcodeInternal . dependsOn copyNatives <nl> moeMainReleaseIphoneosXcodeBuild . dependsOn copyNatives <nl> moeMainDebugIphoneosXcodeBuild . dependsOn copyNatives <nl> moeMainReleaseIphonesimulatorXcodeBuild . dependsOn copyNatives <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> expectedGradleVersion = ' 2 . 4 ' <nl> - hibernateTargetVersion = ' 5 . 0 . 1 - SNAPSHOT ' <nl> + hibernateTargetVersion = ' 5 . 1 . 0 - SNAPSHOT ' <nl> osgiExportVersion = hibernateTargetVersion . replaceAll ( ' - SNAPSHOT ' , ' . SNAPSHOT ' ) <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - beta3 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - beta4 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / grails - web / build . gradle <nl> ppp b / grails - web / build . gradle <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> configurations { <nl> jsp21 . extendsFrom compile <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( rootProject ) { <nl> options . author = true <nl> options . header = rootProject . description <nl> options . overview = ' src / api / overview . html ' <nl> + options . splitIndex = true <nl> options . links ( <nl> ' http : / / docs . jboss . org / jbossas / javadoc / 4 . 0 . 5 / connector ' <nl> ) <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 199 <nl> + versionCode 200 <nl> versionName " 11 - beta1 " <nl> } <nl> beta { <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' com . android . library ' <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . theartofdev . edmodo ' <nl> PUBLISH_ARTIFACT_ID = ' android - image - cropper ' <nl> - PUBLISH_VERSION = ' 1 . 0 . 7 ' <nl> + PUBLISH_VERSION = ' 1 . 1 . 0 ' <nl> / / gradlew clean build generateRelease <nl> } <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 202 <nl> - versionName " 11 - beta2 " <nl> + versionCode 203 <nl> + versionName " 11 - beta3 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> zip . doFirst { task - > <nl> } <nl> task release ( dependsOn : [ zip , " : plugins - attachments : release " ] ) < < { <nl> - ant . delete ( dir : explodedDistDir ) <nl> + / / ant . delete ( dir : explodedDistDir ) <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> 
mmm a / subprojects / build - scan - performance / build - scan - performance . gradle <nl> ppp b / subprojects / build - scan - performance / build - scan - performance . gradle <nl> dependencies { <nl> useClassycle ( ) <nl> tasks . withType ( org . gradle . testing . PerformanceTest ) { <nl> - dependsOn tasks . largeJavaProjectWithBuildScanPlugin <nl> systemProperties + = [ incomingArtifactDir : " $ { rootDir } / incoming / " ] <nl> } <nl> 
mmm a / modules / build . gradle <nl> ppp b / modules / build . gradle <nl> subprojects { <nl> throw new InvalidModelException ( " Modules cannot disable isolation " ) <nl> } <nl> } <nl> + <nl> + / / these are implementation details of our build , no need to publish them ! <nl> + install . enabled = false <nl> + uploadArchives . enabled = false <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 24 <nl> buildToolsVersion = " 24 . 0 . 1 " <nl> - supportLibVersion = " 24 . 1 . 0 " <nl> + supportLibVersion = " 24 . 1 . 1 " <nl> } <nl> allprojects { <nl> 
mmm a / python / educational - python / build . gradle <nl> ppp b / python / educational - python / build . gradle <nl> subprojects { <nl> sourceSets { <nl> main { <nl> java . srcDirs ' src ' , ' . . / src ' , ' . . / gen ' <nl> - resources . srcDir ' resources ' <nl> + resources . srcDirs ' resources ' , ' . . / resources ' <nl> } <nl> test { <nl> java . srcDir ' test ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0b6 ' <nl> + version = ' 2 . 0 ' <nl> def jarVersion = version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { subProject - > <nl> findbugs { <nl> sourceSets = [ subProject . sourceSets . main , subProject . sourceSets . test ] <nl> ignoreFailures = true <nl> + toolVersion = ' 3 . 0 . 1 ' <nl> } <nl> / / exclude generated sources <nl> / / unfortunately this nice easy approach does not seem to work : http : / / forums . gradle . org / gradle / topics / specify_excludes_to_checkstyle_task <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 167 <nl> - versionName " 3 . 1 . 0 . 10 " <nl> + versionCode 168 <nl> + versionName " 3 . 1 . 0 . 11 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / modules / build - module . gradle <nl> ppp b / modules / build - module . gradle <nl> sourceSets { <nl> main { <nl> compileClasspath + = configurations . portal <nl> } <nl> - } <nl> \ No newline at end of file <nl> + } <nl> + <nl> + group = " com . liferay " <nl> \ No newline at end of file <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> } <nl> productFlavors { <nl> } <nl> + <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / spock - report / report . gradle <nl> ppp b / spock - report / report . gradle <nl> apply from : script ( " publishMaven " ) <nl> displayName = " Spock Framework - Report Module " <nl> - description = " Generates HTML reports that read like a specification . " <nl> + description = " Interactive , specification - style HTML reports for Spock specifications . " <nl> dependencies { <nl> compile project ( " : spock - core " ) <nl> 
mmm a / python / setup - test - environment / build . gradle <nl> ppp b / python / setup - test - environment / build . gradle <nl> + import org . apache . tools . ant . taskdefs . condition . Os <nl> + <nl> plugins { <nl> id " com . jetbrains . python . envs " version " 0 . 0 . 6 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11254 <nl> - versionName = ' 13 ' <nl> + versionCode = 11255 <nl> + versionName = ' 13 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / subprojects / docs / docs . gradle <nl> ppp b / subprojects / docs / docs . gradle <nl> task decorateReleaseNotes ( type : Jsoup ) { <nl> apply from : " release - notes - transform . gradle " <nl> } <nl> + import org . apache . tools . ant . filters . ReplaceTokens <nl> task releaseNotes ( type : Copy ) { <nl> group = " release notes " <nl> ext . fileName = " release - notes . html " <nl> 
mmm a / android / build . gradle <nl> ppp b / android / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : driver ' ) { <nl> } <nl> task asyncTest ( type : Test , dependsOn : functionalTest ) { <nl> + onlyIf { JavaVersion . current ( ) . isJava7Compatible ( ) } <nl> testClassesDir = sourceSets . async . output . classesDir <nl> classpath = sourceSets . async . runtimeClasspath <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> versionCode Integer . parseInt ( project . VERSION_CODE ) <nl> } <nl> - compileOptions { <nl> - sourceCompatibility JavaVersion . VERSION_1_7 <nl> - targetCompatibility JavaVersion . VERSION_1_7 <nl> - } <nl> - <nl> buildTypes { <nl> release { <nl> runProguard false <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId ' com . mikepenz . lollipopshowcase ' <nl> minSdkVersion 16 <nl> targetSdkVersion 21 <nl> - versionCode 201 <nl> - versionName " 2 . 0 . 1 " <nl> + versionCode 202 <nl> + versionName " 2 . 0 . 2 " <nl> } <nl> buildTypes { <nl> 
mmm a / auth / build . gradle <nl> ppp b / auth / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile fileTree ( include : [ ' * . jar ' ] , dir : ' libs ' ) <nl> testCompile ' junit : junit : 4 . 12 ' <nl> testCompile ' org . mockito : mockito - core : 1 . 10 . 19 ' <nl> testCompile " org . robolectric : robolectric : 3 . 1 - rc1 " <nl> 
mmm a / OsmAnd / build . gradle <nl> ppp b / OsmAnd / build . gradle <nl> task updateNoTranslate ( type : Copy ) { <nl> line - > replaceNoTranslate ( line ) ; <nl> } <nl> } <nl> - into ' res / values / ' <nl> + into " res / values / " <nl> } <nl> task collectVoiceAssets ( type : Sync ) { <nl> 
mmm a / Android / Sample / app / build . gradle <nl> ppp b / Android / Sample / app / build . gradle <nl> android { <nl> } <nl> productFlavors { <nl> - baidu { } <nl> - qihu360 { } <nl> + wequick { } <nl> } <nl> productFlavors . all { flavor - > <nl> flavor . manifestPlaceholders = [ UMENG_CHANNEL_VALUE : name ] <nl> 
mmm a / cglib - and - asm / build . gradle <nl> ppp b / cglib - and - asm / build . gradle <nl> task copyToMockito { <nl> } <nl> copy { <nl> from jarSources . archivePath <nl> - into " . . / lib / sources / repackaged " <nl> + into " . . / lib / sources " <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15002 <nl> - versionName = ' 15 ' <nl> + versionCode = 15003 <nl> + versionName = ' 15 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / timber - lint / build . gradle <nl> ppp b / timber - lint / build . gradle <nl> apply plugin : ' java ' <nl> + targetCompatibility = JavaVersion . VERSION_1_7 <nl> + sourceCompatibility = JavaVersion . VERSION_1_7 <nl> + <nl> configurations { <nl> lintChecks <nl> } <nl> 
mmm a / gradle / javaModule . gradle <nl> ppp b / gradle / javaModule . gradle <nl> + / * <nl> * Copyright 2013 the original author or authors . <nl> * <nl> * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' DaoCore ' , ' DaoGenerator ' , ' DaoExampleGenerator ' , ' DaoExample ' <nl> \ No newline at end of file <nl> + include ' DaoCore ' , ' DaoGenerator ' , ' DaoExampleGenerator ' <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 24 <nl> buildToolsVersion = " 24 . 0 . 1 " <nl> - supportLibVersion = " 24 . 0 . 0 " <nl> + supportLibVersion = " 24 . 1 . 0 " <nl> } <nl> allprojects { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> minSdkVersion 9 <nl> / / noinspection OldTargetApi <nl> targetSdkVersion 23 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 59 <nl> + versionCode 60 <nl> versionName " 3 . 0 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 59 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / subprojects / scala / scala . gradle <nl> ppp b / subprojects / scala / scala . gradle <nl> dependencies { <nl> useTestFixtures ( project : " : plugins " ) / / includes core test fixtures <nl> configure ( [ integTest , daemonIntegTest ] ) { <nl> - jvmArgs " - XX : MaxPermSize = 1g " / / AntInProcessScalaCompilerIntegrationTest needs lots of permgen <nl> + jvmArgs " - XX : MaxPermSize = 1500m " / / AntInProcessScalaCompilerIntegrationTest needs lots of permgen <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> minSdkVersion 9 <nl> / / noinspection OldTargetApi <nl> targetSdkVersion 23 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 60 <nl> + versionCode 61 <nl> versionName " 3 . 0 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 59 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> buildToolsVersion project . ANDROID_BUILD_TOOLS_VERSION <nl> defaultConfig { <nl> - versionCode Integer . parseInt ( VERSION_CODE ) <nl> - versionName VERSION_NAME <nl> + minSdkVersion Integer . parseInt ( project . ANDROID_MIN_SDK ) <nl> + targetSdkVersion Integer . parseInt ( project . ANDROID_TARGET_SDK_VERSION ) <nl> + versionCode Integer . parseInt ( project . VERSION_CODE ) <nl> + versionName project . VERSION_NAME <nl> } <nl> sourceSets { <nl> 
mmm a / deskshare / app / build . gradle <nl> ppp b / deskshare / app / build . gradle <nl> dependencies { <nl> } <nl> war . doLast { <nl> - ant . unzip ( src : war . archivePath , dest : " $ buildDir / exploded " ) <nl> + ant . unzip ( src : war . archivePath , dest : " $ buildDir / deskshare " ) <nl> } <nl> task deploy ( dependsOn : war , type : Copy ) { <nl> 
mmm a / api / build . gradle <nl> ppp b / api / build . gradle <nl> apply plugin : " signing " <nl> jar . baseName = " seriesguide - api " <nl> group = " com . uwetrottmann . seriesguide " <nl> - version = " 1 . 1 . 0 " <nl> + version = " 1 . 1 . 1 " <nl> / / load properties file <nl> def Properties props = new Properties ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15046 <nl> - versionName = ' 18 . 0 . 3 ' <nl> + versionCode = 15050 <nl> + versionName = ' 19 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : OsmAnd - java ' , ' : api - test ' <nl> + include ' : OsmAnd - java ' <nl> include ' : eclipse - compile : gridlayout ' <nl> include ' : eclipse - compile : cardview ' <nl> include ' : eclipse - compile : design ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' java ' <nl> tasks . withType ( Test ) { forkEvery = 1 } <nl> + test { <nl> + maxHeapSize = ' 1g ' / / or however much memory the tests need <nl> + } <nl> } <nl> project ( ' : archaius - core ' ) { <nl> 
mmm a / ratpack - core / ratpack - core . gradle <nl> ppp b / ratpack - core / ratpack - core . gradle <nl> dependencies { <nl> runtime ' org . javassist : javassist : 3 . 18 . 1 - GA ' <nl> } <nl> + <nl> + test { <nl> + maxParallelForks = 3 <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> } <nl> } <nl> 
mmm a / gradle / bintray . gradle <nl> ppp b / gradle / bintray . gradle <nl> if ( ! bintrayUser ) { <nl> } <nl> } <nl> + logger . lifecycle " Bintray user : $ bintrayUser " <nl> + <nl> allprojects { <nl> apply plugin : ' artifactory ' <nl> 
mmm a / modules / apps / foundation / petra / petra - io - delta / build . gradle <nl> ppp b / modules / apps / foundation / petra / petra - io - delta / build . gradle <nl> - sourceCompatibility = " 1 . 6 " <nl> - targetCompatibility = " 1 . 6 " <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15086 <nl> - versionName = ' 21 . 1 . 1 ' <nl> + versionCode = 15087 <nl> + versionName = ' 21 . 1 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 10 . + ' <nl> - classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 9 . + ' <nl> + classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 10 . + ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> libs = [ <nl> allprojects { <nl> group = " org . spockframework " <nl> - version = " 0 . 6 - groovy - 1 . 7 - rc - 1 " <nl> + version = " 0 . 6 - groovy - 1 . 7 " <nl> apply from : script ( " common " ) <nl> } <nl> 
mmm a / Library / build . gradle <nl> ppp b / Library / build . gradle <nl> apply plugin : ' com . android . library ' <nl> dependencies { <nl> - compile ' com . android . support : support - v4 : 20 . 0 . 0 ' <nl> + compile ' com . android . support : support - v4 : 21 . 0 . 3 ' <nl> } <nl> android { <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 186 <nl> - versionName " 9 - beta5 " <nl> + versionCode 187 <nl> + versionName " 9 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' com . jfrog . artifactory - upload ' <nl> group = ' com . sk89q . worldedit ' <nl> - version = ' 6 . 1 ' <nl> + version = ' 6 . 1 . 1 - SNAPSHOT ' <nl> ext . internalVersion = version + " ; " + gitCommitHash <nl> sourceCompatibility = 1 . 6 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15053 <nl> - versionName = ' 19 ' <nl> + versionCode = 15054 <nl> + versionName = ' 19 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / sample - app / build . gradle <nl> ppp b / sample - app / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " com . kogitune . prelollipoptransition " <nl> minSdkVersion 14 <nl> - targetSdkVersion 22 <nl> + targetSdkVersion 23 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> testInstrumentationRunner " android . support . test . runner . AndroidJUnitRunner " <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> repositories { <nl> } <nl> dependencies { <nl> - compile ' joda - time : joda - time : 2 . 9 . 3 : no - tzdb ' <nl> + compile ' joda - time : joda - time : 2 . 9 . 4 : no - tzdb ' <nl> } <nl> tzdata { <nl> 
mmm a / subprojects / core / core . gradle <nl> ppp b / subprojects / core / core . gradle <nl> dependencies { <nl> compile project ( " : baseServicesGroovy " ) <nl> compile project ( " : resources " ) <nl> + runtime project ( " : resourcesHttp " ) <nl> compile libraries . asm <nl> compile libraries . ant <nl> compile libraries . commons_collections <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 235 <nl> - versionName = ' 12 ' <nl> + versionCode = 236 <nl> + versionName = ' 12 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> androidBuildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - androidVersionCode = 15172 <nl> - androidVersionName = ' 29 - beta3 ' <nl> + androidVersionCode = 15173 <nl> + androidVersionName = ' 29 ' <nl> supportVersion = ' 23 . 1 . 1 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . gradle . addListener ( new TestListener ( ) { <nl> testOutputs [ test ] . each { e - > <nl> print e <nl> } <nl> + result . getExceptions ( ) . each { e - > <nl> + e . printStackTrace ( ) ; <nl> + } <nl> } <nl> testOutputs . remove ( test ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> clean { <nl> delete ( docs . destinationDir , libs . destinationDir ) <nl> } <nl> - task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 0 . 9 - 20100118091626 + 0100 ' <nl> - jarPath = ' gradle / wrapper ' <nl> - } <nl> - <nl> 
mmm a / bin / templates / project / build . gradle <nl> ppp b / bin / templates / project / build . gradle <nl> buildscript { <nl> } <nl> } <nl> + / / Allow plugins to declare Maven dependencies via build - extras . gradle . <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> + <nl> task wrapper ( type : Wrapper ) { <nl> gradleVersion = ' 2 . 2 . 1 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' } ) { <nl> } <nl> javadoc { <nl> + exclude " * * / com / mongodb / * * / internal / * * " <nl> + <nl> dependsOn project ( ' : util ' ) . compileJava / / We need taglets to be compiled <nl> options . author = true <nl> options . version = true <nl> 
mmm a / subprojects / tooling - api / tooling - api . gradle <nl> ppp b / subprojects / tooling - api / tooling - api . gradle <nl> dependencies { <nl> testCompile libraries . groovy <nl> / / lots of integTest errors otherwise <nl> - integTestCompile project ( ' : internalIntegTesting ' ) <nl> integTestRuntime project ( ' : ide ' ) <nl> integTestRuntime project ( ' : buildInit ' ) <nl> integTestRuntime project ( ' : buildComparison ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> junitVersion = ' 4 . 11 ' <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 9 . 5 ' <nl> - httpComponentVersion = ' 4 . 3 . 4 ' <nl> + httpComponentVersion = ' 4 . 3 . 5 ' <nl> jsonpathVersion = ' 0 . 9 . 1 ' <nl> freemarkerVersion = ' 2 . 3 . 20 ' <nl> } <nl> 
mmm a / k9mail - library / build . gradle <nl> ppp b / k9mail - library / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 15 <nl> - targetSdkVersion 21 <nl> testInstrumentationRunner " android . support . test . runner . AndroidJUnitRunner " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> This API is considered beta quality . " " " <nl> dependencies { <nl> compile project ( ' : core ' ) <nl> - compile ' org . igniterealtime . jbosh : jbosh : 0 . 6 . 0 ' <nl> + compile ' org . igniterealtime . jbosh : jbosh : 0 . 7 . 0 ' <nl> } <nl> } <nl> 
mmm a / grails - plugin - tomcat / build . gradle <nl> ppp b / grails - plugin - tomcat / build . gradle <nl> dependencies { <nl> - compile project ( " : grails - tomcat " ) , project ( " : grails - core " ) <nl> + compile project ( " : grails - tomcat " ) <nl> + compile project ( " : grails - core " ) , { <nl> + ext . notInPom = true <nl> + } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 2 " <nl> - supportLibVersion = " 23 . 2 . 1 " <nl> + supportLibVersion = " 23 . 3 . 0 " <nl> } <nl> allprojects { <nl> 
mmm a / gradle / javaModule . gradle <nl> ppp b / gradle / javaModule . gradle <nl> tasks . withType ( Test ) { <nl> jvmArgs " - Xss320k " <nl> minHeapSize " 120m " <nl> - maxHeapSize " 280m " <nl> + maxHeapSize " 200m " <nl> testLogging { <nl> exceptionFormat " full " <nl> 
mmm a / gradle / performanceTest . gradle <nl> ppp b / gradle / performanceTest . gradle <nl> plugins . withType ( org . gradle . plugins . ide . idea . IdeaPlugin ) { <nl> } <nl> } <nl> - tasks . withType ( PerformanceTest ) { <nl> + tasks . withType ( PerformanceTest ) { task - > <nl> doFirst { <nl> if ( task . channel ) { <nl> performanceReport . systemProperty ' org . gradle . performance . execution . channel ' , task . channel <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> / / Establish version and status <nl> - ext . releaseVersion = ' 0 . 4 . 1 ' <nl> + ext . releaseVersion = ' 0 . 4 . 2 ' <nl> ext . githubProjectName = ' archaius ' <nl> / / group = ' com . netflix . archaius ' <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> dependencies { <nl> android { <nl> compileSdkVersion 19 <nl> - buildToolsVersion " 19 . 0 " <nl> buildToolsVersion " 19 . 0 . 1 " <nl> sourceSets { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' base ' <nl> allprojects { <nl> - version = ' 3 . 1 . 0 . CI - SNAPSHOT ' <nl> + version = ' 3 . 1 . 0 . RC1 ' <nl> releaseBuild = version . endsWith ( ' RELEASE ' ) <nl> snapshotBuild = version . endsWith ( ' SNAPSHOT ' ) <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / rxjava - contrib / rxjava - android - samples / build . gradle <nl> ppp b / rxjava - contrib / rxjava - android - samples / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 8 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 9 . + ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> - supportLibVersion = ' 23 . 2 . 1 ' <nl> + supportLibVersion = ' 23 . 3 . 0 ' <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> jmockVersion = ' 1 . 2 . 0 ' <nl> logbackVersion = ' 1 . 1 . 2 ' <nl> log4jVersion = ' 1 . 2 . 17 ' <nl> - log4j2Version = ' 2 . 1 ' <nl> + log4j2Version = ' 2 . 4 ' <nl> luceneVersion = ' 4 . 7 . 2 ' <nl> openbeansVersion = ' 1 . 0 ' <nl> openejbVersion = ' 1 . 0 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task clean ( type : Delete ) { <nl> ext { <nl> androidCompileSdkVersion = 25 <nl> - androidBuildToolsVersion = ' 25 . 0 . 0 ' <nl> + androidBuildToolsVersion = ' 25 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> androidVersionCode = 15224 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : driver - compat ' ) { <nl> clirr { <nl> ignoreFailures = true <nl> - ignoredDifferenceTypes 10000 <nl> + ignoredDifferenceTypes 10000 , 7011 , 8000 <nl> ignoredPackages ' org . mongodb ' <nl> baseline ' org . mongodb : mongo - java - driver : 2 . 11 . 1 ' <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 214 <nl> - versionName ' 3 . 2 . 10 ' <nl> + versionCode 215 <nl> + versionName ' 3 . 2 . 11 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / test / build . gradle <nl> ppp b / test / build . gradle <nl> repositories { <nl> mavenCentral ( ) <nl> } <nl> - ext . seleniumVersion = " 2 . 24 . 1 " <nl> + ext . seleniumVersion = " 2 . 25 . 0 " <nl> dependencies { <nl> [ " selenium - java " , " selenium - remote - driver " , " selenium - server " ] . each { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15091 <nl> - versionName = ' 22 . 0 . 0 - beta2 ' <nl> + versionCode = 15092 <nl> + versionName = ' 22 . 0 . 0 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / OsmAnd / build . gradle <nl> ppp b / OsmAnd / build . gradle <nl> task collectVoiceAssets ( type : Sync ) { <nl> include " * * / * . p " <nl> } <nl> - task cleanNoTranslate ( ) { <nl> - delete ( ' res / values / no_translate . xml ' ) <nl> + task cleanNoTranslate ( type : Delete ) { <nl> + delete ( ' res / values / no_translate . xml ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' <nl> - classpath ' com . novoda : bintray - release : 0 . 3 . 2 ' <nl> + classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> + vectorDrawables . useSupportLibrary = true <nl> buildConfigField " boolean " , " VISUAL_EDITOR_AVAILABLE " , " false " <nl> buildConfigField " boolean " , " IN_APP_BILLING_AVAILABLE " , " false " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - alpha3 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> androidBuildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - androidVersionCode = 15180 <nl> - androidVersionName = ' 30 - beta1 ' <nl> + androidVersionCode = 15181 <nl> + androidVersionName = ' 30 - beta2 ' <nl> supportVersion = ' 23 . 2 . 1 ' <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> lintOptions { <nl> / / This seems to be firing due to okio referencing java . nio . File <nl> / / which is harmless for us . <nl> - warning ' InvalidPackage ' <nl> + warning ' InvalidPackage ' , <nl> + / / don ' t need parcel creator for the sub - class of MessageSnapshot . <nl> + ' ParcelCreator ' <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - beta2 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 0 - beta3 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / realm / realm - library / build . gradle <nl> ppp b / realm / realm - library / build . gradle <nl> android { <nl> consumerProguardFiles ' proguard - rules . pro ' <nl> testInstrumentationRunner " android . support . test . runner . AndroidJUnitRunner " <nl> } <nl> + <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task performanceTest ( type : Test , group : ' Verification ' , dependsOn : [ classes , tes <nl> testLogging { <nl> exceptionFormat = ' full ' <nl> } <nl> + outputs . upToDateWhen { false } <nl> } <nl> check . dependsOn performanceTest <nl> 
mmm a / Application / LinkBubble / build . gradle <nl> ppp b / Application / LinkBubble / build . gradle <nl> buildscript { <nl> / / Manifest version information ! <nl> def versionMajor = 1 <nl> def versionMinor = 6 <nl> - def versionPatch = 2 <nl> + def versionPatch = 3 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> apply plugin : ' com . android . application ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 3 ' <nl> + version = ' 2 . 0 . 4 ' <nl> def jarVersion = version <nl> 
mmm a / modules / frontend / frontend - js - metal - web / build . gradle <nl> ppp b / modules / frontend / frontend - js - metal - web / build . gradle <nl> cache { <nl> configJSModules { <nl> dependsOn buildMetalComponents <nl> - include " * * / * . js " <nl> + include " * * / * . js * " <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15143 <nl> - versionName = ' 26 - beta4 ' <nl> + versionCode = 15144 <nl> + versionName = ' 26 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / bubbles / build . gradle <nl> ppp b / bubbles / build . gradle <nl> install { <nl> } <nl> task sourcesJar ( type : Jar ) { <nl> - from sourceSets . main . java . srcDirsgit <nl> + from sourceSets . main . java . srcDirs <nl> classifier = ' sources ' <nl> } <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> task multiNative ( type : ProjectGeneratorTask ) { <nl> } <nl> task manyProjectsNative ( type : ProjectGeneratorTask ) { <nl> - projects = 500 <nl> + projects = 100 <nl> sourceFiles = 1 <nl> nativeProject = true <nl> templateArgs = [ <nl> 
mmm a / core / build . gradle <nl> ppp b / core / build . gradle <nl> apply plugin : ' nebula . maven - scm ' <nl> apply plugin : ' nebula . source - jar ' <nl> apply plugin : ' nebula . javadoc - jar ' <nl> + archivesBaseName = ' elasticsearch ' <nl> publishing { <nl> publications { <nl> nebula { <nl> 
mmm a / moco - runner / build . gradle <nl> ppp b / moco - runner / build . gradle <nl> task proguardCheck ( type : Test , dependsOn : proguard ) { <nl> classpath = classpath - files ( sourceSets . main . output . classesDir ) - files ( configurations . runtime ) + files ( proguard . outputs . files . singleFile ) <nl> } <nl> + uploadArchives . dependsOn proguard <nl> uploadArchives . dependsOn proguardCheck <nl> artifacts { <nl> 
mmm a / gradle / java . gradle <nl> ppp b / gradle / java . gradle <nl> / / Gradle file for java - based project <nl> / / <nl> apply plugin : ' java ' <nl> - apply plugin : ' jacoco ' <nl> sourceCompatibility = 1 . 7 <nl> targetCompatibility = 1 . 7 <nl> 
mmm a / syncany - util / build . gradle <nl> ppp b / syncany - util / build . gradle <nl> repositories { <nl> dependencies { <nl> compile " commons - io : commons - io : 2 . 4 " <nl> - compile " com . google . code . gson : gson : 2 . 2 . 4 " <nl> testCompile " junit : junit : 4 . 9 " <nl> } <nl> 
mmm a / UltimateAndroidGradle / build . gradle <nl> ppp b / UltimateAndroidGradle / build . gradle <nl> buildscript { <nl> allprojects { <nl> repositories { <nl> jcenter ( ) <nl> + mavenCentral ( ) <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 13 . 1 ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 13 . 2 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> ext { <nl> plugin_head_version = ' 2cd68c235f8b0fdf667090e8d2653d80e4183473 ' <nl> plugin_bigdesk_version = ' 2 . 2 . 2c ' <nl> plugin_segmentspy_version = ' 0 . 2 . 0 ' <nl> - plugin_crateadmin_version = ' 0 . 2 . 4 ' <nl> + plugin_crateadmin_version = ' 0 . 2 . 5 ' <nl> } <nl> evaluationDependsOn ( ' : es ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> classpath = files ( ) <nl> } <nl> } <nl> + <nl> + if ( JavaVersion . current ( ) . isJava8Compatible ( ) ) { <nl> + allprojects { <nl> + tasks . withType ( Javadoc ) { <nl> + options . addStringOption ( ' Xdoclint : none ' , ' - quiet ' ) <nl> + } <nl> + } <nl> + } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply { <nl> task clean < < { <nl> / / add additional dirs <nl> / / delete ( docs . destinationDir , libs . destinationDir ) <nl> - delete ( libs . destinationDir ) <nl> + delete ( " $ { projectDir } / lib " ) <nl> delete ( buildDir ) <nl> } <nl> 
mmm a / subprojects / groovy - jmx / build . gradle <nl> ppp b / subprojects / groovy - jmx / build . gradle <nl> apply plugin : ' code - quality ' <nl> dependencies { <nl> compile project ( ' : ' ) <nl> + testCompile project ( ' : ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> allprojects { <nl> group = ' io . realm ' <nl> - version = ' 0 . 8 ' <nl> + version = ' 0 . 80 ' <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : libs / MemorizingTrustManager ' <nl> include ' : libs / minidns ' <nl> include ' : libs / openpgp - api - lib ' <nl> + <nl> + rootProject . name = ' Conversations ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " com . etiennelawlor . quickreturn " <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> - versionCode 13 <nl> - versionName " 0 . 0 . 13 " <nl> + versionCode 14 <nl> + versionName " 0 . 0 . 14 " <nl> } <nl> signingConfigs { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> uploadArchives { <nl> repositories . mavenDeployer { <nl> - repository ( url : " file : / / localhost / Users / matthias / Projects / test / " ) <nl> + repository ( url : " file : / / localhost / Users / matthias / Projects / maven2 / " ) <nl> } <nl> } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> nettyVersion = ' 4 . 0 . 36 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 20 ' <nl> + slf4jVersion = ' 1 . 7 . 21 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 7 . 3 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> group = ' com . github . tomakehurst ' <nl> version = ' 2 . 0 - beta ' <nl> def versions = [ <nl> - jackson : ' 2 . 6 . 0 ' , <nl> + jackson : ' 2 . 6 . 1 ' , <nl> jetty : ' 9 . 3 . 2 . v20150730 ' <nl> ] <nl> 
mmm a / gradle / groovyProject . gradle <nl> ppp b / gradle / groovyProject . gradle <nl> if ( buildTypes . pullRequestValidation . active ) { <nl> task compileAll { <nl> dependsOn tasks . matching { it instanceof JavaCompile | | it instanceof GroovyCompile } <nl> } <nl> - <nl> - test { <nl> - jvmArgs " - XX : MaxPermSize = 512m " <nl> - } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 23 . Final ' <nl> + nettyVersion = ' 4 . 0 . 24 . Final ' <nl> slf4jVersion = ' 1 . 7 . 7 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 4 . 3 ' <nl> 
mmm a / gradle / dependencies . gradle <nl> ppp b / gradle / dependencies . gradle <nl> versions + = [ <nl> scalaParserCombinators : " 1 . 0 . 4 " , <nl> slf4j : " 1 . 7 . 18 " , <nl> snappy : " 1 . 1 . 2 . 1 " , <nl> - zkclient : " 0 . 7 " , <nl> + zkclient : " 0 . 8 " , <nl> zookeeper : " 3 . 4 . 6 " , <nl> ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha3 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha7 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 2 . 2 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' <nl> } <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId ' com . etiennelawlor . quickreturn ' <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> - versionCode 18 <nl> - versionName ' 0 . 0 . 18 ' <nl> + versionCode 19 <nl> + versionName ' 0 . 0 . 19 ' <nl> } <nl> signingConfigs { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> nettyVersion = ' 4 . 0 . 26 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 10 ' <nl> + slf4jVersion = ' 1 . 7 . 12 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 5 . 1 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / ratpack - manual / ratpack - manual . gradle <nl> ppp b / ratpack - manual / ratpack - manual . gradle <nl> buildscript { <nl> dependencies { <nl> testCompile apiModules <nl> - testCompile " org . codehaus . groovy : groovy - ant : $ groovyVersion " <nl> } <nl> apply from : " $ rootDir / gradle / markdown2book . gradle " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> - guavaVersion = ' 14 . 0 ' <nl> + guavaVersion = ' 14 . 0 . 1 ' <nl> nettyVersion = ' 3 . 6 . 3 . Final ' <nl> slf4jVersion = ' 1 . 7 . 3 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile ' com . android . support : recyclerview - v7 : 21 . 0 . 0 ' <nl> + compile ' com . android . support : recyclerview - v7 : 22 . 0 . 0 ' <nl> } <nl> apply from : ' gradle - maven - push . gradle ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . netflix . nebula : gradle - extra - configurations - plugin : 2 . 0 . 1 ' <nl> + classpath ' com . netflix . nebula : gradle - extra - configurations - plugin : 3 . 0 . 3 ' <nl> } <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> apply plugin : ' android - library ' <nl> - dependencies { <nl> - compile ' com . android . support : support - v4 : 18 . 0 . + ' <nl> - } <nl> - <nl> android { <nl> compileSdkVersion 18 <nl> buildToolsVersion ' 18 . 0 . 1 ' <nl> 
mmm a / community / server / build . gradle <nl> ppp b / community / server / build . gradle <nl> dependencies { <nl> / / } <nl> } <nl> + javadoc . classpath + = project . sourceSets . test . compileClasspath <nl> + <nl> sourceSets { <nl> integrationTest { <nl> / / TODO rename webtest into integrationTest <nl> 
mmm a / examples / kotlinExample / build . gradle <nl> ppp b / examples / kotlinExample / build . gradle <nl> buildscript { <nl> - ext . kotlin_version = ' 1 . 0 . 1 ' <nl> + ext . kotlin_version = ' 1 . 0 . 1 - 2 ' <nl> repositories { <nl> jcenter ( ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> allprojects { <nl> apply plugin : ' idea ' <nl> + apply plugin : ' eclipse ' <nl> } <nl> subprojects { <nl> 
mmm a / gradle / java9 . gradle <nl> ppp b / gradle / java9 . gradle <nl> task java9IntegTest ( type : Test ) { <nl> ' InProcessJavaCompilerIntegrationTest ' , <nl> ' AntForkingScalaCompilerIntegrationTest ' , <nl> ' AntInProcessScalaCompilerIntegrationTest ' , <nl> - ' ZincScalaCompilerIntegrationTest ' <nl> + ' ZincScalaCompilerIntegrationTest ' , <nl> + ' DaemonUsageSuggestionCrossVersionTest ' , <nl> + ' TestProgressDaemonErrorsCrossVersionSpec ' <nl> ] . collect { " * * / * $ { it } * " } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15140 <nl> - versionName = ' 26 - beta1 ' <nl> + versionCode = 15141 <nl> + versionName = ' 26 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> x { <nl> packageName " com . battlelancer . seriesguide . x " <nl> versionCode 160 <nl> - versionName " 7x " <nl> + versionName " 8x " <nl> } <nl> } <nl> } <nl> 
mmm a / requery - android / build . gradle <nl> ppp b / requery - android / build . gradle <nl> android { <nl> abortOnError false <nl> disable ' InvalidPackage ' <nl> } <nl> + packagingOptions { <nl> + exclude ' META - INF / rxjava . properties ' <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / modules / third - party / oasis - names - tc - wsrp / build . gradle <nl> ppp b / modules / third - party / oasis - names - tc - wsrp / build . gradle <nl> + sourceCompatibility = " 1 . 6 " <nl> + targetCompatibility = " 1 . 6 " <nl> + <nl> task fixGeneratedJavaFiles <nl> afterEvaluate { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 11 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 12 . + ' <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - rc1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 3 . 0 - alpha1 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ' - Xlint : - path ' , <nl> / / Disable errorprone checks <nl> ' - Xep : TypeParameterUnusedInFormals : OFF ' , <nl> + ' - Xep : TopLevel : OFF ' , <nl> ] <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . afollestad . materialdialogssample " <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 10 <nl> + versionCode 11 <nl> versionName " 1 . 0 " <nl> } <nl> buildTypes { <nl> deleted file mode 100644 <nl> index f987ece . . 0000000 <nl> Binary files a / sample / sample . apk and / dev / null differ <nl> 
mmm a / hibernate - osgi / hibernate - osgi . gradle <nl> ppp b / hibernate - osgi / hibernate - osgi . gradle <nl> test { <nl> if ( project . properties . java6Home = = null ) { <nl> / / hibernate - osgi * must * be run using Java 6 or 7 . So disable its tests if <nl> / / java6Home is not available <nl> - enabled = false <nl> + test . enabled = false <nl> } <nl> else { <nl> compileTestJava { <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> task buildObjC ( dependsOn : [ ' : library : actor - cocoa - base : build ' ] ) { <nl> } <nl> - task buildLibraries ( dependsOn : [ ' buildJs ' , ' : buildObjC ' ] ) { <nl> + task buildLibraries ( dependsOn : [ ' buildJs ' , ' buildObjC ' ] ) { <nl> } <nl> \ No newline at end of file <nl> 
mmm a / subprojects / docs / src / samples / play / advanced / build . gradle <nl> ppp b / subprojects / docs / src / samples / play / advanced / build . gradle <nl> plugins { <nl> id ' play - application ' <nl> id ' play - coffeescript ' <nl> + id ' play - javascript ' <nl> } <nl> repositories { <nl> 
mmm a / QKSMS / build . gradle <nl> ppp b / QKSMS / build . gradle <nl> android { <nl> } <nl> compileOptions { <nl> - compileOptions . encoding = " UTF - 8 " <nl> - <nl> / / Use Java 1 . 7 , requires minSdk 8 <nl> sourceCompatibility JavaVersion . VERSION_1_8 <nl> targetCompatibility JavaVersion . VERSION_1_8 <nl> 
mmm a / paperdb / build . gradle <nl> ppp b / paperdb / build . gradle <nl> repositories { <nl> } <nl> android { <nl> - compileSdkVersion 23 <nl> + compileSdkVersion 21 <nl> buildToolsVersion " 21 . 1 . 2 " <nl> defaultConfig { <nl> minSdkVersion 8 <nl> - targetSdkVersion 23 <nl> + targetSdkVersion 21 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 201 <nl> - versionName " 3 . 1 . 12 " <nl> + versionCode 202 <nl> + versionName " 3 . 1 . 13 " <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( jointBuildGroovyJarProperty ) { <nl> allprojects { <nl> repositories { <nl> maven { url " http : / / repo . grails . org / grails / core " } <nl> - <nl> - / / for aspectjweaver 1 . 8 . 0 . M1 <nl> - maven { url ' http : / / repo . springsource . org / libs - milestone ' } <nl> } <nl> configurations { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " de . robv . android . xposed . installer " <nl> minSdkVersion 15 <nl> targetSdkVersion 23 <nl> - versionCode 37 <nl> - versionName " 3 . 0 alpha4 " <nl> + versionCode 38 <nl> + versionName " 3 . 1 " <nl> + archivesBaseName = " XposedInstaller_ $ { versionName } " . replace ( ' ' , ' _ ' ) <nl> } <nl> buildTypes { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> maven { url ' http : / / repo . gradle . org / gradle / libs ' } <nl> + maven { url ' http : / / oss . sonatype . org / content / repositories / snapshots / ' } / / temporary repo for spock snapshots <nl> } <nl> } <nl> 
mmm a / examples / adapterExample / build . gradle <nl> ppp b / examples / adapterExample / build . gradle <nl> tasks . preBuild { <nl> } <nl> dependencies { <nl> - compile ' io . realm : realm - android : 0 . 75 . 1 ' <nl> + compile files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId ' com . etiennelawlor . quickreturn ' <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 19 <nl> - versionName ' 0 . 0 . 19 ' <nl> + versionCode 20 <nl> + versionName ' 0 . 0 . 20 ' <nl> } <nl> signingConfigs { <nl> release { <nl> 
mmm a / api / build . gradle <nl> ppp b / api / build . gradle <nl> apply plugin : " signing " <nl> jar . baseName = " seriesguide - api " <nl> group = " com . uwetrottmann . seriesguide " <nl> - version = " 1 . 1 . 1 " <nl> + version = " 1 . 2 . 0 " <nl> / / load properties file <nl> def Properties props = new Properties ( ) <nl> 
mmm a / benchmarks / build . gradle <nl> ppp b / benchmarks / build . gradle <nl> configureProtoCompilation ( ) <nl> def vmArgs = [ <nl> " - server " , <nl> " - Xms2g " , <nl> - " - Xmx2g " , <nl> - " - XX : + UseConcMarkSweepGC " <nl> + " - Xmx2g " <nl> ] <nl> task qps_client ( type : CreateStartScripts ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : moco - runner ' ) { <nl> configuration ' . . / proguard . pro ' <nl> } <nl> - artifacts { <nl> - archives uberjar <nl> - } <nl> - <nl> task proguardCheck ( type : Test , dependsOn : proguard ) { <nl> ext { <nl> jar . classifier = " proguard " <nl> 
mmm a / distribution / realm / build . gradle <nl> ppp b / distribution / realm / build . gradle <nl> configurations . create ( " default " ) <nl> - artifacts . add ( " default " , file ( ' realm - 0 . 80 . aar ' ) ) <nl> \ No newline at end of file <nl> + artifacts . add ( " default " , file ( ' realm - 0 . 1 . 0 . aar ' ) ) <nl> \ No newline at end of file <nl> 
mmm a / Library / build . gradle <nl> ppp b / Library / build . gradle <nl> apply plugin : ' android - library ' <nl> dependencies { <nl> - compile " com . android . support : support - v4 : 18 . 0 . 0 " <nl> + compile ' com . android . support : support - v4 : 20 . 0 . + ' <nl> } <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15062 <nl> - versionName = ' 20 - beta3 ' <nl> + versionCode = 15063 <nl> + versionName = ' 20 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> repositories { <nl> + jcenter ( ) <nl> mavenLocal ( ) <nl> mavenCentral ( ) <nl> } <nl> buildscript { <nl> allprojects { <nl> repositories { <nl> + jcenter ( ) <nl> mavenLocal ( ) <nl> mavenCentral ( ) <nl> maven { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / hystrix - core / build . gradle <nl> ppp b / hystrix - core / build . gradle <nl> jar { <nl> jmh { <nl> fork = 10 <nl> iterations = 3 <nl> - jmhVersion = ' 1 . 10 . 3 ' <nl> + jmhVersion = ' 1 . 11 . 1 ' <nl> profilers = [ ' gc ' ] <nl> threads = 8 <nl> warmup = ' 1s ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> - task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 1 . 11 ' <nl> - } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 241 <nl> - versionName ' 3 . 3 . 23 ' <nl> + versionCode 242 <nl> + versionName ' 3 . 3 . 24 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 238 <nl> - versionName ' 3 . 3 . 20 ' <nl> + versionCode 239 <nl> + versionName ' 3 . 3 . 21 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / core / build . gradle <nl> ppp b / core / build . gradle <nl> dependencies { <nl> compile ' org . slf4j : slf4j - api : 1 . 6 . 3 ' <nl> runtime ' org . slf4j : slf4j - simple : 1 . 6 . 3 ' <nl> testCompile ' junit : junit : 4 . 10 ' <nl> + testCompile " javax . servlet : servlet - api : $ servletApiVersion " <nl> } <nl> modifyPom { <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> tasks . withType ( GroovyCompile ) { <nl> - groovyOptions . forkOptions . memoryMaximumSize = " 312m " <nl> + groovyOptions . forkOptions . memoryMaximumSize = " 256m " <nl> allprojects { <nl> mustRunAfter tasks . withType ( CodeNarc ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 0 . 1 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15019 <nl> - versionName = ' 16 - beta7 ' <nl> + versionCode = 15020 <nl> + versionName = ' 16 - beta8 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / subprojects / tooling - api / tooling - api . gradle <nl> ppp b / subprojects / tooling - api / tooling - api . gradle <nl> integTestTasks . all { <nl> if ( isCiServer ) { <nl> maxParallelForks = Math . min ( 2 , rootProject . maxParallelForks ) <nl> } <nl> + forkEvery = 1 <nl> } <nl> daemonIntegTest { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> } <nl> def versionMajor = 0 <nl> - def versionMinor = 3 <nl> - def versionPatch = 3 <nl> + def versionMinor = 4 <nl> + def versionPatch = 0 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> def versionMajor = 0 <nl> def versionMinor = 2 <nl> - def versionPatch = 0 <nl> + def versionPatch = 1 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> 
mmm a / SampleApp / build . gradle <nl> ppp b / SampleApp / build . gradle <nl> repositories { <nl> } <nl> apply plugin : ' com . android . application ' <nl> - apply plugin : ' android ' <nl> android { <nl> compileSdkVersion 21 <nl> 
mmm a / modules / util . gradle <nl> ppp b / modules / util . gradle <nl> buildFixPackChangeLog { <nl> if ( project . hasProperty ( " rangeStart " ) ) { <nl> rangeStart = project . rangeStart <nl> } <nl> + <nl> + ticketIdPrefixes " LRQA " <nl> } <nl> cleanReleng < < { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - alpha1 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( buildDir , ' documentation ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task wrapper ( type : Wrapper ) { <nl> task ciBuild { <nl> / / validate the state of the project <nl> - dependsOn build , publishToMavenLocal , idea , eclipse <nl> + dependsOn build , publishToMavenLocal , tasks . idea , tasks . eclipse <nl> } <nl> \ No newline at end of file <nl> 
mmm a / libs / graphview / WordPressGraphView / build . gradle <nl> ppp b / libs / graphview / WordPressGraphView / build . gradle <nl> android { <nl> buildToolsVersion " 19 . 1 . 0 " <nl> defaultConfig { <nl> - versionName " 3 . 2 . 1 " <nl> + versionName " 3 . 2 . 2 " <nl> versionCode 1 <nl> minSdkVersion 8 <nl> targetSdkVersion 19 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> allprojects { <nl> - group = ' com . wunderkinder . slidinglayerlibrary ' <nl> - version = ' 1 . 1 ' <nl> + group = ' com . wunderlist . slidinglayer ' <nl> + version = ' 1 . 1 . 1 ' <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 1 . 1 ' <nl> + version = ' 2 . 1 . 2 ' <nl> def jarVersion = version <nl> 
mmm a / UltimateAndroidGradle / ultimateandroidui / build . gradle <nl> ppp b / UltimateAndroidGradle / ultimateandroidui / build . gradle <nl> dependencies { <nl> compile ' com . android . support : recyclerview - v7 : 21 . 0 . 0 ' <nl> compile project ( ' : ultimateandroid ' ) <nl> compile ' com . rengwuxian . materialedittext : library : 1 . 1 . 0 ' <nl> + compile ' com . skyfishjy . ripplebackground : library : 1 . 0 . 1 ' <nl> } <nl> 
mmm a / gradle / docs . gradle <nl> ppp b / gradle / docs . gradle <nl> task docProjectVersionInfo ( type : Copy ) { <nl> filter ( rootProject . propertiesFilter , org . apache . tools . ant . filters . ReplaceTokens ) <nl> } <nl> } <nl> + from ( ' subprojects / groovy - docgenerator / src / main / resources ' ) <nl> } <nl> task docGDK { <nl> 
mmm a / modules / third - party / org - apache - felix - configadmin / build . gradle <nl> ppp b / modules / third - party / org - apache - felix - configadmin / build . gradle <nl> task reJar ( type : Jar ) <nl> configurations { <nl> + archives . artifacts . removeAll { <nl> + it . archiveTask in [ jarSources , zipJavadoc ] <nl> + } <nl> + <nl> configAdmin <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> androidBuildToolsVersion = ' 25 . 0 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - androidVersionCode = 15223 <nl> - androidVersionName = ' 34 - beta4 ' <nl> + androidVersionCode = 15224 <nl> + androidVersionName = ' 34 ' <nl> supportVersion = ' 25 . 0 . 1 ' <nl> 
mmm a / jphp - sql - ext / build . gradle <nl> ppp b / jphp - sql - ext / build . gradle <nl> dependencies { <nl> compile project ( ' : jphp - runtime ' ) <nl> - compile ' org . apache . commons : commons - lang3 : 3 . 4 ' <nl> testCompile ' org . xerial : sqlite - jdbc : 3 . 8 . 7 ' <nl> testCompile ' junit : junit : 4 . + ' <nl> 
mmm a / gradle / maven - deployment . gradle <nl> ppp b / gradle / maven - deployment . gradle <nl> configure ( subprojects ) { <nl> pom { <nl> project { <nl> + version = project . version <nl> scm { <nl> url ' https : / / github . com / mongodb / morphia . git ' <nl> connection ' scm : git : https : / / github . com / mongodb / morphia . git ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task licenseFormatAndroid ( type : nl . javadude . gradle . plugins . license . License ) { <nl> licenseFormat . dependsOn licenseFormatAndroid <nl> ext { <nl> - majorVersion = " 2 . 26 . " <nl> + majorVersion = " 2 . 27 . " <nl> compileSdkVersion = 24 <nl> minSdkVersion = 17 <nl> 
mmm a / worldedit - forge / build . gradle <nl> ppp b / worldedit - forge / build . gradle <nl> repositories { <nl> } <nl> } <nl> - version = " 6 . 1 . 1 " <nl> + version = " 6 . 1 . 2 " <nl> ext . forgeVersion = " 12 . 16 . 1 . 1891 " <nl> ext . internalVersion = version + " ; " + gitCommitHash <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' base ' <nl> description = ' Spring Security ' <nl> allprojects { <nl> - version = ' 3 . 1 . 0 . CI - SNAPSHOT ' <nl> + version = ' 3 . 1 . 0 . RC3 ' <nl> releaseBuild = version . endsWith ( ' RELEASE ' ) <nl> snapshotBuild = version . endsWith ( ' SNAPSHOT ' ) <nl> 
mmm a / LeftNavBarExample / build . gradle <nl> ppp b / LeftNavBarExample / build . gradle <nl> allprojects { <nl> jcenter ( ) <nl> } <nl> } <nl> - <nl> - task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 2 . 1 ' <nl> - } <nl> \ No newline at end of file <nl> 
mmm a / library - core / build . gradle <nl> ppp b / library - core / build . gradle <nl> if ( project . hasProperty ( ' pushall ' ) | | project . hasProperty ( ' librarycoreonly ' ) ) { <nl> } <nl> dependencies { <nl> - compile ' com . android . support : support - annotations : 23 . 0 . 0 ' <nl> compile ' com . android . support : support - v4 : 23 . 0 . 0 ' <nl> } <nl> 
mmm a / buildSrc / build . gradle <nl> ppp b / buildSrc / build . gradle <nl> repositories { <nl> } <nl> dependencies { <nl> - compile ' joda - time : joda - time : 2 . 8 . 1 ' <nl> + compile ' joda - time : joda - time : 2 . 9 . 2 ' <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 0 . 0 - rc2 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / bigbluebutton - apps / build . gradle <nl> ppp b / bigbluebutton - apps / build . gradle <nl> repositories { <nl> } <nl> } <nl> mavenRepo urls : ' http : / / scala - tools . org / repo - releases / ' <nl> - flatDir name : ' fileRepo ' , dirs : " / opt / bigbluebutton / repo " <nl> + flatDir name : ' fileRepo ' , dirs : " / home / firstuser / dev / repo " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta6 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha1 ' <nl> } <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> rootProject . name = ' rxandroid - root ' <nl> include ' rxandroid ' <nl> include ' rxandroid - framework ' <nl> - include ' sample - app ' <nl> + / / include ' sample - app ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> maven { url " http : / / repo . terracotta . org / maven2 / " } <nl> } <nl> - eclipse . project . name = " $ { project . name } - 4 . 1 . x " <nl> } <nl> sonarqube { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configurations { <nl> } <nl> ext { <nl> - antVersion = ' 1 . 9 . 5 ' <nl> + antVersion = ' 1 . 9 . 6 ' <nl> asmVersion = ' 5 . 0 . 3 ' <nl> antlrVersion = ' 2 . 7 . 7 ' <nl> coberturaVersion = ' 1 . 9 . 4 . 1 ' <nl> 
mmm a / modules / settings . gradle <nl> ppp b / modules / settings . gradle <nl> else { <nl> exclude " sdk / * / samples / " <nl> exclude " sdk / gradle - templates / classes / " <nl> exclude " sdk / gradle - templates / src / " <nl> + exclude " util / * / samples / " <nl> include " * / * * / build . gradle " <nl> 
mmm a / modules / sdk / gradle - plugins - source - formatter / build . gradle <nl> ppp b / modules / sdk / gradle - plugins - source - formatter / build . gradle <nl> - import com . liferay . gradle . plugins . tasks . ReplaceRegexTask <nl> + import com . liferay . gradle . plugins . defaults . tasks . ReplaceRegexTask <nl> task updateReadme ( type : ReplaceRegexTask ) <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion rootProject . ext . minSdkVersion <nl> targetSdkVersion rootProject . ext . targetSdkVersion <nl> - versionCode 152 <nl> - versionName " 1 . 5 . 2 " <nl> + versionCode 160 <nl> + versionName " 1 . 6 . 0 " <nl> enforceUniquePackageName false <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 0 . 0 - rc1 ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 14 . 4 ' <nl> classpath ' com . github . ben - manes : gradle - versions - plugin : 0 . 6 ' <nl> } <nl> } <nl> 
mmm a / third_party / RootTools / build . gradle <nl> ppp b / third_party / RootTools / build . gradle <nl> apply plugin : ' android - library ' <nl> android { <nl> compileSdkVersion 19 <nl> - buildToolsVersion ' 19 . 1 ' <nl> + buildToolsVersion ' 21 . 1 . 1 ' <nl> defaultConfig { <nl> minSdkVersion 16 <nl> targetSdkVersion 19 <nl> 
mmm a / subprojects / launcher / launcher . gradle <nl> ppp b / subprojects / launcher / launcher . gradle <nl> dependencies { <nl> testFixturesCompile project ( ' : internalIntegTesting ' ) <nl> / / Needed for testing debug command line option <nl> - testFixturesCompile files ( Jvm . current ( ) . toolsJar ) <nl> + testFixturesCompile files ( Jvm . current ( ) . toolsJar ? : [ ] ) <nl> startScriptGenerator project ( ' : plugins ' ) <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 24 <nl> - versionCode 55 <nl> + versionCode 56 <nl> versionName " 2 . 9 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 53 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> + <nl> + group ' com . sothree . slidinguppanel ' <nl> + version ' 1 . 0 . 0 - SNAPSHOT ' <nl> + <nl> buildscript { <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : aeron - driver ' ) { <nl> } <nl> build . doLast { <nl> - tasks . startScripts . execute ( ) <nl> - tasks . installApp . execute ( ) <nl> tasks . distZip . execute ( ) <nl> } <nl> } <nl> 
mmm a / AndroidStudio / build . gradle <nl> ppp b / AndroidStudio / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> / / Establish version and status <nl> - ext . releaseVersion = ' 0 . 4 . 4 ' <nl> + ext . releaseVersion = ' 0 . 5 . 0 ' <nl> ext . githubProjectName = ' archaius ' <nl> / / group = ' com . netflix . archaius ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 16 . 0 . 1 ' <nl> nettyVersion = ' 4 . 0 . 18 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 6 ' <nl> + slf4jVersion = ' 1 . 7 . 7 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 3 . 2 ' <nl> junitVersion = ' 4 . 11 ' <nl> 
mmm a / config / gradle / common . gradle <nl> ppp b / config / gradle / common . gradle <nl> pmd { <nl> } <nl> findbugs { <nl> + toolVersion = " 3 . 0 . 0 " <nl> ignoreFailures = true <nl> / / This works as a solo module build in Jenkins as the config dir is copied in as part of the engine harness <nl> excludeFilter = new File ( rootDir , " config / findbugs / findbugs - exclude . xml " ) <nl> 
mmm a / smalidea / build . gradle <nl> ppp b / smalidea / build . gradle <nl> generateGrammarSource . dependsOn ( extractTokens ) <nl> ideaModule . dependsOn ( generateGrammarSource ) <nl> - task release ( dependsOn : ' : buildPlugin ' ) { <nl> + task release ( dependsOn : ' buildPlugin ' ) { <nl> } <nl> tasks . getByPath ( ' idea ' ) . dependsOn ( project ( ' : ' ) . getTasksByName ( ' idea ' , true ) . findAll ( { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> jenkins { <nl> job = ' minecraftforge ' <nl> } <nl> + launch4j { <nl> + jreMinVersion = ' 1 . 6 . 0 ' <nl> + } <nl> + <nl> uploadArchives { <nl> repositories { <nl> if ( project . hasProperty ( " filesmaven " ) ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> hadoopVersion = ' 2 . 5 . 0 - cdh5 . 2 . 0 ' <nl> jets3tVersion = ' 0 . 7 . 1 ' <nl> awsJavaSdkVersion = ' 1 . 8 . 3 ' <nl> - h2oFlowVersion = ' 0 . 2 . 8 ' <nl> + h2oFlowVersion = ' 0 . 2 . 9 ' <nl> } <nl> / / <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . jaeger . statusbardemo " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 2 <nl> - versionName " 1 . 1 " <nl> + versionCode 3 <nl> + versionName " 1 . 2 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> plugins { <nl> - id ' nebula . netflixoss ' version ' 2 . 2 . 2 ' <nl> + id ' nebula . netflixoss ' version ' 2 . 2 . 5 ' <nl> } <nl> ext { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 2 " <nl> - supportLibVersion = " 23 . 2 . 0 " <nl> + supportLibVersion = " 23 . 2 . 1 " <nl> } <nl> allprojects { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " com . bilibili . magicasakurademo " <nl> minSdkVersion 15 <nl> - targetSdkVersion 24 <nl> + targetSdkVersion 23 <nl> versionCode 1 <nl> versionName ' 1 . 0 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 34 . Final ' <nl> + nettyVersion = ' 4 . 0 . 35 . Final ' <nl> slf4jVersion = ' 1 . 7 . 18 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 7 . 3 ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> apply from : ' gradle - mvn - push . gradle ' <nl> dependencies { <nl> - compile ' com . mikepenz : iconics - core : 1 . 7 . 8 @ aar ' <nl> + compile ' com . mikepenz : iconics - core : 1 . 7 . 9 @ aar ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / gradle / upload . gradle <nl> ppp b / gradle / upload . gradle <nl> - boolean isUsingBintray = rootProject . bintrayUser & & rootProject . bintrayPassword <nl> + boolean isUsingBintray = rootProject . hasProperty ( ' bintrayUser ' ) & & rootProject . bintrayUser & & <nl> + rootProject . hasProperty ( ' bintrayPassword ' ) & & rootProject . bintrayPassword <nl> + <nl> if ( isUsingBintray ) { <nl> logger . lifecycle ' Deployment environment set to Bintray ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 4 ' <nl> + version = ' 2 . 0 . 5 ' <nl> def jarVersion = version <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 170 <nl> - versionName " 3 . 1 . 0 . 13 " <nl> + versionCode 171 <nl> + versionName " 3 . 1 . 0 . 14 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 16 . 0 . 1 ' <nl> - nettyVersion = ' 4 . 0 . 17 . Final ' <nl> + nettyVersion = ' 4 . 0 . 18 . Final ' <nl> slf4jVersion = ' 1 . 7 . 6 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 3 . 2 ' <nl> 
mmm a / subprojects / docs / docs . gradle <nl> ppp b / subprojects / docs / docs . gradle <nl> import org . gradle . build . GenerateReleasesXml <nl> import org . gradle . os . OperatingSystem <nl> apply plugin : ' base ' <nl> - apply from : " $ { rootDir } / gradle / ssh . gradle " <nl> configurations { <nl> userGuideStyleSheets <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' osgi ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> + defaultTasks ' build ' <nl> + <nl> group = ' com . googlecode . disruptor ' <nl> archivesBaseName = ' disruptor ' <nl> version = new Version ( major : 3 ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15013 <nl> - versionName = ' 16 - beta4 ' <nl> + versionCode = 15014 <nl> + versionName = ' 16 - beta5 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15034 <nl> - versionName = ' 17 - beta5 ' <nl> + versionCode = 15035 <nl> + versionName = ' 17 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> / / Proguard is only used to fix an issue with some Samsung device <nl> / / https : / / github . com / wordpress - mobile / WordPress - Android / issues / 2151 <nl> minifyEnabled true <nl> - proguardFile ' proguard . cfg ' <nl> + proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard . cfg ' <nl> } <nl> debug { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> tasks . withType ( Test ) { <nl> } <nl> } <nl> + task run ( type : JavaExec , dependsOn : [ testClasses ] ) { <nl> + main = mainClass <nl> + classpath = sourceSets . test . runtimeClasspath <nl> + } <nl> + <nl> task wrapper ( type : Wrapper ) { <nl> gradleVersion = ' 1 . 5 - 20130302103424 + 0000 ' <nl> } <nl> 
mmm a / gradle / publish . gradle <nl> ppp b / gradle / publish . gradle <nl> def calcArtifactId ( ) { <nl> } <nl> task sourcesJar ( type : Jar ) { <nl> - from sourceSets . main . allJava <nl> + from sourceSets . main . allSource <nl> classifier = ' sources ' <nl> } <nl> 
mmm a / gradle / license . gradle <nl> ppp b / gradle / license . gradle <nl> license { <nl> header rootProject . file ( ' codequality / HEADER ' ) <nl> ext . year = Calendar . getInstance ( ) . get ( Calendar . YEAR ) <nl> skipExistingHeaders true <nl> + exclude " * * / jsr166e / * . java " <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> jcenter ( ) <nl> } <nl> + tasks . withType ( Javadoc ) { <nl> + options . addStringOption ( ' Xdoclint : none ' , ' - quiet ' ) <nl> + options . addStringOption ( ' encoding ' , ' UTF - 8 ' ) <nl> + } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( ! project . hasProperty ( ' sonatypeRepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 0 . 3 . 4 " <nl> + version = " 0 . 3 . 5 " <nl> group = " com . facebook . rebound " <nl> signing { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : moco - core ' ) { <nl> project ( ' : moco - runner ' ) { <nl> project . ext { <nl> - logbackVersion = ' 1 . 1 . 0 ' <nl> + logbackVersion = ' 1 . 1 . 1 ' <nl> commonsCliVersion = ' 1 . 2 ' <nl> } <nl> 
mmm a / gradle / ide . gradle <nl> ppp b / gradle / ide . gradle <nl> topLevelDirs = topLevelDirs . collect { it . substring ( 1 ) } <nl> idea { <nl> project { <nl> - jdkName " 1 . 6 " <nl> + jdkName " 1 . 7 " / / TODO : remove after upgrading to Gradle 1 . 1 <nl> languageLevel " 1 . 5 " <nl> configure ( modules ) { module - > <nl> def prj = module . project <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> ivyVersion = ' 2 . 4 . 0 - rc1 ' <nl> jansiVersion = ' 1 . 11 ' <nl> jarjarVersion = ' 1 . 3 ' <nl> - jlineVersion = ' 2 . 12 ' <nl> + jlineVersion = ' 2 . 11 ' <nl> jmockVersion = ' 1 . 2 . 0 ' <nl> logbackVersion = ' 1 . 1 . 2 ' <nl> log4jVersion = ' 1 . 2 . 17 ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> apply plugin : ' com . neenbedankt . android - apt ' <nl> - apply from : " . . / constants . gradle " <nl> apply from : ' . . / library / quality / quality . gradle ' <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> all { <nl> resolutionStrategy { <nl> / / we cannot use ' hours ' for now due to java 1 . 5 problem <nl> - cacheDynamicVersionsFor 24 * 60 * 60 , ' seconds ' <nl> - cacheChangingModulesFor 24 * 60 * 60 , ' seconds ' <nl> + cacheDynamicVersionsFor 0 , ' seconds ' <nl> + cacheChangingModulesFor 0 , ' seconds ' <nl> } <nl> } <nl> } <nl> 
mmm a / ratpack - gradle / ratpack - gradle . gradle <nl> ppp b / ratpack - gradle / ratpack - gradle . gradle <nl> pluginBundle { <nl> } <nl> } <nl> } <nl> + <nl> + test . doFirst { <nl> + maxParallelForks 1 <nl> + } <nl> 
new file mode 100644 <nl> index 000000000000 . . 259a5569ce96 <nl> mmm / dev / null <nl> ppp b / modules / apps / frontend - theme - fjord / build . gradle <nl> + apply plugin : " com . liferay . app . defaults . plugin " <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha9 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 220 <nl> - versionName ' 3 . 3 . 2 ' <nl> + versionCode 221 <nl> + versionName ' 3 . 3 . 3 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> jdk14AllZip . doFirst { Task task - > <nl> } <nl> artifacts { <nl> - tasks . findAll { task - > task . class = = Zip } . each { <nl> + tasks . findAll { task - > task . name . matches ( ' . * Zip ' ) } . each { <nl> dists it <nl> } <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task distDoc ( type : Zip , dependsOn : doc ) { <nl> } <nl> task syncDoc ( type : Copy , dependsOn : doc ) { <nl> + inputs . files javadoc . outputs . files <nl> + inputs . files groovydoc . outputs . files <nl> + <nl> destinationDir ( file ( " $ buildDir / html " ) ) <nl> into ( ' api ' ) { <nl> from javadoc . destinationDir <nl> 
mmm a / oc_jb_workaround / build . gradle <nl> ppp b / oc_jb_workaround / build . gradle <nl> dependencies { <nl> android { <nl> compileSdkVersion 24 <nl> - buildToolsVersion " 23 . 0 . 3 " <nl> + buildToolsVersion " 24 . 0 . 0 " <nl> sourceSets { <nl> main { <nl> 
mmm a / ion / build . gradle <nl> ppp b / ion / build . gradle <nl> android { <nl> abortOnError false <nl> } <nl> - defaultConfig { <nl> - targetSdkVersion 21 <nl> - minSdkVersion 9 <nl> - } <nl> + / / defaultConfig { <nl> + / / targetSdkVersion 21 <nl> + / / minSdkVersion 9 <nl> + / / } <nl> compileSdkVersion 19 <nl> buildToolsVersion ' 20 . 0 . 0 ' <nl> 
mmm a / grails - async / build . gradle <nl> ppp b / grails - async / build . gradle <nl> dependencies { <nl> compile ' org . codehaus . gpars : gpars : 1 . 2 . 0 ' , { <nl> exclude group : ' org . multiverse ' , module : ' multiverse - core ' <nl> + exclude group : ' org . codehaus . groovy ' , module : ' groovy - all ' <nl> } <nl> } <nl> 
mmm a / hystrix - core / build . gradle <nl> ppp b / hystrix - core / build . gradle <nl> jmh { <nl> warmup = ' 1s ' <nl> warmupBatchSize = 1 <nl> warmupIterations = 5 <nl> - include = ' . * Construction . * ' <nl> } <nl> \ No newline at end of file <nl> 
mmm a / gradle / publish - maven . gradle <nl> ppp b / gradle / publish - maven . gradle <nl> def customizePom ( pom , gradleProject ) { <nl> email = " jhoeller @ vmware . com " <nl> } <nl> } <nl> + issueManagement { <nl> + system = " Jira " <nl> + url = " https : / / jira . springsource . org / browse / SPR " <nl> + } <nl> } <nl> } <nl> } <nl> 
mmm a / ratpack - manual / ratpack - manual . gradle <nl> ppp b / ratpack - manual / ratpack - manual . gradle <nl> test { <nl> systemProperty " localRepo " , rootProject . file ( " build / localrepo " ) . absolutePath <nl> systemProperty " gradleUserHome " , gradle . gradleUserHomeDir . absolutePath <nl> systemProperty " gradleHome " , gradle . gradleHomeDir . absolutePath <nl> + forkEvery 1 <nl> } <nl> task checkApi ( type : Checkstyle ) { <nl> 
mmm a / subprojects / core - impl / core - impl . gradle <nl> ppp b / subprojects / core - impl / core - impl . gradle <nl> import org . gradle . build . JarJar <nl> configurations { <nl> mvn3Input <nl> - mvn3JarJarOutputConfiguration <nl> - <nl> - compile . extendsFrom ( mvn3JarJarOutputConfiguration ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task wrapper ( type : Wrapper ) { <nl> / / Define a GroovyDoc task which depends on the generated groovydoc tool <nl> apply from : " $ projectDir / gradle / groovydoc . gradle " <nl> - <nl> - class MyGroovyOptions extends org . gradle . api . tasks . compile . GroovyCompileOptions { <nl> - boolean indy = true <nl> - } <nl> \ No newline at end of file <nl> 
mmm a / gradle / ide . gradle <nl> ppp b / gradle / ide . gradle <nl> tasks [ " eclipseJdt " ] . dependsOn ( eclipseJdtPrepare ) <nl> tasks [ " cleanEclipse " ] . dependsOn ( cleanEclipseJdtUi ) <nl> tasks [ " eclipse " ] . dependsOn ( eclipseCheckstyle , eclipseSettings , eclipseWstComponent ) <nl> + task eclipseConfiguration ( dependsOn : [ eclipseCheckstyle , eclipseSettings , eclipseWstComponent ] ) { <nl> + } <nl> eclipse { <nl> classpath { <nl> 
mmm a / ReactAndroid / release . gradle <nl> ppp b / ReactAndroid / release . gradle <nl> afterEvaluate { project - > <nl> repositories . mavenDeployer { <nl> / / Deploy to react - native / android , ready to publish to npm <nl> repository url : " file : / / $ { projectDir } / . . / android " <nl> + <nl> + configureReactNativePom pom <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha4 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha5 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> tasks . withType ( JavaCompile ) { <nl> artifacts { <nl> archives tasks . jar <nl> + archives jar <nl> } <nl> license { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta5 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta6 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> jansiVersion = " 1 . 2 . 1 " <nl> jlineVersion = " 1 . 0 " <nl> jnaVersion = " 3 . 2 . 3 " <nl> - slf4jVersion = " 1 . 7 . 2 " <nl> + slf4jVersion = " 1 . 7 . 4 " <nl> spockVersion = ' 0 . 7 - groovy - 2 . 0 ' <nl> springLoadedVersion = " 1 . 1 . 1 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> - group = ' com . augusttechgroup ' <nl> - version = ' 0 . 5 ' <nl> + allprojects { <nl> + group = ' com . augusttechgroup ' <nl> + version = ' 0 . 5 ' <nl> + } <nl> apply from : " idea / idea . gradle " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> - mavenLocal ( ) <nl> maven { url ' https : / / oss . sonatype . org / content / repositories / snapshots ' } <nl> + mavenLocal ( ) <nl> } <nl> dependencies { <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 2 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 3 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> group = " com . netflix . $ { githubProjectName } " <nl> + sourceCompatibility = 1 . 8 <nl> + targetCompatibility = 1 . 8 <nl> + <nl> repositories { <nl> jcenter ( ) <nl> } <nl> 
mmm a / squidb - addons / squidb - recyclerview / build . gradle <nl> ppp b / squidb - addons / squidb - recyclerview / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> android { <nl> - compileSdkVersion 22 <nl> + compileSdkVersion 19 <nl> buildToolsVersion " 22 . 0 . 1 " <nl> sourceSets { <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 185 <nl> - versionName " 9 - beta4 " <nl> + versionCode 186 <nl> + versionName " 9 - beta5 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : owncloud - android - library ' <nl> include ' : ' <nl> - include ' oc_jb_workaround ' <nl> + include ' : oc_jb_workaround ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> ext { <nl> javaVersion = JavaVersion . VERSION_1_7 <nl> GROUP = ' com . squareup . leakcanary ' <nl> - VERSION_NAME = " 1 . 3 . 1 " <nl> + VERSION_NAME = " 1 . 3 . 2 - SNAPSHOT " <nl> POM_PACKAGING = " pom " <nl> POM_DESCRIPTION = " Leak Canary " <nl> 
mmm a / calligraphy / build . gradle <nl> ppp b / calligraphy / build . gradle <nl> android { <nl> buildTypes { <nl> release { <nl> minifyEnabled false <nl> - proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . txt ' <nl> + proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' consumer - proguard - rules . txt ' <nl> } <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 22 <nl> - versionCode 11 <nl> + versionCode 12 <nl> versionName " 1 . 2 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' base ' <nl> allprojects { <nl> - version = ' 3 . 1 . 0 . RC1 ' <nl> + version = ' 3 . 1 . 0 . CI - SNAPSHOT ' <nl> releaseBuild = version . endsWith ( ' RELEASE ' ) <nl> snapshotBuild = version . endsWith ( ' SNAPSHOT ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task clean ( type : Delete ) { <nl> ext { <nl> androidCompileSdkVersion = 25 <nl> - androidBuildToolsVersion = ' 25 . 0 . 0 ' <nl> + androidBuildToolsVersion = ' 25 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> androidVersionCode = 15224 <nl> 
mmm a / client / build . gradle <nl> ppp b / client / build . gradle <nl> configurations { <nl> jar { <nl> baseName ' crate - client ' <nl> + from configurations . compile . collect { it . isDirectory ( ) ? it : zipTree ( it ) } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 166 <nl> - versionName " 3 . 1 . 0 . 9 " <nl> + versionCode 167 <nl> + versionName " 3 . 1 . 0 . 10 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 2 . 0 ' <nl> + gradleVersion = ' 2 . 2 . 1 ' <nl> } <nl> / / <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15130 <nl> - versionName = ' 25 - beta1 ' <nl> + versionCode = 15131 <nl> + versionName = ' 25 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 1 . 0 . 1 " <nl> + version = " 2 . 0 . 0 " <nl> group = " com . edmodo " <nl> android { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . andexert . sample " <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> - versionCode 1 <nl> - versionName " 1 . 0 " <nl> + versionCode 6 <nl> + versionName " 1 . 2 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / client / build . gradle <nl> ppp b / client / build . gradle <nl> task signJars ( type : Sign , dependsOn : [ buildJar , buildJavadocJar , buildSourceJa <nl> } <nl> - install . dependsOn ( [ buildJar , buildJavadocJar , buildSourceJar , signJars ] ) <nl> + install . dependsOn ( [ buildJar , buildJavadocJar , buildSourceJar ] ) <nl> install { <nl> repositories { <nl> mavenInstaller { <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> dexOptions { <nl> jumboMode = true <nl> - javaMaxHeapSize = " 4g " <nl> + javaMaxHeapSize = " 6g " <nl> + dexInProcess = true <nl> } <nl> compileSdkVersion 24 <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> integTest { <nl> excludeCategories ' org . gradle . performance . PerformanceTest ' <nl> } <nl> } <nl> + <nl> + java9IntegTest { <nl> + options { <nl> + excludeCategories ' org . gradle . performance . PerformanceTest ' <nl> + } <nl> + } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> coverageReportDir = file ( " $ buildDir / reports / cobertura " ) <nl> } <nl> } <nl> + <nl> + wrapper { <nl> + gradleVersion = ' 1 . 7 ' <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - rc2 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - rc3 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15115 <nl> - versionName = ' 23 . 0 . 0 ' <nl> + versionCode = 15116 <nl> + versionName = ' 23 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / ci / java . gradle <nl> ppp b / ci / java . gradle <nl> apply plugin : ' java ' <nl> apply plugin : ' application ' <nl> + apply plugin : ' jacoco ' <nl> sourceCompatibility = 1 . 7 <nl> targetCompatibility = 1 . 7 <nl> + <nl> + compileJava <nl> + { <nl> + options . debug = true <nl> + } <nl> + <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> jcenter ( ) <nl> mavenCentral ( ) ; <nl> maven { <nl> + url ' https : / / oss . sonatype . org / content / repositories / releases ' <nl> + } <nl> + maven { <nl> url ' https : / / oss . sonatype . org / content / repositories / snapshots ' <nl> } <nl> } <nl> 
mmm a / actor - apps / core - js / build . gradle <nl> ppp b / actor - apps / core - js / build . gradle <nl> gwt { <nl> compiler { <nl> strict = true ; <nl> / / style = " OBF " <nl> - style = " PRETTY " <nl> - enableClosureCompiler = false ; <nl> + style = " OBF " <nl> + enableClosureCompiler = true ; <nl> disableClassMetadata = true ; <nl> disableCastChecking = true ; <nl> } <nl> 
mmm a / source - gallery / build . gradle <nl> ppp b / source - gallery / build . gradle <nl> android { <nl> minSdkVersion 19 <nl> targetSdkVersion rootProject . ext . targetSdkVersion <nl> - def galleryAuthorityValue = applicationId + " . gallery " <nl> + def galleryAuthorityValue = " com . google . android . apps . muzei . gallery " <nl> manifestPlaceholders = [ galleryAuthority : galleryAuthorityValue ] <nl> buildConfigField " String " , " GALLERY_AUTHORITY " , " \ " $ { galleryAuthorityValue } \ " " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> options . encoding " UTF - 8 " <nl> options . docEncoding " UTF - 8 " <nl> options . charSet " UTF - 8 " <nl> + options . jFlags " - Xms64M " , " - Xmx512M " , " - XX : MaxPermSize = 256m " <nl> } <nl> idea { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> allprojects { <nl> group ' com . makeramen ' <nl> - version ' 1 . 2 . 0 ' <nl> + version ' 1 . 2 . 1 ' <nl> repositories { <nl> mavenCentral ( ) <nl> } <nl> 
mmm a / subprojects / core / core . gradle <nl> ppp b / subprojects / core / core . gradle <nl> dependencies { <nl> testFixturesCompile project ( " : internalTesting " ) <nl> testFixturesRuntime project ( ' : coreImpl ' ) <nl> + testCompile project ( ' : coreImpl ' ) <nl> + <nl> integTestCompile project ( " : internalIntegTesting " ) <nl> reports ' css3 - pie : css3 - pie : 1 . 0beta3 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> * / <nl> plugins { <nl> id ' java ' <nl> - id ' com . github . johnrengelman . shadow ' version ' 1 . 2 . 1 ' <nl> + id ' com . github . johnrengelman . shadow ' version ' 1 . 2 . 2 ' <nl> } <nl> apply plugin : ' java ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 25 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 64 <nl> + versionCode 65 <nl> versionName " 3 . 1 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 62 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / gradle / idea . gradle <nl> ppp b / gradle / idea . gradle <nl> subprojects { <nl> idea { <nl> module { <nl> / / add slf4j - simple to TEST scope <nl> - scopes . TEST . plus . add ( rootProject . configurations . slf4j_simple ) <nl> + scopes . TEST ? . plus ? . add ( rootProject . configurations . slf4j_simple ) <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15154 <nl> - versionName = ' 27 ' <nl> + versionCode = 15160 <nl> + versionName = ' 28 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> ext . distSpec = copySpec { <nl> fileMode = 0755 <nl> exclude " groovy . icns " <nl> } <nl> - / / from ( " src / bin / groovy . icns " ) <nl> from ( " src / tools / org / codehaus / groovy / tools / groovy . ico " ) <nl> } <nl> into ( " embeddable " ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha1 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha5 ' <nl> } <nl> } <nl> 
mmm a / buildsystem / dependencies . gradle <nl> ppp b / buildsystem / dependencies . gradle <nl> ext { <nl> androidAnnotationsVersion = ' 20 . 0 . 0 ' <nl> / / Testing <nl> - robolectricVersion = ' 3 . 0 - rc3 ' <nl> + robolectricVersion = ' 3 . 0 ' <nl> jUnitVersion = ' 4 . 12 ' <nl> assertJVersion = ' 1 . 7 . 1 ' <nl> mockitoVersion = ' 1 . 9 . 5 ' <nl> 
mmm a / gradle / caches . gradle <nl> ppp b / gradle / caches . gradle <nl> sourceSets { <nl> weakKeysAndStrongValuesTest , weakKeysAndWeakValuesTest , weakKeysAndSoftValuesTest <nl> ] * . each { <nl> def taskName = it . name <nl> - if ( System . env . ' CI ' | | ( taskName ! = ' slowTest ' ) ) { <nl> + if ( taskName ! = ' slowTest ' ) { <nl> tasks . test . finalizedBy ( it ) <nl> } <nl> dependencies { <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 187 <nl> - versionName " 9 " <nl> + versionCode 188 <nl> + versionName " 9 . 1 - beta1 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / samples / scrollperf / build . gradle <nl> ppp b / samples / scrollperf / build . gradle <nl> android { <nl> buildToolsVersion " 23 . 0 . 2 " <nl> defaultConfig { <nl> - applicationId " uk . co . maxcarli . scrollperf " <nl> + applicationId " com . facebook . samples . scrollperf " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> versionCode 1 <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> ext { <nl> ] <nl> if ( ! isHeroku | | ! isCi ) { <nl> - / / manualVersions = [ manualVersions . last ( ) ] <nl> + manualVersions = [ manualVersions . last ( ) ] <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> } <nl> + subprojects * . jar { <nl> + manifest { <nl> + from sharedManifest <nl> + } <nl> + } <nl> + <nl> def getGitCommit ( ) { <nl> def dotGit = new File ( " $ projectDir / . git " ) <nl> if ( ! dotGit . isDirectory ( ) ) return ' non - git build ' <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> buildToolsVersion rootProject . ext . buildToolsVersion <nl> defaultConfig { <nl> - minSdkVersion 9 <nl> + minSdkVersion 11 <nl> targetSdkVersion 19 <nl> testInstrumentationRunner " com . google . android . apps . common . testing . testrunner . GoogleInstrumentationTestRunner " <nl> } <nl> 
mmm a / buildSrc / build . gradle <nl> ppp b / buildSrc / build . gradle <nl> test { <nl> options . fork ( forkMode : org . gradle . api . tasks . testing . ForkMode . ONCE ) <nl> } <nl> - uploadLibs . doLast { <nl> + uploadInternalLibs . doLast { <nl> InstallOptions installOptions = new InstallOptions ( ) <nl> installOptions . overwrite = true <nl> installOptions . validate = false <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( javaModules ( ) ) { <nl> ' - Djacoco = true ' , <nl> ' - Xms128m ' , <nl> ' - Xmx512m ' , <nl> - ' - XX : MaxPermSize = 128m ' , <nl> ' - Duser . timezone = GMT ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 45 <nl> + versionCode 48 <nl> versionName " 2 . 5 " <nl> vectorDrawables . useSupportLibrary = true <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " com . etiennelawlor . quickreturn " <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> - versionCode 16 <nl> - versionName " 0 . 0 . 16 " <nl> + versionCode 17 <nl> + versionName " 0 . 0 . 17 " <nl> } <nl> signingConfigs { <nl> release { <nl> 
mmm a / hystrix - contrib / hystrix - request - servlet / build . gradle <nl> ppp b / hystrix - contrib / hystrix - request - servlet / build . gradle <nl> apply plugin : ' java ' <nl> dependencies { <nl> compile project ( ' : hystrix - core ' ) <nl> - compile ' javax . servlet : servlet - api : 2 . 5 ' <nl> + provided ' javax . servlet : servlet - api : 2 . 5 ' <nl> } <nl> 
mmm a / butterknife / build . gradle <nl> ppp b / butterknife / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion rootProject . ext . minSdkVersion <nl> - } <nl> - buildTypes { <nl> - release { <nl> - consumerProguardFiles ' proguard - rules . txt ' <nl> - } <nl> + consumerProguardFiles ' proguard - rules . txt ' <nl> } <nl> } <nl> 
mmm a / all / build . gradle <nl> ppp b / all / build . gradle <nl> jar { <nl> } <nl> } <nl> + sourcesJar { <nl> + from { <nl> + subprojects . sourceSets . main . allSource <nl> + } <nl> + } <nl> + <nl> javadoc { <nl> classpath = files ( subprojects . collect { subproject - > <nl> subproject . javadoc . classpath <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " com . etiennelawlor . quickreturn " <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> - versionCode 15 <nl> - versionName " 0 . 0 . 15 " <nl> + versionCode 16 <nl> + versionName " 0 . 0 . 16 " <nl> } <nl> signingConfigs { <nl> release { <nl> 
new file mode 100644 <nl> index 0000000 . . 192d870 <nl> mmm / dev / null <nl> ppp b / build . gradle <nl> + ant . importBuild ( ' build . xml ' ) <nl> 
mmm a / aeron - benchmarks / build . gradle <nl> ppp b / aeron - benchmarks / build . gradle <nl> * limitations under the License . <nl> * / <nl> + checkstyle { <nl> + / / lambdas break checkstyle currently . Grrrr ! <nl> + ignoreFailures = true <nl> + } <nl> + <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> sourceSets { <nl> test . include " * * / * Test . class " <nl> - tasks . withType ( Compile ) { <nl> + tasks . withType ( JavaCompile ) { <nl> options . warnings = false <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> ext { <nl> - minSdkVersion = 15 <nl> + minSdkVersion = 14 <nl> compileSdkVersion = 22 <nl> buildToolsVersion = ' 22 . 0 . 1 ' <nl> } <nl> \ No newline at end of file <nl> 
mmm a / rxjava - contrib / rxjava - quasar / build . gradle <nl> ppp b / rxjava - contrib / rxjava - quasar / build . gradle <nl> tasks . withType ( JavaExec ) { <nl> test { <nl> / / excluding out all tests until they stop hanging CloudBees <nl> - excludes = ' * * / * ' <nl> + excludes = [ ' * * / * * ' ] <nl> } <nl> 
mmm a / android / signin / settings . gradle <nl> ppp b / android / signin / settings . gradle <nl> - include ' : app ' , ' : app - legacy ' <nl> + include ' : app ' <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / subprojects / groovy - servlet / build . gradle <nl> ppp b / subprojects / groovy - servlet / build . gradle <nl> dependencies { <nl> / / needed by TemplateServlet <nl> compile project ( ' : subprojects : groovy - templates ' ) <nl> testCompile project ( ' : subprojects : groovy - test ' ) <nl> + / / for compilation , dependency is not necessary because the classes are loaded using Class . forName <nl> + testCompile project ( ' : subprojects : groovy - json ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 4 . 0 - beta3 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 - beta1 ' <nl> } <nl> } <nl> 
mmm a / modules / frontend / frontend - js - metal - web / build . gradle <nl> ppp b / modules / frontend / frontend - js - metal - web / build . gradle <nl> downloadGulp { <nl> } <nl> npmInstall { <nl> - args = [ " install " ] <nl> + args " install " <nl> dependsOn downloadBower <nl> dependsOn downloadGulp <nl> 
mmm a / gradle / analytics . gradle <nl> ppp b / gradle / analytics . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath group : ' com . gradleware ' , name : ' analytics - plugin ' , version : ' + ' <nl> + classpath group : ' com . gradleware ' , name : ' analytics - plugin ' , version : ' 0 . 1 - 20140714021653 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> + ext { <nl> + compileSdkVersion = 19 <nl> + buildToolsVersion = " 19 . 0 . 3 " <nl> + } <nl> + <nl> def isReleaseBuild ( ) { <nl> return version . contains ( " SNAPSHOT " ) = = false <nl> } <nl> 
mmm a / bin / templates / project / build . gradle <nl> ppp b / bin / templates / project / build . gradle <nl> def addSigningProps ( propsFilePath , signingConfig ) { <nl> } <nl> } <nl> + if ( file ( ' build - extras . gradle ' ) . exists ( ) ) { <nl> + apply from : ' build - extras . gradle ' <nl> + } <nl> 
mmm a / grails - web - jsp / build . gradle <nl> ppp b / grails - web - jsp / build . gradle <nl> jar { <nl> eclipse { <nl> classpath { <nl> - plusConfigurations + = configurations . jsp21 <nl> + plusConfigurations + = [ configurations . jsp21 ] <nl> file { <nl> whenMerged { classpath - > <nl> / / move jsp - api - 2 . 1 to the last one in entries so that it appears after - 2 . 0 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / hibernate - orm - modules / hibernate - orm - modules . gradle <nl> ppp b / hibernate - orm - modules / hibernate - orm - modules . gradle <nl> dependencies { <nl> javassist libraries . javassist <nl> testCompile project ( " : hibernate - core " ) <nl> + testCompile project ( " : hibernate - envers " ) <nl> testCompile libraries . junit <nl> testCompile libraries . arquillian_junit_container <nl> testCompile libraries . arquillian_protocol_servlet <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> nettyVersion = ' 4 . 0 . 35 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 19 ' <nl> + slf4jVersion = ' 1 . 7 . 20 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 7 . 3 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 228 <nl> - versionName ' 3 . 3 . 10 ' <nl> + versionCode 229 <nl> + versionName ' 3 . 3 . 11 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / android / sdk / build . gradle <nl> ppp b / android / sdk / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . hierynomus . license ' <nl> - version = " 1 . 5 . 1 . 4 " <nl> + version = " 1 . 5 . 1 . 5 " <nl> android { <nl> compileSdkVersion 23 <nl> 
mmm a / maven_push . gradle <nl> ppp b / maven_push . gradle <nl> afterEvaluate { project - > <nl> uploadArchives { <nl> repositories { <nl> mavenDeployer { <nl> - beforeDeployment { MavenDeployment deployment - > signPom ( deployment ) } <nl> + beforeDeployment { MavenDeployment deployment - > signing . signPom ( deployment ) } <nl> pom . artifactId = POM_ARTIFACT_ID <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects ) { <nl> apply plugin : ' findbugs ' <nl> group = ' org . mongodb . morphia ' <nl> - version = ' 0 . 107 - SNAPSHOT ' <nl> + version = ' null ' <nl> sourceCompatibility = ' 1 . 5 ' <nl> targetCompatibility = ' 1 . 5 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( ! project . hasProperty ( ' sonatypeRepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 0 . 3 . 2 " <nl> + version = " 0 . 3 . 3 " <nl> group = " com . facebook . rebound " <nl> signing { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 242 <nl> - versionName ' 3 . 3 . 24 ' <nl> + versionCode 243 <nl> + versionName ' 3 . 3 . 25 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> uploadArchives { <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 2 . 3 ' <nl> + gradleVersion = ' 2 . 4 ' <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> targetSdkVersion 21 <nl> versionCode 94 <nl> versionName ' 0 . 9 . 4 ' <nl> - } t <nl> + } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> } <nl> } <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> integTestTasks . all { <nl> enabled = false <nl> dependsOn = [ ] <nl> } <nl> + maxParallelForks = 1 <nl> } <nl> tasks . integTest . testLogging . showStandardStreams = true <nl> 
mmm a / rxjava - core / build . gradle <nl> ppp b / rxjava - core / build . gradle <nl> jar { <nl> instruction ' Bundle - DocURL ' , ' https : / / github . com / Netflix / RxJava ' <nl> instruction ' Import - Package ' , ' ! org . junit , ! junit . framework , ! org . mockito . * , * ' <nl> } <nl> + exclude ( ' * * / * $ UnitTest * ' ) <nl> } <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> ext { <nl> ] <nl> if ( ! isHeroku | | ! isCi ) { <nl> + println " Only including latest manual in site due to this being a development build . " <nl> manualVersions = [ manualVersions . last ( ) ] <nl> } <nl> } <nl> 
mmm a / test / fixtures / example - fixture / build . gradle <nl> ppp b / test / fixtures / example - fixture / build . gradle <nl> * / <nl> apply plugin : ' elasticsearch . build ' <nl> + test . enabled = false <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 201 <nl> - versionName " 11 - beta1 " <nl> + versionCode 202 <nl> + versionName " 11 - beta2 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / modules / build - module . gradle <nl> ppp b / modules / build - module . gradle <nl> buildService { <nl> } <nl> } <nl> + buildSoy { <nl> + ext { <nl> + autoClean = false <nl> + } <nl> + } <nl> + <nl> configure ( [ test , testIntegration ] ) { <nl> testLogging { <nl> events = EnumSet . allOf ( TestLogEvent ) <nl> 
mmm a / quasar - kotlin / build . gradle <nl> ppp b / quasar - kotlin / build . gradle <nl> buildscript { <nl> repositories { <nl> mavenCentral ( ) <nl> + maven { <nl> + url " https : / / oss . sonatype . org / content / repositories / snapshots " <nl> + } <nl> } <nl> dependencies { <nl> classpath ' org . jetbrains . kotlin : kotlin - gradle - plugin : 0 . 1 - SNAPSHOT ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task clean ( type : Delete ) { <nl> ext { <nl> androidCompileSdkVersion = 24 <nl> - androidBuildToolsVersion = ' 24 . 0 . 1 ' <nl> + androidBuildToolsVersion = ' 24 . 0 . 3 ' <nl> / / API level 15 + - > version 15xxx <nl> androidVersionCode = 15211 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> uploadArchives { <nl> developer { <nl> id = ' RichardWarburton ' <nl> name = ' Richard Warburton ' <nl> - email = ' ' <nl> + email = ' richard . warburton @ gmail . com ' <nl> url = ' https : / / github . com / RichardWarburton ' <nl> } <nl> } <nl> 
mmm a / gradle / integTest . gradle <nl> ppp b / gradle / integTest . gradle <nl> class IntegTestConvention { <nl> if ( ! project . tasks . findByName ( ' ciBuild ' ) | | ! project . gradle . taskGraph . populated ) { <nl> return null <nl> } <nl> - if ( project . isCIBuild ( ) ) { <nl> + if ( project . isCIBuild ( ) | | project . isNightlyBuild ( ) ) { <nl> return ' forking ' <nl> } <nl> return ' embedded ' <nl> 
mmm a / modules / sdk / ant - bnd / build . gradle <nl> ppp b / modules / sdk / ant - bnd / build . gradle <nl> - sourceCompatibility = " 1 . 6 " <nl> - targetCompatibility = " 1 . 6 " <nl> - <nl> clean { <nl> ext { <nl> cleanDeployed = false <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> - if ( isSnapshotVersion ) { <nl> - mavenRepo ( url : " http : / / snapshots . repository . codehaus . org " ) <nl> - } <nl> + mavenRepo ( url : " http : / / snapshots . repository . codehaus . org " ) <nl> } <nl> configurations { <nl> 
mmm a / gradle / groovyProject . gradle <nl> ppp b / gradle / groovyProject . gradle <nl> sourceSets { <nl> main . output . dir generatedResourcesDir , builtBy : classpathManifest <nl> } <nl> - compileTasks . all { options . useAnt = false } <nl> testTasks . all { task - > <nl> maxParallelForks = rootProject . maxParallelForks <nl> if ( isCiServer ) { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . jaeger . statusbardemo " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 4 <nl> - versionName " 1 . 2 . 3 " <nl> + versionCode 5 <nl> + versionName " 1 . 2 . 4 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 25 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 68 <nl> + versionCode 69 <nl> versionName " 3 . 1 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 62 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / tileview / build . gradle <nl> ppp b / tileview / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 11 <nl> targetSdkVersion 22 <nl> - versionCode 22 <nl> + versionCode 23 <nl> versionName " 2 . 0 . 3 " <nl> } <nl> buildTypes { <nl> 
mmm a / spock - example / build . gradle <nl> ppp b / spock - example / build . gradle <nl> repositories { <nl> / / Spock release versions are available from Maven Central <nl> mavenCentral ( ) <nl> / / only required if a snapshot version of Spock is used <nl> - mavenRepo urls : " http : / / m2repo . spockframework . org / snapshots " <nl> + mavenRepo url : " http : / / m2repo . spockframework . org / snapshots " <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> - shortVersion = ' 4 . 0 . 0 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 0 . 1 ' <nl> + isSnapshot = true <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( projectDir , ' documentation ' ) <nl> 
mmm a / src / samples / osgi / build . gradle <nl> ppp b / src / samples / osgi / build . gradle <nl> usePlugin ' groovy ' <nl> usePlugin ' osgi ' <nl> repositories { <nl> + mavenCentral ( ) <nl> mavenRepo ( urls : ' http : / / repository . jboss . org / maven2 / ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> plugins { <nl> - id ' com . gradle . build - scan ' version ' 1 . 0 ' <nl> + id ' com . gradle . build - scan ' version ' 1 . 1 . 1 ' <nl> id " base " <nl> id " org . asciidoctor . gradle . asciidoctor " version " 1 . 5 . 1 " <nl> } <nl> 
new file mode 100644 <nl> index 000000000 . . 5d25898ec <nl> mmm / dev / null <nl> ppp b / settings . gradle <nl> + include " ratpack - core " , <nl> + " ratpack - gradle - plugin " <nl> \ No newline at end of file <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / android_default . gradle <nl> ppp b / android_default . gradle <nl> android { <nl> lintOptions { <nl> abortOnError = false <nl> } <nl> + <nl> + aaptOptions { <nl> + useAaptPngCruncher = true <nl> + } <nl> } <nl> holoeverywhere { <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15122 <nl> - versionName = ' 24 - beta3 ' <nl> + versionCode = 15123 <nl> + versionName = ' 24 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / grails - core / build . gradle <nl> ppp b / grails - core / build . gradle <nl> dependencies { <nl> sourceSets { <nl> main { <nl> - compileClasspath = files ( configurations . agent ) <nl> + compileClasspath = configurations . agent <nl> } <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> apply plugin : ' com . android . library ' <nl> / / Version Information <nl> def versionMajor = 1 <nl> - def versionMinor = 4 <nl> + def versionMinor = 5 <nl> def versionPatch = 0 <nl> - def versionBuild = 9 <nl> + def versionBuild = 10 <nl> android { <nl> compileSdkVersion 22 <nl> 
mmm a / realm / realm - jni / build . gradle <nl> ppp b / realm / realm - jni / build . gradle <nl> - import org . omg . CORBA . DynAnyPackage . Invalid <nl> - <nl> import java . security . MessageDigest <nl> ext . coreVersion = ' 0 . 96 . 0 ' <nl> 
mmm a / dexter / build . gradle <nl> ppp b / dexter / build . gradle <nl> android { <nl> minSdkVersion 10 <nl> targetSdkVersion 23 <nl> versionCode 1 <nl> - versionName " 1 . 0 . 0 " <nl> + versionName " 1 . 0 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : quasar - core ' ) { <nl> archives javadocJar <nl> } <nl> - uploadArchives . dependsOn ' : quasar - core - jdk8 : jar ' <nl> + install . dependsOn ' : quasar - core - jdk8 : shadowJar ' <nl> + uploadArchives . dependsOn ' : quasar - core - jdk8 : shadowJar ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 19 <nl> + versionCode 20 <nl> versionName " 1 . 6 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / h2o - hadoop / driverjar . gradle <nl> ppp b / h2o - hadoop / driverjar . gradle <nl> compileJava { <nl> sourceSets { <nl> main { <nl> java { <nl> - srcDir ' . . / h2o - yarn / generic / src / main / java ' <nl> + srcDir ' . . / h2o - yarn - generic / src / main / java ' <nl> } <nl> } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 124 <nl> + versionCode 125 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 15 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 12 . Final ' <nl> + nettyVersion = ' 4 . 0 . 13 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 3 . 0 ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 34 <nl> + versionCode 35 <nl> versionName " 2 . 0 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / subprojects / docs / src / samples / userguide / wrapper / simple / build . gradle <nl> ppp b / subprojects / docs / src / samples / userguide / wrapper / simple / build . gradle <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 1 . 4 ' <nl> + gradleVersion = ' 2 . 0 ' <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 14 . 0 . 1 ' <nl> - nettyVersion = ' 3 . 6 . 3 . Final ' <nl> + nettyVersion = ' 3 . 6 . 4 . Final ' <nl> slf4jVersion = ' 1 . 7 . 3 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> logbackVersion = ' 1 . 0 . 10 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15083 <nl> - versionName = ' 21 . 1 . 0 - beta4 ' <nl> + versionCode = 15084 <nl> + versionName = ' 21 . 1 . 0 - beta5 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / gradle / javaprojects . gradle <nl> ppp b / gradle / javaprojects . gradle <nl> project . eclipseClasspath . doFirst { <nl> } <nl> } <nl> + project . idea . module { <nl> + scopes . TEST . plus + = [ project . configurations . integrationTestRuntime ] <nl> + } <nl> + <nl> task javadocJar ( type : Jar ) { <nl> classifier = ' javadoc ' <nl> from javadoc <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> buildToolsVersion ' 19 . 0 . 3 ' <nl> defaultConfig { <nl> - minSdkVersion 18 <nl> targetSdkVersion 19 <nl> versionCode = 1 <nl> 
mmm a / rxandroid / build . gradle <nl> ppp b / rxandroid / build . gradle <nl> repositories { <nl> } <nl> dependencies { <nl> - compile ' io . reactivex : rxjava : 1 . 0 . 13 ' <nl> + compile ' io . reactivex : rxjava : 1 . 0 . 14 ' <nl> testCompile ' junit : junit : 4 . 12 ' <nl> testCompile ' org . mockito : mockito - core : 1 . 10 . 19 ' <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> task performanceTest ( type : Test ) { <nl> if ( project . hasProperty ( ' org . gradle . performance . use_yourkit ' ) ) { <nl> testLogging . showStandardStreams = true <nl> systemProperties [ ' org . gradle . performance . use_yourkit ' ] = ' 1 ' <nl> + outputs . upToDateWhen { false } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 6 ' <nl> + version = ' 2 . 0 . 7 ' <nl> def jarVersion = version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 1 . 4 . 2 ' <nl> + version = file ( ' version ' ) . readLines ( ) . get ( 0 ) <nl> def jarVersion = version <nl> new file mode 100644 <nl> index 00000000 . . 9df886c4 <nl> mmm / dev / null <nl> ppp b / version <nl> + 1 . 4 . 2 <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> } <nl> + / / Extract signing info into a properties file <nl> def props = new Properties ( ) <nl> - <nl> props . load ( new FileInputStream ( project . file ( " signing . properties " ) ) ) <nl> android . signingConfigs . release . storeFile project . file ( props . keyStore ) <nl> 
mmm a / subprojects / language - jvm / language - jvm . gradle <nl> ppp b / subprojects / language - jvm / language - jvm . gradle <nl> dependencies { <nl> - compile libraries . groovy <nl> compile project ( " : platformJvm " ) <nl> compile project ( " : platformBase " ) <nl> + testCompile libraries . groovy <nl> + <nl> testRuntime project ( " : languageJava " ) <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> dependencyCache = { <nl> } <nl> includes = dependencyIncludes as List <nl> + exclude " org . grails / * * " <nl> } <nl> into " $ projectDir / lib " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 237 <nl> + versionCode = 239 <nl> versionName = ' 12 . 2 ' <nl> } <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> compass { <nl> imagesDir = file ( ' src / ratpack / assets / images ' ) <nl> importPath = files ( ' . . / ratpack - stylesheets ' ) <nl> fontsDir = file ( ' . . / ratpack - stylesheets / fonts ' ) <nl> + relativeAssets = true <nl> quiet = true <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> nettyVersion = ' 4 . 0 . 33 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 13 ' <nl> + slf4jVersion = ' 1 . 7 . 14 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 7 . 0 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> version = " 0 . 6 - groovy - 1 . 7 - SNAPSHOT " <nl> apply from : profile ( " common " ) <nl> - <nl> + <nl> + idea { <nl> + project { <nl> + javaVersion = 1 . 6 <nl> + } <nl> + } <nl> + <nl> repositories { <nl> mavenCentral ( ) <nl> if ( isSnapshotVersion ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> - shortVersion = ' 4 . 0 . 1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 0 . 2 ' <nl> + isSnapshot = true <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( projectDir , ' documentation ' ) <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' android - library ' <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 1 . 0 . 0 " <nl> + version = " 1 . 0 . 1 " <nl> group = " com . edmodo " <nl> android { <nl> 
mmm a / subprojects / diagnostics / diagnostics . gradle <nl> ppp b / subprojects / diagnostics / diagnostics . gradle <nl> dependencies { <nl> compile project ( ' : platformNative ' ) <nl> compile project ( ' : languageNative ' ) <nl> compile project ( ' : dependencyManagement ' ) <nl> - <nl> - integTestRuntime project ( ' : cunit ' ) <nl> } <nl> useTestFixtures ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> if ( ! isTestSuite ) { <nl> + println " SIGNING CREDENTIALS KEY PRESENT ? $ { project . ' signing . keyId ' ! = null } " <nl> + println " SIGNING CREDENTIALS PASS PRESENT ? $ { project . ' signing . password ' ! = null } " <nl> modifyPom { <nl> delegate . project { <nl> def updatePom = pomInfo . clone ( ) <nl> 
mmm a / examples / build . gradle <nl> ppp b / examples / build . gradle <nl> android { <nl> targetSdkVersion 23 <nl> } <nl> + compileOptions { <nl> + sourceCompatibility JavaVersion . VERSION_1_7 <nl> + targetCompatibility JavaVersion . VERSION_1_7 <nl> + } <nl> + <nl> buildTypes { <nl> release { <nl> minifyEnabled false <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> findbugs { <nl> ignoreFailures = false <nl> + sourceSets = [ sourceSets . main ] <nl> } <nl> tasks . withType ( FindBugs ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 2 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 1 . 2 ' <nl> + version = ' 2 . 1 . 3 ' <nl> if ( ! ( ' release ' in gradle . startParameter . taskNames ) ) { <nl> def versionSuffix <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> jvmArgs " - Xss320k " <nl> - minHeapSize " 368m " <nl> - maxHeapSize " 368m " <nl> + minHeapSize " 312m " <nl> + maxHeapSize " 312m " <nl> + <nl> + doFirst { <nl> + if ( isCloudCi ) { <nl> + maxParallelForks 1 <nl> + } <nl> + } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha4 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha5 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> rxJavaVersion = " 1 . 1 . 0 " <nl> rxJavaRulesVersion = " 1 . 1 . 0 . 0 " <nl> - audioPlayerVersion = " v1 . 0 . 15 " <nl> + audioPlayerVersion = " v1 . 0 . 16 " <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> sourceCompatibility = 1 . 5 <nl> + targetCompatibility = 1 . 5 <nl> configurations { <nl> provided <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 194 <nl> - versionName " 10 - beta2 " <nl> + versionCode 195 <nl> + versionName " 10 - beta3 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 26 . Final ' <nl> + nettyVersion = ' 4 . 0 . 27 . Final ' <nl> slf4jVersion = ' 1 . 7 . 12 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 5 . 2 ' <nl> 
mmm a / grails - scripts / build . gradle <nl> ppp b / grails - scripts / build . gradle <nl> repositories { <nl> configurations { <nl> agent . extendsFrom compile <nl> } <nl> + configurations { <nl> + agent . extendsFrom compile <nl> + } <nl> dependencies { <nl> agent ' com . springsource . springloaded : springloaded - core : 0 . 7 . 2 ' <nl> / / Testing <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> repositories { <nl> dependencies { <nl> / / compile ' com . makeramen : roundedimageview : 1 . 2 . 0 ' <nl> compile project ( ' : roundedimageview ' ) <nl> - compile ' com . squareup . picasso : picasso : 2 . 1 . + ' <nl> + compile ' com . squareup . picasso : picasso : 2 . 2 . + ' <nl> } <nl> android { <nl> 
mmm a / gradle / integTest . gradle <nl> ppp b / gradle / integTest . gradle <nl> integTestTasks . all { <nl> systemProperties [ ' integTest . gradleUserHomeDir ' ] = integTestUserDir . absolutePath <nl> systemProperties [ ' integTest . samplesdir ' ] = project ( " : docs " ) . samplesDir . absolutePath <nl> if ( isCIBuild ( ) ) { <nl> - systemProperties [ ' org . gradle . integtest . versions ' ] = ' all ' <nl> maxParallelForks = 4 <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> junitVersion = ' 4 . 12 ' <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 10 . 19 ' <nl> - httpComponentVersion = ' 4 . 3 . 6 ' <nl> + httpComponentVersion = ' 4 . 5 ' <nl> jsonpathVersion = ' 2 . 0 . 0 ' <nl> freemarkerVersion = ' 2 . 3 . 22 ' <nl> } <nl> 
mmm a / libs / utils / WordPressUtils / build . gradle <nl> ppp b / libs / utils / WordPressUtils / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android . util " <nl> - versionName " 1 . 0 . 2 " <nl> + versionName " 1 . 1 . 0 " <nl> versionCode 1 <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 142 <nl> + versionCode 143 <nl> versionName " 3 . 0 . 5 ( snapshot ) " <nl> multiDexEnabled true <nl> 
mmm a / libs / networking / libs / utils / WordPressUtils / build . gradle <nl> ppp b / libs / networking / libs / utils / WordPressUtils / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android . util " <nl> - versionName " 1 . 0 . 2 " <nl> + versionName " 1 . 1 . 0 " <nl> versionCode 1 <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - beta2 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - rc1 ' <nl> } <nl> } <nl> 
mmm a / gradle / docs . gradle <nl> ppp b / gradle / docs . gradle <nl> task docProjectVersionInfo ( type : Copy ) { <nl> filter ( rootProject . propertiesFilter , org . apache . tools . ant . filters . ReplaceTokens ) <nl> } <nl> } <nl> + from ( ' subprojects / groovy - docgenerator / src / main / resources ' ) <nl> } <nl> task docGDK { <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> android { <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> + <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 5 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 6 . + ' <nl> } <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' testng ' <nl> + / / include ' testng ' <nl> rootProject . name = ' mockito ' <nl> rootProject . children . each { project - > <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 123 <nl> + versionCode 124 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 202 <nl> - versionName " 3 . 1 . 13 " <nl> + versionCode 203 <nl> + versionName " 3 . 1 . 14 " <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / gradle / codenarc . gradle <nl> ppp b / gradle / codenarc . gradle <nl> project . apply plugin : " codenarc " <nl> - dependencies { <nl> - codenarc ' org . codenarc : CodeNarc : 0 . 20 ' <nl> - } <nl> - <nl> codenarc { <nl> + toolVersion = ' 0 . 20 ' <nl> configFile rootProject . file ( ' gradle / codenarc / codenarc . groovy ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15041 <nl> - versionName = ' 18 - beta2 ' <nl> + versionCode = 15042 <nl> + versionName = ' 18 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / subprojects / groovy - servlet / build . gradle <nl> ppp b / subprojects / groovy - servlet / build . gradle <nl> dependencies { <nl> / / needed by TemplateServlet <nl> compile project ( ' : subprojects : groovy - templates ' ) <nl> testCompile project ( ' : subprojects : groovy - test ' ) <nl> + / / for compilation , dependency is not necessary because the classes are loaded using Class . forName <nl> + testCompile project ( ' : subprojects : groovy - json ' ) <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 160 <nl> - versionName " 3 . 1 . 0 . 3 " <nl> + versionCode 161 <nl> + versionName " 3 . 1 . 0 . 4 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> apply from : ' gradle - mvn - push . gradle ' <nl> dependencies { <nl> - compile ' com . mikepenz : iconics - core : 2 . 0 . 0 @ aar ' <nl> + compile ' com . mikepenz : iconics - core : 2 . 1 . 0 @ aar ' <nl> } <nl> 
mmm a / subprojects / docs / docs . gradle <nl> ppp b / subprojects / docs / docs . gradle <nl> task decorateReleaseNotes ( type : Jsoup ) { <nl> apply from : " release - notes - transform . gradle " <nl> } <nl> + import org . apache . tools . ant . filters . * <nl> task releaseNotes ( type : Copy ) { <nl> group = " release notes " <nl> ext . fileName = " release - notes . html " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> mavenCentral ( ) <nl> } <nl> - / / dist <nl> ext . distPath = " $ rootProject . buildDir / dist " <nl> task collectJars ( type : Copy , overwrite : true ) { <nl> 
mmm a / gradle / integTest . gradle <nl> ppp b / gradle / integTest . gradle <nl> def forEachJavaProcess ( Closure action ) { <nl> pidPattern = / ( [ 0 - 9 ] + ) \ s * $ / <nl> } else { <nl> result = exec { <nl> - commandLine ( ' ps ' , ' f ' ) <nl> + commandLine ( ' ps ' , ' x ' ) <nl> standardOutput = output <nl> errorOutput = output <nl> ignoreExitValue = true <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 2 " <nl> - supportLibVersion = " 23 . 1 . 1 " <nl> + supportLibVersion = " 23 . 2 . 0 " <nl> } <nl> allprojects { <nl> 
mmm a / smack - android / build . gradle <nl> ppp b / smack - android / build . gradle <nl> dependencies { <nl> } . each { project - > <nl> compile project <nl> } <nl> + <nl> + / / Add the Android jar to the Eclipse . classpath . <nl> + compile files ( androidBootClasspath ) <nl> } <nl> configure ( androidProjects ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> intellij { <nl> version ' 14 . 1 . 5 ' <nl> pluginName ' AndroidWiFiADB ' <nl> plugins ' android ' <nl> + updateSinceUntilBuild false <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> testCompile project ( ' : groovy - ant ' ) <nl> testCompile project ( ' : groovy - test ' ) <nl> - testCompile project ( ' : groovy - json ' ) <nl> } <nl> ext . generatedDirectory = " $ { buildDir } / generated - sources " <nl> 
mmm a / h2o - test - integ / build . gradle <nl> ppp b / h2o - test - integ / build . gradle <nl> dependencies { <nl> compile project ( " : h2o - assembly " ) <nl> } <nl> - def runner = new File ( " $ rootDir / h2o - r / tests / run . py " ) . canonicalPath <nl> + def runner = new File ( " $ rootDir / scripts / run . py " ) . canonicalPath <nl> / / Python MultiJVMTests <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 2 . 0 - beta3 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15017 <nl> + versionCode = 15018 <nl> versionName = ' 16 - beta6 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> commonsioVersion = " 2 . 4 " <nl> commonslangVersion = " 3 . 4 " <nl> eventbusVersion = " 2 . 4 . 0 " <nl> - flattr4jVersion = " 2 . 12 " <nl> + flattr4jVersion = " 2 . 13 " <nl> glideVersion = " 3 . 7 . 0 " <nl> glideOkhttpIntegrationVersion = " 1 . 4 . 0 " <nl> iconifyVersion = " 2 . 2 . 1 " <nl> 
mmm a / jodd - db / build . gradle <nl> ppp b / jodd - db / build . gradle <nl> dependencies { <nl> compile project ( ' : jodd - jtx ' ) <nl> compile project ( ' : jodd - proxetta ' ) <nl> + compile lib . log <nl> + <nl> testCompile lib . junit <nl> testCompile lib . hsqldb <nl> testCompile lib . h2db <nl> 
mmm a / permissionsdispatcher - processor / build . gradle <nl> ppp b / permissionsdispatcher - processor / build . gradle <nl> import org . gradle . internal . jvm . Jvm <nl> apply plugin : " java " <nl> apply plugin : ' com . novoda . bintray - release ' <nl> - targetCompatibility = JavaVersion . VERSION_1_8 <nl> - sourceCompatibility = JavaVersion . VERSION_1_8 <nl> + targetCompatibility = JavaVersion . VERSION_1_7 <nl> + sourceCompatibility = JavaVersion . VERSION_1_7 <nl> sourceSets { <nl> main { <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> ext { <nl> publishedModules = [ <nl> " ratpack - core " , " ratpack - groovy " , " ratpack - guice " , " ratpack - session " , " ratpack - test - support " , <nl> - " ratpack - manual " <nl> + " ratpack - manual " , " ratpack - gradle " <nl> ] . collect { project ( it ) } <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : extensions : net ' <nl> include ' : testapp ' <nl> gradle . ext . versionCode = 10200 <nl> - gradle . ext . versionName = ' 1 . 2 . 0 - beta2 ' <nl> + gradle . ext . versionName = ' 1 . 2 . 0 - SNAPSHOT ' <nl> gradle . ext . bintrayRepo = ' Agera ' <nl> gradle . ext . bintrayName = ' agera ' <nl> 
mmm a / rosie / build . gradle <nl> ppp b / rosie / build . gradle <nl> apply from : ' https : / / raw . github . com / chrisbanes / gradle - mvn - push / master / gradle - mvn <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 1 " <nl> + buildToolsVersion " 23 . 0 . 2 " <nl> defaultConfig { <nl> minSdkVersion 14 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> / / Establish version and status <nl> - ext . releaseVersion = ' 0 . 4 . 0 ' <nl> + ext . releaseVersion = ' 0 . 4 . 1 ' <nl> ext . githubProjectName = ' archaius ' <nl> / / group = ' com . netflix . archaius ' <nl> 
mmm a / subprojects / scala / scala . gradle <nl> ppp b / subprojects / scala / scala . gradle <nl> dependencies { <nl> compile libraries . groovy <nl> compile project ( " : core " ) <nl> - compile project ( " : language - jvm " ) <nl> + compile project ( " : languageJvm " ) <nl> compile project ( " : plugins " ) <nl> / / keep in sync with ScalaBasePlugin code <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 182 <nl> - versionName " 9 - beta2 " <nl> + versionCode 183 <nl> + versionName " 9 - beta3 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 16 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 14 . Final ' <nl> + nettyVersion = ' 4 . 0 . 15 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 3 . 1 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15071 <nl> - versionName = ' 20 . 1 . 0 - beta2 ' <nl> + versionCode = 15072 <nl> + versionName = ' 20 . 1 . 0 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> jvmArgs " - Xss320k " <nl> + / / Same min and max heap to fail fast if we can ' t allocate memory <nl> + minHeapSize " 256m " <nl> maxHeapSize " 256m " <nl> if ( isCloudCi ) { <nl> 
mmm a / roundedimageview / build . gradle <nl> ppp b / roundedimageview / build . gradle <nl> android { <nl> } <nl> } <nl> + configurations { <nl> + provided <nl> + } <nl> + <nl> dependencies { <nl> provided ' com . squareup . picasso : picasso : 2 . 2 . 0 ' <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : pxfetcher ' , ' : core ' , ' : demo ' <nl> \ No newline at end of file <nl> + include ' : core ' , ' : demo ' <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> ivyVersion = ' 2 . 4 . 0 - rc1 ' <nl> jansiVersion = ' 1 . 11 ' <nl> jarjarVersion = ' 1 . 3 ' <nl> - jlineVersion = ' 2 . 11 ' <nl> + jlineVersion = ' 2 . 12 ' <nl> jmockVersion = ' 1 . 2 . 0 ' <nl> logbackVersion = ' 1 . 0 . 13 ' <nl> log4jVersion = ' 1 . 2 . 17 ' <nl> 
mmm a / gradle / javaprojects . gradle <nl> ppp b / gradle / javaprojects . gradle <nl> dependencies { <nl> sourceSets . main . compileClasspath + = configurations . compileOnly <nl> + [ compileJava , compileTestJava ] * . options * . encoding = ' UTF - 8 ' <nl> + <nl> System . setProperty ( ' apacheDSWorkDir ' , " $ { buildDir } / apacheDSWork " ) <nl> test { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> minecraft { <nl> version = " 1 . 6 . 4 - 9 . 11 . 1 . 964 " <nl> forgeVersion = " 9 . 11 . 1 . 964 " <nl> - replaceIn " com / sk89q / worldedit / forge / WorldEditMod . java " <nl> + replaceIn " com / sk89q / worldedit / forge / ForgeWorldEdit . java " <nl> replace " % VERSION % " , project . version <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> into " $ { rootProject . projectDir } / dist " <nl> } <nl> } <nl> + <nl> + test { <nl> + excludes = [ " * * / * TestCase . class " , " * * / * \ $ * . class " ] <nl> + } <nl> } <nl> 
mmm a / SlidingLayerSample / build . gradle <nl> ppp b / SlidingLayerSample / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> + <nl> + compileOptions { <nl> + sourceCompatibility JavaVersion . VERSION_1_7 <nl> + targetCompatibility JavaVersion . VERSION_1_7 <nl> + } <nl> + <nl> compileSdkVersion 22 <nl> buildToolsVersion " 22 . 0 . 1 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> packageName " org . wordpress . android " <nl> - versionName " 2 . 6 RC 1 " <nl> - versionCode 89 <nl> + versionName " 2 . 6 RC 2 " <nl> + versionCode 90 <nl> minSdkVersion 9 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 200 <nl> + versionCode 201 <nl> versionName " 11 - beta1 " <nl> } <nl> beta { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> group = ' uk . co . real_logic ' <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> + <nl> + compileJava . options . encoding = ' UTF - 8 ' <nl> } <nl> buildscript { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15118 <nl> - versionName = ' 23 . 1 . 1 ' <nl> + versionCode = 15122 <nl> + versionName = ' 24 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / subprojects / plugins / plugins . gradle <nl> ppp b / subprojects / plugins / plugins . gradle <nl> dependencies { <nl> testCompile ' net . sourceforge . nekohtml : nekohtml : 1 . 9 . 14 ' <nl> } <nl> + useTestFixtures ( project : ' : native ' ) <nl> + <nl> evaluationDependsOn ( " : wrapper " ) <nl> task wrapperJar ( type : Copy ) { <nl> from project ( " : wrapper " ) . executableJar . outputs . files <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> task forceCandidate { <nl> } <nl> release . dependsOn ( forceCandidate ) <nl> + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) <nl> task releaseSnapshot ( dependsOn : [ uploadArtifactory , uploadMavenCentral ] ) <nl> / / Ensure our versions look like the project status before publishing <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> / / We haven ' t been ready for Marshmallow ' s permission model yet . <nl> / / noinspection OldTargetApi <nl> targetSdkVersion 22 <nl> - versionCode 2 <nl> - versionName " 1 . 0 . 0 - alpha . 2 " <nl> + versionCode 3 <nl> + versionName " 1 . 0 . 0 - beta . 1 " <nl> } <nl> buildTypes { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 53 <nl> + versionCode 54 <nl> versionName " 2 . 9 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 53 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / subprojects / native / native . gradle <nl> ppp b / subprojects / native / native . gradle <nl> dependencies { <nl> compile libraries . slf4j_api <nl> compile libraries . jna <nl> compile libraries . nativePlatform <nl> - compile module ( ' org . fusesource . jansi : jansi : 1 . 2 . 1 ' ) { <nl> + compile module ( ' org . fusesource . jansi : jansi : 1 . 13 ' ) { <nl> dependency libraries . jna <nl> } <nl> compile libraries . guava <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> } <nl> / / Needed by the eclipse plugin <nl> - clientModule ( [ ' compile ' ] , " : dom4j : 1 . 6 . 1 " ) { <nl> + clientModule ( [ ' compile ' ] , " dom4j : dom4j : 1 . 6 . 1 " ) { <nl> dependencies ( " jaxen : jaxen : 1 . 1 @ jar " ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> minecraft { <nl> / / Project dependencies <nl> dependencies { <nl> - compile project ( ' : SpongeAPI ' ) <nl> + compile project ( ' SpongeAPI ' ) <nl> testCompile ' junit : junit : 4 . 11 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : ribbon - httpclient ' ) { <nl> project ( ' : ribbon - eureka ' ) { <nl> dependencies { <nl> compile project ( ' : ribbon - core ' ) <nl> - compile ' com . netflix . eureka : eureka - client : 1 . 1 . 73 ' <nl> + compile ' com . netflix . eureka : eureka - client : 1 . 1 . 107 ' <nl> } <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " alpha - 6 " <nl> - versionCode 252 <nl> + versionName " alpha - 7 " <nl> + versionCode 253 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / flyway - gradle - plugin / build . gradle <nl> ppp b / flyway - gradle - plugin / build . gradle <nl> dependencies { <nl> compile gradleApi ( ) <nl> compile localGroovy ( ) <nl> testCompile ' junit : junit : 4 . 11 ' <nl> - testCompile ' org . hsqldb : hsqldb : 2 . 3 . 2 ' <nl> + testCompile ' org . hsqldb : hsqldb : 2 . 3 . 3 ' <nl> } <nl> jar { <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> task forceCandidate { <nl> } <nl> release . dependsOn ( forceCandidate ) <nl> + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) <nl> task releaseSnapshot ( dependsOn : [ uploadArtifactory , uploadMavenCentral ] ) <nl> / / Ensure our versions look like the project status before publishing <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - rc4 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha9 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta6 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 2 . 2 ' <nl> logbackVersion = ' 1 . 0 . 13 ' <nl> - junitVersion = ' 4 . 10 ' <nl> + junitVersion = ' 4 . 11 ' <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 9 . 5 ' <nl> httpComponentVersion = ' 4 . 2 . 5 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 2 . 0 - rc1 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 2 . 2 ' <nl> classpath ' com . novoda : bintray - release : 0 . 2 . 10 ' <nl> } <nl> } <nl> 
mmm a / spock - maven / maven . gradle <nl> ppp b / spock - maven / maven . gradle <nl> - apply from : script ( " publishMaven " ) <nl> - <nl> displayName = " Spock Framework - Maven Module " <nl> description = " Spock ' s Maven Module provides some advanced features when executing Spock specifications with Maven 2 . \ <nl> 
mmm a / WordPressComRest / build . gradle <nl> ppp b / WordPressComRest / build . gradle <nl> repositories { <nl> } <nl> android { <nl> + defaultPublishConfig ' debug ' <nl> + <nl> compileSdkVersion 20 <nl> buildToolsVersion " 19 . 1 . 0 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> rxJavaVersion = " 1 . 1 . 0 " <nl> rxJavaRulesVersion = " 1 . 1 . 0 . 0 " <nl> - audioPlayerVersion = " v1 . 0 . 9 " <nl> + audioPlayerVersion = " v1 . 0 . 10 " <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15015 <nl> + versionCode = 15016 <nl> versionName = ' 16 - beta6 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 15 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 13 . Final ' <nl> + nettyVersion = ' 4 . 0 . 14 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 3 . 0 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' nexus ' <nl> buildscript { <nl> repositories { <nl> jcenter ( ) <nl> - mavenLocal ( ) <nl> - mavenCentral ( ) <nl> + mavenLocal ( ) <nl> + mavenCentral ( ) <nl> } <nl> dependencies { <nl> modifyPom { <nl> } <nl> } <nl> + dependencies { <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / Application / LinkBubble / build . gradle <nl> ppp b / Application / LinkBubble / build . gradle <nl> dependencies { <nl> compile files ( ' libs / dexguard_util . jar ' ) <nl> / / compile project ( ' : Libraries : ViewPagerIndicator : library ' ) <nl> } <nl> + <nl> + task showVersion < < { <nl> + println buildscript . configurations . classpath . resolvedConfiguration . firstLevelModuleDependencies . moduleVersion <nl> + } <nl> + <nl> + clean . dependsOn showVersion <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 196 <nl> - versionName " 10 - beta3 " <nl> + versionCode 197 <nl> + versionName " 10 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> versionName " alpha - 4 " <nl> - versionCode 247 <nl> + versionCode 248 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task buildH2oDevDist ( type : Exec ) { <nl> commandLine ' . / make - dist . sh ' <nl> } <nl> - buildH2oDevDist . dependsOn ' : h2o - test - integ : runGenerateRESTAPIDocs ' <nl> - <nl> task dist ( dependsOn : buildH2oDevDist ) <nl> / / <nl> 
mmm a / modules / frontend / frontend - css - web / build . gradle <nl> ppp b / modules / frontend / frontend - css - web / build . gradle <nl> task buildAlloyTheme ( type : Copy ) <nl> buildAlloyTheme { <nl> dependsOn " : frontend : frontend - js - web : buildAlloy " <nl> - dependsOn " : frontend : frontend - common - css : build - bourbon " <nl> ext { <nl> autoClean = false <nl> 
mmm a / resolver - dnsjava / build . gradle <nl> ppp b / resolver - dnsjava / build . gradle <nl> javax . naming API ( e . g . Android ) . " " " <nl> dependencies { <nl> compile project ( path : ' : core ' , configuration : ' dns ' ) <nl> - compile ' dnsjava : dnsjava : 2 . 1 . 1 ' <nl> + compile ' dnsjava : dnsjava : 2 . 1 . + ' <nl> } <nl> 
mmm a / subprojects / docs / docs . gradle <nl> ppp b / subprojects / docs / docs . gradle <nl> task groovydoc ( type : Groovydoc , dependsOn : configureGroovyDoc ) { <nl> includes = javadoc . includes <nl> excludes = javadoc . excludes <nl> doFirst { <nl> - title = " Gradle API $ version " <nl> + windowTitle = " Gradle API $ version " <nl> + docTitle = windowTitle <nl> } <nl> groovyClasspath = project ( ' : core ' ) . configurations . groovy <nl> doLast { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 3 " <nl> - supportLibVersion = " 23 . 3 . 0 " <nl> + supportLibVersion = " 23 . 4 . 0 " <nl> minSdkVersion = 10 <nl> targetSdkVersion = 23 <nl> 
mmm a / gradle / integTest . gradle <nl> ppp b / gradle / integTest . gradle <nl> integTestTasks . all { <nl> classpath = sourceSets . integTest . runtimeClasspath <nl> testSrcDirs = [ ] <nl> jvmArgs ' - XX : + HeapDumpOnOutOfMemoryError ' <nl> - maxParallelForks = Math . min ( 2 , guessMaxForks ( ) ) <nl> + / / maxParallelForks = guessMaxForks ( ) <nl> testResultsDir = file ( " $ { project . testResultsDir } / $ name " ) <nl> 
mmm a / brut . apktool . smali / build . gradle <nl> ppp b / brut . apktool . smali / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 6 ' <nl> + version = ' 2 . 0 . 8 ' <nl> def jarVersion = version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> artifacts { <nl> } <nl> signing { <nl> - required { ! version . toString ( ) . contains ( " SNAPSHOT " ) } <nl> + required { ! version . toString ( ) . contains ( " SNAPSHOT " ) & & gradle . taskGraph . hasTask ( " uploadArchives " ) } <nl> sign configurations . archives <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 28 <nl> + versionCode 29 <nl> versionName " 2 . 0 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15007 <nl> - versionName = ' 15 . 0 . 5 ' <nl> + versionCode = 15008 <nl> + versionName = ' 15 . 0 . 6 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11257 <nl> - versionName = ' 13 . 1 . 1 ' <nl> + versionCode = 11258 <nl> + versionName = ' 14 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> androidPlugin = ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> minSdkVersion = 11 <nl> compileSdkVersion = 22 <nl> - buildToolsVersion = ' 22 . 0 . 1 ' <nl> + buildToolsVersion = ' 23 . 0 . 1 ' <nl> } <nl> \ No newline at end of file <nl> 
mmm a / gradle / idea . gradle <nl> ppp b / gradle / idea . gradle <nl> configure ( groovyProjects ( ) ) { <nl> } <nl> } <nl> - evaluationDependsOn ( ' : docs ' ) <nl> - <nl> idea { <nl> module { <nl> excludeDirs + = file ( ' intTestHomeDir ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task intTestImage ( type : Sync ) { <nl> with binDistImage <nl> integTestGradleHome = file ( " $ buildDir / integ test " ) <nl> into integTestGradleHome <nl> + doLast { task - > <nl> + ant . chmod ( dir : " $ integTestGradleHome / bin " , perm : " ugo + rx " , includes : " * * / * " ) <nl> + } <nl> } <nl> def isDevBuild ( ) { <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 4 . 2 . 1 " <nl> - versionCode 192 <nl> + versionName " 4 . 3 - rc1 " <nl> + versionCode 193 <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> * See the License for the specific language governing permissions and <nl> * limitations under the License . <nl> * / <nl> - <nl> import java . text . SimpleDateFormat <nl> import java . util . jar . Attributes <nl> import org . gradle . api . artifacts . repositories . WebdavResolver <nl> 
mmm a / subprojects / announce / announce . gradle <nl> ppp b / subprojects / announce / announce . gradle <nl> dependencies { <nl> compile libraries . slf4j_api <nl> compile project ( ' : core ' ) <nl> - compile project ( ' : plugins ' ) <nl> + integTestRuntime project ( ' : plugins ' ) <nl> } <nl> if ( ! javaVersion . java6Compatible ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11243 <nl> + versionCode = 11244 <nl> versionName = ' 13 - beta3 ' <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> dependencies { <nl> / / used to fill the RecyclerView with the DrawerItems <nl> / / and provides single and multi selection , expandable items <nl> / / https : / / github . com / mikepenz / FastAdapter <nl> - compile ' com . mikepenz : fastadapter : 1 . 0 . 3 @ aar ' <nl> + compile ' com . mikepenz : fastadapter : 1 . 0 . 4 @ aar ' <nl> } <nl> 
mmm a / DaoGenerator / build . gradle <nl> ppp b / DaoGenerator / build . gradle <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> group = ' de . greenrobot ' <nl> - version = ' 2 . 0 . 0 ' <nl> + version = ' 2 . 1 . 0 - SNAPSHOT ' <nl> sourceCompatibility = 1 . 6 <nl> def isSnapshot = version . endsWith ( ' - SNAPSHOT ' ) <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task syncDoc ( type : Copy , dependsOn : doc ) { <nl> task distSrc ( type : Zip ) { <nl> baseName = ' apache - groovy ' <nl> appendix = ' src ' <nl> - classifier = ' incubating ' <nl> into ( " groovy - $ version " ) <nl> with srcSpec <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply from : ' gradle / functions . gradle ' <nl> - def apktoolversion_major = ' 2 . 0 . 1 ' <nl> - def apktoolversion_minor = ' ' ; <nl> + def apktoolversion_major = ' 2 . 0 . 2 ' <nl> + def apktoolversion_minor = ' SNAPSHOT ' ; <nl> allprojects { <nl> apply plugin : ' java ' <nl> 
mmm a / gradle / performanceTest . gradle <nl> ppp b / gradle / performanceTest . gradle <nl> task prepareSamples { <nl> task cleanSamples ( type : Delete ) { <nl> delete { tasks . withType ( ProjectGeneratorTask ) * . destDir } <nl> + delete { tasks . withType ( RemoteProject ) * . outputDirectory } <nl> } <nl> def withPerformanceDb = { task - > <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> packageName " org . wordpress . android " <nl> - versionName " 2 . 6 Beta 1 " <nl> - versionCode 86 <nl> + versionName " 2 . 6 Beta 2 " <nl> + versionCode 87 <nl> minSdkVersion 9 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> compileSdkVersion = 22 <nl> - buildToolsVersion = ' 21 . 1 . 2 ' <nl> + buildToolsVersion = ' 23 . 0 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> versionCode = 15130 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> tasks . withType ( Test ) { <nl> compilePerfJava { <nl> classpath + = sourceSets . main . runtimeClasspath <nl> + classpath + = sourceSets . test . runtimeClasspath <nl> } <nl> javadoc { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 24 <nl> - buildToolsVersion = " 24 . 0 . 0 " <nl> - supportLibVersion = " 24 . 0 . 0 " <nl> + buildToolsVersion = " 24 . 0 . 1 " <nl> + supportLibVersion = " 24 . 1 . 0 " <nl> minSdkVersion = 10 <nl> targetSdkVersion = 24 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> def configDir = new File ( rootDir , ' config ' ) <nl> buildscript { <nl> repositories { <nl> mavenCentral ( ) <nl> - mavenLocal ( ) <nl> maven { url ' https : / / oss . sonatype . org / content / repositories / snapshots ' } <nl> jcenter ( ) <nl> + mavenLocal ( ) <nl> } <nl> dependencies { <nl> 
mmm a / openid / openid . gradle <nl> ppp b / openid / openid . gradle <nl> dependencies { <nl> provided ' javax . servlet : servlet - api : 2 . 5 ' <nl> - runtime ' org . apache . httpcomponents : httpclient : 4 . 1 . 2 ' <nl> - } <nl> \ No newline at end of file <nl> + runtime ' org . apache . httpcomponents : httpclient : 4 . 1 . 1 ' <nl> + } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - alpha2 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( buildDir , ' documentation ' ) <nl> 
mmm a / gradle / quality . gradle <nl> ppp b / gradle / quality . gradle <nl> allprojects { <nl> sourceSets = [ sourceSets . main ] <nl> } <nl> tasks . withType ( FindBugs ) { <nl> + effort = ' max ' <nl> reports { <nl> xml . enabled = false <nl> html . enabled = true <nl> 
mmm a / h2o - test - integ / build . gradle <nl> ppp b / h2o - test - integ / build . gradle <nl> task cleanNodeJsSingleJVMTests ( type : Delete ) { <nl> delete " $ nodeJsSingleJVMTestsPath / results " <nl> } <nl> - test . dependsOn runNodeJsSingleJVMTests <nl> + / / Commented out on 12 / 15 / 2014 <nl> + / / test . dependsOn runNodeJsSingleJVMTests <nl> clean . dependsOn cleanNodeJsSingleJVMTests <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> gantVersion = " 1 . 9 . 6 " <nl> gdocEngineVersion = " 1 . 0 . 1 " <nl> groovyVersion = " 2 . 1 . 5 " <nl> - gradleGroovyVersion = groovyVersion <nl> - gradleGroovyVersion = " 1 . 8 . 2 " <nl> ivyVersion = " 2 . 3 . 0 " <nl> jansiVersion = " 1 . 2 . 1 " <nl> jlineVersion = " 1 . 0 " <nl> 
mmm a / deskshare / build . gradle <nl> ppp b / deskshare / build . gradle <nl> subprojects { <nl> manifest . mainAttributes ( provider : ' bigbluebutton ' ) <nl> } <nl> - dependsOnChildren ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 115 <nl> - versionName " 1 . 8 . 4 " <nl> + versionCode 116 <nl> + versionName " 1 . 9 . 0 - beta " <nl> project . ext . set ( archivesBaseName , archivesBaseName + " - " + versionName ) ; <nl> } <nl> 
mmm a / datetimepicker - library / build . gradle <nl> ppp b / datetimepicker - library / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 7 <nl> targetSdkVersion 19 <nl> + versionName project . VERSION_NAME <nl> + versionCode Integer . parseInt ( project . VERSION_CODE ) <nl> } <nl> sourceSets { <nl> android { <nl> } <nl> } <nl> } <nl> + <nl> + apply from : ' . . / maven_push . gradle ' <nl> 
mmm a / subprojects / tooling - api / tooling - api . gradle <nl> ppp b / subprojects / tooling - api / tooling - api . gradle <nl> dependencies { <nl> testCompile libraries . groovy <nl> / / lots of integTest errors otherwise <nl> - integTestCompile project ( ' : baseServices ' ) <nl> integTestCompile project ( ' : internalIntegTesting ' ) <nl> integTestRuntime project ( ' : ide ' ) <nl> integTestRuntime project ( ' : buildInit ' ) <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 22 <nl> - buildToolsVersion " 22 . 0 . 0 " <nl> + buildToolsVersion " 22 . 0 . 1 " <nl> defaultConfig { <nl> applicationId " com . xabber . androiddev " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> jar { <nl> ' Implementation - Vendor ' : ' hamcrest . org ' , <nl> ' Implementation - Version ' : version <nl> } <nl> + from sourceSets . main . allSource <nl> baseName = ' java - hamcrest ' <nl> } <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> events " failed " <nl> } <nl> } <nl> + jvmArgs " - Xss320k " <nl> } <nl> sourceCompatibility = " 1 . 7 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task buildH2oDevDist ( type : Exec ) { <nl> buildH2oDevDist . dependsOn ' : h2o - test - integ : runGenerateRESTAPIDocs ' <nl> + task dist ( dependsOn : buildH2oDevDist ) <nl> + <nl> / / <nl> / / Import project development profiles <nl> / / <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> release { <nl> - minifyEnabled false <nl> + minifyEnabled true <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> 
mmm a / hibernate - testing / hibernate - testing . gradle <nl> ppp b / hibernate - testing / hibernate - testing . gradle <nl> dependencies { <nl> } <nl> } <nl> + / / todo : Fold into hibernate - core and publish in separate publications <nl> + / / once http : / / issues . gradle . org / browse / GRADLE - 2966 is resolved <nl> + <nl> jar { <nl> manifest { <nl> instruction ' Bundle - Description ' , ' Hibernate ORM Testing ' <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> } <nl> compileSdkVersion 21 <nl> - buildToolsVersion " 21 . 0 . 2 " <nl> + buildToolsVersion " 21 . 1 . 1 " <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> 
mmm a / subprojects / integ - test / integ - test . gradle <nl> ppp b / subprojects / integ - test / integ - test . gradle <nl> dependencies { <nl> integTestCompile project ( ' : toolingApi ' ) <nl> integTestCompile project ( ' : launcher ' ) <nl> + integTestCompile project ( ' : coreImpl ' ) <nl> integTestCompile libraries . ant <nl> integTestCompile libraries . xmlunit <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> } <nl> + packagingOptions { <nl> + exclude ' META - INF / DEPENDENCIES ' <nl> + exclude ' META - INF / LICENSE ' <nl> + exclude ' META - INF / NOTICE ' <nl> + } <nl> + <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> 
mmm a / brut . apktool . smali / build . gradle <nl> ppp b / brut . apktool . smali / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 3 ' <nl> + version = ' 2 . 0 . 5 ' <nl> def jarVersion = version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha5 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha7 ' <nl> } <nl> } <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> dependencies { <nl> } <nl> android { <nl> - compileSdkVersion 18 <nl> + compileSdkVersion 16 <nl> buildToolsVersion " 18 . 0 . 1 " <nl> defaultConfig { <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> versionCode 218 <nl> - versionName " 12 - beta4 " <nl> + versionName " 12 - beta5 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> ext { <nl> - VERSION_NAME = " 2 . 2 . 0 " <nl> - VERSION_CODE = 9 <nl> + VERSION_NAME = " 2 . 2 . 1 - SNAPSHOT " <nl> + VERSION_CODE = 10 <nl> } <nl> apply plugin : ' android - reporting ' <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> import static org . gradle . api . JavaVersion . VERSION_1_7 <nl> apply plugin : ' java ' <nl> apply plugin : ' maven ' <nl> + apply plugin : ' osgi ' <nl> apply plugin : ' signing ' <nl> sourceCompatibility = VERSION_1_7 <nl> 
mmm a / scalpel / build . gradle <nl> ppp b / scalpel / build . gradle <nl> android { <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> } <nl> } <nl> + <nl> + apply from : ' https : / / raw . github . com / chrisbanes / gradle - mvn - push / master / gradle - mvn - push . gradle ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task clean ( type : Delete ) { <nl> homeSrcDir <nl> } <nl> - task allDependencies ( dependsOn : { subprojects * . implicitTasks * . dependencies } ) <nl> - <nl> / / From this point on we need the subprojects to be fully configured , so force their full evaluation <nl> subprojects . each { evaluationDependsOn it . path } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / modules / apps / monitoring / monitoring - web / build . gradle <nl> ppp b / modules / apps / monitoring / monitoring - web / build . gradle <nl> dependencies { <nl> liferay { <nl> deployDir = file ( " $ { liferayHome } / osgi / modules " ) <nl> - } <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> buildTypes { <nl> release { <nl> - minifyEnabled false <nl> + minifyEnabled true <nl> + shrinkResources true <nl> proguardFiles getDefaultProguardFile ( " proguard - android . txt " ) , " proguard - rules . pro " <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - alpha4 ' <nl> - isSnapshot = true <nl> + shortVersion = ' 4 . 2 . 0 - beta1 ' <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> / / We haven ' t been ready for Marshmallow ' s permission model yet . <nl> / / noinspection OldTargetApi <nl> targetSdkVersion 22 <nl> - versionCode 1 <nl> - versionName " 1 . 0 . 0 - alpha . 1 " <nl> + versionCode 2 <nl> + versionName " 1 . 0 . 0 - alpha . 2 " <nl> } <nl> buildTypes { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 195 <nl> - versionName " 3 . 1 . 6 . 2 " <nl> + versionCode 196 <nl> + versionName " 3 . 1 . 7 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> apply plugin : " ratpack - groovy " <nl> / / Remove the dependencies that the plugin added ( we ' ll use project dependencies ) <nl> configurations . compile . dependencies . clear ( ) <nl> + configurations . groovy . dependencies . clear ( ) <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " signing " <nl> sourceCompatibility = 1 . 5 <nl> - targetCompatibility = 1 . 5 <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / gradle / integTest . gradle <nl> ppp b / gradle / integTest . gradle <nl> class IntegTestConvention { <nl> } <nl> File getIntegTestImageDir ( ) { <nl> - return project . tasks . findByName ( ' intTestImage ' ) ? . destinationDir <nl> + return project . intTestImage . destinationDir <nl> } <nl> } <nl> 
mmm a / advanced / server / build . gradle <nl> ppp b / advanced / server / build . gradle <nl> dependencies { <nl> / / } <nl> } <nl> + javadoc . classpath + = project . sourceSets . test . compileClasspath <nl> + <nl> sourceSets { <nl> integrationTest { <nl> / / TODO rename webtest into integrationTest <nl> 
mmm a / android / playground / app / build . gradle <nl> ppp b / android / playground / app / build . gradle <nl> android { <nl> versionName " 0 . 5 . 2 . 3 " <nl> testInstrumentationRunner " android . support . test . runner . AndroidJUnitRunner " <nl> ndk { <nl> - abiFilters " armeabi - v7a " <nl> abiFilters " x86 " <nl> abiFilters " armeabi " <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> def versionMajor = 0 <nl> def versionMinor = 4 <nl> - def versionPatch = 0 <nl> + def versionPatch = 1 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 17 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 20 . Final ' <nl> + nettyVersion = ' 4 . 0 . 21 . Final ' <nl> slf4jVersion = ' 1 . 7 . 7 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 4 . 1 . 1 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha1 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha2 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 97 <nl> + versionCode 98 <nl> versionName " 1 . 6 . 11 " <nl> project . ext . set ( archivesBaseName , archivesBaseName + " - " + versionName ) ; <nl> } <nl> 
mmm a / gradle / idea . gradle <nl> ppp b / gradle / idea . gradle <nl> idea { <nl> node . append ( new XmlParser ( ) . parseText ( ' ' ' <nl> < component name = " CompilerWorkspaceConfiguration " > <nl> - < option name = " COMPILER_PROCESS_HEAP_SIZE " value = " 1024 " / > <nl> + < option name = " COMPILER_PROCESS_HEAP_SIZE " value = " 1536 " / > <nl> < / component > <nl> ' ' ' ) ) <nl> 
mmm a / h2o - algos / build . gradle <nl> ppp b / h2o - algos / build . gradle <nl> apply from : ' . . / gradle / java . gradle ' <nl> apply from : ' . . / gradle / cp . gradle ' <nl> - apply plugin : ' java ' <nl> description = " H2O Algorithms " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> supportLibsVersion = ' 23 . 1 . 1 ' <nl> targetSdkVersion = 22 <nl> - minSdkVersion = 7 <nl> + minSdkVersion = 11 <nl> versionCode = 12 <nl> versionName = " 0 . 4 . 2 " <nl> } <nl> 
mmm a / UltimateRecyclerView / ultimaterecyclerview / build . gradle <nl> ppp b / UltimateRecyclerView / ultimaterecyclerview / build . gradle <nl> dependencies { <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . marshalchen . ultimaterecyclerview ' <nl> PUBLISH_ARTIFACT_ID = ' library ' <nl> - PUBLISH_VERSION = ' 0 . 1 . 1 ' <nl> + PUBLISH_VERSION = ' 0 . 2 . 0 ' <nl> } <nl> apply from : ' android - release - aar . gradle ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> compileSdkVersion = 19 <nl> - buildToolsVersion = ' 19 . 0 . 1 ' <nl> + buildToolsVersion = ' 19 . 0 . 3 ' <nl> versionCode = 239 <nl> versionName = ' 12 . 2 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> / / Name all the non - root projects after their path so that paths get grouped together when imported into eclipse . <nl> if ( path ! = ' : ' ) { <nl> - System . err . println ( eclipse . project . name + ' ' + path ) <nl> eclipse . project . name = path <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> buildTypes { <nl> debug { <nl> signingConfig signingConfigs . qualityMatters <nl> + applicationIdSuffix ' . debug ' <nl> } <nl> release { <nl> 
mmm a / Android / Sample / app / build . gradle <nl> ppp b / Android / Sample / app / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - com . android . build . gradle . AppExtension <nl> compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> testCompile ' junit : junit : 4 . 12 ' <nl> compile ' com . android . support : design : 23 . 1 . 1 ' <nl> 
mmm a / Application / LinkBubble / build . gradle <nl> ppp b / Application / LinkBubble / build . gradle <nl> buildscript { <nl> / / Manifest version information ! <nl> def versionMajor = 1 <nl> def versionMinor = 4 <nl> - def versionPatch = 3 <nl> + def versionPatch = 4 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> if ( buildMode = = " dexguard " ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' spring - instrument ' ) { <nl> dependencies { <nl> compile project ( " : spring - core " ) <nl> } <nl> + jar { <nl> + manifest . attributes [ ' Premain - Class ' ] = <nl> + ' org . springframework . instrument . InstrumentationSavingAgent ' <nl> + } <nl> } <nl> project ( ' spring - instrument - tomcat ' ) { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 234 <nl> - versionName ' 3 . 3 . 16 ' <nl> + versionCode 235 <nl> + versionName ' 3 . 3 . 17 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - beta3 ' <nl> - isSnapshot = true <nl> + shortVersion = ' 4 . 1 . 0 - rc1 ' <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> + File javaHome = new File ( System . getProperty ( ' java . home ' ) ) <nl> + logger . lifecycle " Using Java from $ javaHome ( version $ { System . getProperty ( ' java . version ' ) } ) " <nl> + <nl> / / TODO use antlr plugin <nl> / / apply plugin : ' antlr ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> buildToolsVersion " 21 . 1 . 1 " <nl> defaultConfig { <nl> - applicationId " com . grosner . dbflow " <nl> minSdkVersion 4 <nl> targetSdkVersion 21 <nl> versionName = VERSION_NAME <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15035 <nl> - versionName = ' 17 ' <nl> + versionCode = 15040 <nl> + versionName = ' 18 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> pom . project { <nl> name project . name <nl> packaging ' jar ' <nl> - description ' Moco is a easy setup stub framework , mainly focusing on testing and integration . ' <nl> + description ' Moco is an easy setup stub framework , mainly focusing on testing and integration . ' <nl> url ' https : / / github . com / dreamhead / moco ' <nl> scm { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> def versionMajor = 0 <nl> def versionMinor = 2 <nl> - def versionPatch = 2 <nl> + def versionPatch = 3 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 12 . 2 ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 14 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId ' com . lapism . searchview . sample ' <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 1 <nl> + versionCode 2 <nl> versionName " 1 . 1 . 4 " <nl> } <nl> buildTypes { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 33 <nl> + versionCode 34 <nl> versionName " 2 . 0 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = " 24 . 0 . 1 " <nl> targetSdkVersion = 23 <nl> - supportLibraryVersion = " 24 . 0 . 0 " <nl> + supportLibraryVersion = " 24 . 1 . 1 " <nl> } <nl> 
mmm a / subprojects / gradle - docs / src / samples / userguide / tutorial / hello / build . gradle <nl> ppp b / subprojects / gradle - docs / src / samples / userguide / tutorial / hello / build . gradle <nl> task hello { <nl> - doFirst { <nl> + doLast { <nl> println ' Hello world ! ' <nl> } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / QKSMS / build . gradle <nl> ppp b / QKSMS / build . gradle <nl> android { <nl> } <nl> compileSdkVersion 22 <nl> - buildToolsVersion ' 23 . 0 . 0 ' <nl> + buildToolsVersion ' 23 . 0 . 2 ' <nl> defaultConfig { <nl> versionCode 116 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15121 <nl> - versionName = ' 24 - beta2 ' <nl> + versionCode = 15117 <nl> + versionName = ' 23 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 22 <nl> - versionCode 12 <nl> - versionName " 1 . 2 " <nl> + versionCode 13 <nl> + versionName " 1 . 3 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / MPChartExample / build . gradle <nl> ppp b / MPChartExample / build . gradle <nl> android { <nl> applicationId ' com . xxmassdeveloper . mpchartexample ' <nl> minSdkVersion 16 <nl> targetSdkVersion 19 <nl> - versionCode 24 <nl> - versionName ' 1 . 6 . 3 ' <nl> + versionCode 25 <nl> + versionName ' 1 . 6 . 5 ' <nl> sourceSets { <nl> main { <nl> 
mmm a / facebook / build . gradle <nl> ppp b / facebook / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion Integer . parseInt ( project . ANDROID_BUILD_MIN_SDK_VERSION ) <nl> targetSdkVersion Integer . parseInt ( project . ANDROID_BUILD_TARGET_SDK_VERSION ) <nl> - multiDexEnabled true <nl> } <nl> lintOptions { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> ] <nl> } <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> + <nl> allprojects { <nl> apply plugin : ' findbugs ' <nl> apply plugin : ' jacoco ' <nl> 
mmm a / subprojects / signing / signing . gradle <nl> ppp b / subprojects / signing / signing . gradle <nl> dependencies { <nl> compile libraries . groovy <nl> compile project ( ' : core ' ) <nl> - compile project ( " : plugins " ) <nl> - compile project ( " : maven " ) <nl> + compile project ( ' : plugins ' ) <nl> + compile project ( ' : maven ' ) <nl> compile libraries . bouncycastle_pgp <nl> } <nl> 
mmm a / spock - gradle / gradle . gradle <nl> ppp b / spock - gradle / gradle . gradle <nl> + apply from : script ( " publishMaven " ) <nl> + <nl> dependencies { <nl> compile gradleApi ( ) <nl> } <nl> 
mmm a / examples / build . gradle <nl> ppp b / examples / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 22 . 0 . 1 " <nl> + buildToolsVersion " 23 . 0 . 2 " <nl> defaultConfig { <nl> applicationId " com . monyetmabuk . rajawali . tutorials " <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 239 <nl> - versionName ' 3 . 3 . 21 ' <nl> + versionCode 240 <nl> + versionName ' 3 . 3 . 22 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 22 <nl> - buildToolsVersion " 20 " <nl> + buildToolsVersion " 22 . 0 . 1 " <nl> defaultConfig { <nl> applicationId " com . daimajia . androidanimations " <nl> 
mmm a / gradle - mvn - push . gradle <nl> ppp b / gradle - mvn - push . gradle <nl> afterEvaluate { project - > <nl> task androidJavadocs ( type : Javadoc ) { <nl> source = android . sourceSets . main . allJava <nl> + classpath + = project . files ( android . plugin . getRuntimeJarList ( ) . join ( File . pathSeparator ) ) <nl> } <nl> task androidJavadocsJar ( type : Jar , dependsOn : androidJavadocs ) { <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 189 <nl> + versionCode 190 <nl> versionName " 9 . 1 " <nl> } <nl> beta { <nl> 
mmm a / subprojects / plugins / plugins . gradle <nl> ppp b / subprojects / plugins / plugins . gradle <nl> configurations { <nl> } <nl> if ( ! Jvm . current ( ) . java6Compatible ) { <nl> - sourceSets . all { <nl> - exclude ' * * / jdk6 / * * ' <nl> - } <nl> + sourceSets . main . groovy . exclude ' * * / jdk6 / * * ' <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavenDeployer { <nl> repository ( url : " https : / / oss . sonatype . org / service / local / staging / deploy / maven2 " ) { <nl> - authentication ( userName : mavenUser , password : mavenPassword ) <nl> + authentication ( userName : " changeme " , password : " changeme " ) <nl> } <nl> } <nl> } <nl> 
mmm a / WordPressUtils / build . gradle <nl> ppp b / WordPressUtils / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android . util " <nl> - versionName " 1 . 0 . 2 " <nl> + versionName " 1 . 1 . 0 " <nl> versionCode 1 <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> 
mmm a / modules / build - module . gradle <nl> ppp b / modules / build - module . gradle <nl> sourceSets { <nl> } <nl> } <nl> + tasks . eclipse { <nl> + dependsOn cleanEclipse <nl> + } <nl> + <nl> whip { <nl> version = project . properties [ " com . liferay . whip . version " ] <nl> } <nl> 
mmm a / bin / templates / project / build . gradle <nl> ppp b / bin / templates / project / build . gradle <nl> task wrapper ( type : Wrapper ) { <nl> gradleVersion = ' 2 . 2 . 1 ' <nl> } <nl> + ext . multiarch = false <nl> + <nl> / / PLUGIN GRADLE EXTENSIONS START <nl> / / PLUGIN GRADLE EXTENSIONS END <nl> - ext . multiarch = false <nl> - <nl> android { <nl> sourceSets { <nl> main { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15085 <nl> - versionName = ' 21 . 1 . 0 ' <nl> + versionCode = 15086 <nl> + versionName = ' 21 . 1 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - alpha4 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( buildDir , ' documentation ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> allprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> + maven { url ' https : / / raw . github . com / rockerhieu / mvn - repo / master / ' } <nl> } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15087 <nl> - versionName = ' 21 . 1 . 2 ' <nl> + versionCode = 15088 <nl> + versionName = ' 21 . 1 . 3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> group = ' com . netflix . servo ' / / TEMPLATE : Set to organization of project <nl> tasks . withType ( Compile ) { <nl> - options . compilerArgs < < " - Xlint : unchecked " <nl> + options . compilerArgs < < " - Xlint : unchecked " < < " - Xlint : deprecation " <nl> } <nl> test { <nl> 
mmm a / bigbluebutton - apps / build . gradle <nl> ppp b / bigbluebutton - apps / build . gradle <nl> repositories { <nl> } <nl> } <nl> mavenRepo urls : ' http : / / scala - tools . org / repo - releases / ' <nl> - flatDir name : ' fileRepo ' , dirs : " / home / firstuser / dev / repo " <nl> + flatDir name : ' fileRepo ' , dirs : " / opt / bigbluebutton / repo " <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> } <nl> } <nl> } <nl> - <nl> - dependencies { <nl> - compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> - compile ' com . android . support : appcompat - v7 : 19 . + ' <nl> - } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 1 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 23 <nl> buildToolsVersion = " 23 . 0 . 2 " <nl> - supportLibVersion = " 23 . 1 . 1 " <nl> + supportLibVersion = " 23 . 2 . 0 " <nl> } <nl> allprojects { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 1 . 3 ' <nl> + version = ' 2 . 2b1 ' <nl> if ( ! ( ' release ' in gradle . startParameter . taskNames ) ) { <nl> def versionSuffix <nl> 
mmm a / moco - runner / build . gradle <nl> ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> - proguardVersion = ' 5 . 1 ' <nl> + proguardVersion = ' 5 . 2 ' <nl> } <nl> it . dependencies { <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 190 <nl> - versionName " 9 . 1 " <nl> + versionCode 191 <nl> + versionName " 9 . 2 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> publishing { <nl> artifact javadocJar <nl> } <nl> mockitoAll ( MavenPublication ) { <nl> - artifact file : " foo . jar " <nl> artifactId ' mockito - all ' <nl> artifact sourcesJar <nl> artifact javadocJar <nl> 
mmm a / AIMSICD / build . gradle <nl> ppp b / AIMSICD / build . gradle <nl> android { <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . txt ' <nl> } <nl> } <nl> + dexOptions { <nl> + preDexLibraries ! isCi <nl> + } <nl> compileOptions { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> 
mmm a / ratpack - manual / ratpack - manual . gradle <nl> ppp b / ratpack - manual / ratpack - manual . gradle <nl> test { <nl> systemProperty " localRepo " , rootProject . file ( " build / localrepo " ) . absolutePath <nl> systemProperty " gradleUserHome " , gradle . gradleUserHomeDir . absolutePath <nl> systemProperty " gradleHome " , gradle . gradleHomeDir . absolutePath <nl> - forkEvery 1 <nl> } <nl> task checkApi ( type : Checkstyle ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> + File javaHome = new File ( System . getProperty ( ' java . home ' ) ) <nl> + logger . lifecycle " Using Java from $ javaHome ( version $ { System . getProperty ( ' java . version ' ) } ) " <nl> + <nl> / / TODO use antlr plugin <nl> / / apply plugin : ' antlr ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> repositories { <nl> apply plugin : ' com . android . application ' <nl> apply plugin : ' robolectric ' <nl> - apply plugin : ' retrolambda ' <nl> + apply plugin : ' me . tatarka . retrolambda ' <nl> apply plugin : ' com . neenbedankt . android - apt ' <nl> android { <nl> 
mmm a / jodd - core / build . gradle <nl> ppp b / jodd - core / build . gradle <nl> ext . moduleDescription = ' Jodd Core tools and utilities , including type converter <nl> dependencies { <nl> testCompile lib . junit <nl> + } <nl> + <nl> + jar { <nl> + manifest { <nl> + instruction ' Import - Package ' , ' * ; resolution : = optional ' <nl> + } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> mockitoVersion = ' 1 . 10 . 19 ' <nl> httpComponentVersion = ' 4 . 5 ' <nl> jsonpathVersion = ' 2 . 0 . 0 ' <nl> - freemarkerVersion = ' 2 . 3 . 22 ' <nl> + freemarkerVersion = ' 2 . 3 . 23 ' <nl> } <nl> project . jar { <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = " grails . core . ROOT " <nl> + <nl> include ' grails - bootstrap ' , <nl> ' grails - core ' , <nl> ' grails - spring ' , <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 22 <nl> + versionCode 23 <nl> versionName " 1 . 6 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> } <nl> 
mmm a / mongo - java - driver / build . gradle <nl> ppp b / mongo - java - driver / build . gradle <nl> def configDir = new File ( rootDir , ' config ' ) <nl> + apply plugin : ' idea ' <nl> apply plugin : ' osgi ' <nl> archivesBaseName = ' mongo - java - driver ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> signing { <nl> + required = { gradle . taskGraph . hasTask ( " uploadArchives " ) } <nl> sign configurations . archives <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task run ( type : JavaExec ) { <nl> dependsOn extractNatives <nl> main = ' org . terasology . game . Terasology ' <nl> classpath jar . archivePath <nl> + classpath configurations . runtime <nl> } <nl> 
mmm a / api / build . gradle <nl> ppp b / api / build . gradle <nl> task sourcesJar ( type : Jar , dependsOn : classes ) { <nl> artifacts { <nl> archives jar <nl> archives sourcesJar <nl> + archives javadocJar <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> - nettyVersion = ' 4 . 1 . 1 . Final ' <nl> + nettyVersion = ' 4 . 1 . 2 . Final ' <nl> slf4jVersion = ' 1 . 7 . 21 ' <nl> commonsIoVersion = ' 2 . 5 ' <nl> jacksonVersion = ' 2 . 7 . 5 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task licenseFormatAndroid ( type : nl . javadude . gradle . plugins . license . License ) { <nl> licenseFormat . dependsOn licenseFormatAndroid <nl> ext { <nl> - majorVersion = " 2 . 22 . " <nl> + majorVersion = " 2 . 23 . " <nl> compileSdkVersion = 23 <nl> minSdkVersion = 17 <nl> 
mmm a / carbon / build . gradle <nl> ppp b / carbon / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 7 <nl> targetSdkVersion 22 <nl> - versionCode 33 <nl> - versionName " 0 . 7 . 4 " <nl> + versionCode 34 <nl> + versionName " 0 . 8 . 0 " <nl> renderscriptTargetApi 20 <nl> renderscriptSupportModeEnabled true <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 32 <nl> + versionCode 33 <nl> versionName " 2 . 0 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' me . trnl : clirr - gradle - plugin : 0 . 4 ' <nl> - classpath ' me . trnl : github - release - gradle - plugin : 0 . 1 - SNAPSHOT ' <nl> + classpath ' me . trnl : github - release - gradle - plugin : 0 . 1 ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> ext { <nl> supportVersion = ' 22 . 2 . 1 ' <nl> - okHttpVersion = ' 2 . 4 . 0 ' <nl> + okHttpVersion = ' 2 . 5 . 0 ' <nl> daggerVersion = ' 1 . 2 . 2 ' <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply from : ' signing . gradle ' <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 2 " <nl> + buildToolsVersion " 23 . 0 . 3 " <nl> / / For customization of Volley to build . <nl> useLibrary ' org . apache . http . legacy ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' eclipse ' / / Only used so the Eclipse STS Gradle plugin can see <nl> defaultTasks ' build ' <nl> group = ' com . lmax ' <nl> - version = new Version ( major : 3 ) <nl> + version = new Version ( major : 3 , stage : ' beta1 ' ) <nl> ext { <nl> fullName = ' Disruptor Framework ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / caprice / library - blur / build . gradle <nl> ppp b / caprice / library - blur / build . gradle <nl> android { <nl> moduleName " genius_blur " <nl> cFlags " - DANDROID_NDK - D_RELEASE " <nl> ldLibs " m " , " log " , " jnigraphics " <nl> - abiFilters " armeabi - v7a armeabi x86 " <nl> + abiFilters " all " <nl> } <nl> } <nl> buildTypes { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> rxJavaVersion = " 1 . 1 . 0 " <nl> rxJavaRulesVersion = " 1 . 1 . 0 . 0 " <nl> - audioPlayerVersion = " v1 . 0 . 11 " <nl> + audioPlayerVersion = " v1 . 0 . 12 " <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> task forceCandidate { <nl> } <nl> release . dependsOn ( forceCandidate ) <nl> + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) <nl> task releaseSnapshot ( dependsOn : [ uploadArtifactory , uploadMavenCentral ] ) <nl> / / Ensure our versions look like the project status before publishing <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( jointBuildGroovyJarProperty ) { <nl> allprojects { <nl> repositories { <nl> maven { url " http : / / repo . grails . org / grails / core " } <nl> + mavenLocal ( ) <nl> } <nl> configurations { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( allprojects ) { project - > <nl> test { <nl> systemProperty ( " java . awt . headless " , " true " ) <nl> - systemProperty ( " testGroups " , properties . get ( " testGroups " ) ) <nl> + systemProperty ( " testGroups " , project . properties . get ( " testGroups " ) ) <nl> } <nl> repositories { <nl> 
mmm a / h2o - zookeeper / build . gradle <nl> ppp b / h2o - zookeeper / build . gradle <nl> dependencies { <nl> fatJar { <nl> manifest { <nl> - attributes ' Main - Class ' : ' water . zookeeper . h2odriver ' <nl> + attributes ' Main - Class ' : ' water . zookeeper . help ' <nl> } <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> versionName " 4 . 6 . 1 " <nl> - versionCode 213 <nl> + versionCode 214 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / telecine / build . gradle <nl> ppp b / telecine / build . gradle <nl> / / Manifest version information ! <nl> def versionMajor = 1 <nl> def versionMinor = 6 <nl> - def versionPatch = 0 <nl> + def versionPatch = 1 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> buildscript { <nl> 
mmm a / bin / templates / project / build . gradle <nl> ppp b / bin / templates / project / build . gradle <nl> task wrapper ( type : Wrapper ) { <nl> gradleVersion = ' 1 . 12 ' <nl> } <nl> + / / PLUGIN GRADLE EXTENSIONS START <nl> + / / PLUGIN GRADLE EXTENSIONS END <nl> + <nl> ext . multiarch = false <nl> android { <nl> 
mmm a / modules / sdk / gradle - plugins - workspace / samples / build . gradle <nl> ppp b / modules / sdk / gradle - plugins - workspace / samples / build . gradle <nl> buildscript { <nl> } <nl> repositories { <nl> + mavenLocal ( ) <nl> + <nl> maven { <nl> url " http : / / cdn . repository . liferay . com / nexus / content / groups / public " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> coverageReportDir = file ( " $ buildDir / reports / cobertura " ) <nl> } <nl> } <nl> + <nl> + wrapper { <nl> + gradleVersion = ' 1 . 7 ' <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / simplecropview - sample / build . gradle <nl> ppp b / simplecropview - sample / build . gradle <nl> android { <nl> } <nl> ext { <nl> - supportLibraryVersion = ' 23 . 1 . 1 ' <nl> + supportLibraryVersion = ' 23 . 0 . 1 ' <nl> permissionsDispatcherVersion = ' 2 . 1 . 2 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 28 . Final ' <nl> + nettyVersion = ' 4 . 0 . 29 . Final ' <nl> slf4jVersion = ' 1 . 7 . 12 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 5 . 4 ' <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - rc4 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 0 - rc5 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> buildscript { <nl> repositories { <nl> jcenter ( ) <nl> - maven { <nl> + maven { <nl> url ' https : / / oss . sonatype . org / content / repositories / snapshots / ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' com . android . library ' <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . theartofdev . edmodo ' <nl> PUBLISH_ARTIFACT_ID = ' android - image - cropper ' <nl> - PUBLISH_VERSION = ' 1 . 1 . 1 ' <nl> + PUBLISH_VERSION = ' 1 . 2 . 0 ' <nl> / / gradlew clean build generateRelease <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> sourceSets { <nl> } <nl> } <nl> + test { <nl> + testLogging { <nl> + exceptionFormat = ' full ' <nl> + } <nl> + } <nl> + <nl> jar { <nl> manifest { <nl> attributes ' Implementation - Title ' : ' hamcrest - all ' , <nl> 
mmm a / gradle / javaModule . gradle <nl> ppp b / gradle / javaModule . gradle <nl> if ( project . path ! = " : ratpack - benchmark " ) { <nl> } <nl> } <nl> - javadoc { <nl> + tasks . withType ( Javadoc ) { <nl> options . encoding = " utf - 8 " <nl> options . docEncoding = " utf - 8 " <nl> options . charSet = " utf - 8 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : hive ' ) { <nl> all * . exclude group : ' eigenbase ' , module : ' eigenbase - properties ' <nl> } <nl> + test { <nl> + onlyIf { JavaVersion . current ( ) . isJava7Compatible ( ) } <nl> + } <nl> + <nl> dependencies { <nl> compile project ( ' : core ' ) <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> compile " com . android . support : appcompat - v7 : 23 . 0 . 1 " <nl> + compile " com . android . support : design : 23 . 0 . 1 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> idea { <nl> } <nl> ideaModule . dependsOn extractNatives <nl> + eclipseClasspath . dependsOn extractNatives <nl> + <nl> sourceCompatibility = 1 . 6 <nl> / / version = ' 0 . 5 . 0 ' / / TODO : Disabled version tagging until we actually have something solid to do with it ( was breaking old artifact links ) <nl> buildDir = ' target ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 10 . 18 ' <nl> httpComponentVersion = ' 4 . 3 . 6 ' <nl> - jsonpathVersion = ' 1 . 2 . 0 ' <nl> + jsonpathVersion = ' 2 . 0 . 0 ' <nl> freemarkerVersion = ' 2 . 3 . 22 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> abortOnError false <nl> } <nl> + packagingOptions { <nl> + exclude " META - INF / LICENSE . txt " <nl> + exclude " META - INF / NOTICE . txt " <nl> + } <nl> + <nl> buildTypes { <nl> release { <nl> buildConfigField " String " , " APP_PN_KEY " , " \ " org . wordpress . android . playstore \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> testCompile project ( ' : groovy - ant ' ) <nl> testCompile project ( ' : groovy - test ' ) <nl> - testCompile project ( ' : groovy - json ' ) <nl> } <nl> ext . generatedDirectory = " $ { buildDir } / generated - sources " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> def getGitVersion ( ) { <nl> args ' describe ' , ' - - tags ' , ' - - always ' , ' - - dirty ' <nl> standardOutput = os <nl> } <nl> - outputAsString = os . toString ( ) . substring ( 1 ) <nl> + outputAsString = os . toString ( ) . substring ( 1 ) . trim ( ) <nl> } <nl> return outputAsString <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> project . ext { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( ! project . hasProperty ( ' sonatypeRepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 1 . 0 . 2 " <nl> + version = " 1 . 0 . 4 " <nl> group = " com . facebook . conceal " <nl> configurations { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> clean { <nl> delete ( docs . destinationDir , libs . destinationDir ) <nl> } <nl> + task install ( dependsOn : [ populateDependencies , scriptsJar ] ) <nl> + <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 245 <nl> - versionName ' 3 . 3 . 27 ' <nl> + versionCode 246 <nl> + versionName ' 3 . 3 . 28 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task installGroovy ( type : Sync , dependsOn : distBin ) { <nl> into installDir <nl> } <nl> - task dist ( dependsOn : [ distBin , distSrc , distDoc ] ) { <nl> + task dist ( dependsOn : [ distBin / * , distSrc , distDoc * / ] ) { <nl> description = ' Generates the binary , sources and documentation distributions ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 5 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 6 . + ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 17 <nl> - versionName " 1 . 4 " <nl> + versionCode 18 <nl> + versionName " 1 . 5 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / gradle / coverage . gradle <nl> ppp b / gradle / coverage . gradle <nl> cobertura . coverageFormats = [ ' html ' , ' xml ' ] / / coveralls plugin depends on xml format report <nl> / / cobertura . coverageIgnoreTrivial = true <nl> - coveralls . sourceDirs = [ ' src ' ] / / workaround for https : / / github . com / stevesaliman / gradle - cobertura - plugin / issues / 53 <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " com . sdsmdg . demoexample " <nl> - minSdkVersion 9 <nl> + minSdkVersion 11 <nl> targetSdkVersion 24 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> 
mmm a / modules / settings . gradle <nl> ppp b / modules / settings . gradle <nl> FileTree fileTree = fileTree ( rootDir ) { <nl> exclude " * * / bin / " <nl> exclude " sdk / * / samples / " <nl> + exclude " sdk / module - templates / classes / " <nl> exclude " sdk / module - templates / src / " <nl> if ( Boolean . getBoolean ( " portal . build " ) ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> versionCode = 237 <nl> - versionName = ' 12 . 2 - beta1 ' <nl> + versionName = ' 12 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> if ( isCloudCi ) { <nl> doFirst { <nl> maxParallelForks 1 <nl> + forkEvery 10 <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 79 <nl> - versionName " 1 . 5 . 1 " <nl> + versionCode 80 <nl> + versionName " 1 . 5 . 2 " <nl> } <nl> compileOptions { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> project ( ' : wrapper ' ) , <nl> project ( ' : baseServices ' ) , <nl> project ( ' : baseServicesGroovy ' ) , <nl> + project ( ' : dependencyManagement ' ) , <nl> project ( ' : messaging ' ) , <nl> project ( ' : processServices ' ) , <nl> project ( ' : resources ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - alpha6 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15154 <nl> - versionName = ' 27 ' <nl> + versionCode = 15155 <nl> + versionName = ' 27 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' com . jfrog . artifactory - upload ' <nl> group = ' com . sk89q . worldedit ' <nl> - version = ' 6 . 0 . 2 - SNAPSHOT ' <nl> + version = ' 6 . 1 ' <nl> ext . internalVersion = version + " ; " + gitCommitHash <nl> sourceCompatibility = 1 . 6 <nl> 
mmm a / h2o - web / build . gradle <nl> ppp b / h2o - web / build . gradle <nl> compileAndInstallDocFiles . dependsOn " : h2o - docs : build " <nl> build . dependsOn compileAndInstallDocFiles <nl> / / Hook clean stage <nl> - clean . dependsOn deleteFlowFromWebRoot , deleteBowerModules , deleteNodeModules , cleanUpSmokeTest , deleteGenModelJarFromWebRoot , deleteDocFiles <nl> + clean . dependsOn deleteFlowFromWebRoot , cleanUpSmokeTest , deleteGenModelJarFromWebRoot , deleteDocFiles <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 30 <nl> + versionCode 31 <nl> versionName " 2 . 0 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> dependencies { <nl> / / used to fill the RecyclerView with the items <nl> / / and provides single and multi selection , expandable items <nl> / / https : / / github . com / mikepenz / FastAdapter <nl> - compile ' com . mikepenz : fastadapter : 1 . 5 . 5 @ aar ' <nl> + compile ' com . mikepenz : fastadapter : 1 . 5 . 8 @ aar ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> - import org . gradle . plugins . ide . eclipse . model . ProjectDependency <nl> - <nl> buildscript { <nl> repositories { <nl> maven { url " http : / / repo . springsource . org / plugins - release " } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> dependencies { <nl> / / used to fill the RecyclerView with the DrawerItems <nl> / / and provides single and multi selection , expandable items <nl> / / https : / / github . com / mikepenz / FastAdapter <nl> - compile ' com . mikepenz : fastadapter : 1 . 5 . 1 @ aar ' <nl> + compile ' com . mikepenz : fastadapter : 1 . 5 . 2 @ aar ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects <nl> sourceCompatibility = 1 . 6 <nl> + tasks . test . useTestNG ( ) <nl> + <nl> / / GRADLE - 2087 workaround , perform after java plugin <nl> status = rootProject . status <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> sourceCompatibility = 1 . 6 <nl> group = ' com . github . tomakehurst ' <nl> - version = 1 . 11 <nl> + version = 1 . 12 <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task distDoc ( type : Zip , dependsOn : doc ) { <nl> } <nl> task syncDoc ( type : Copy , dependsOn : doc ) { <nl> + inputs . files javadoc . outputs . files <nl> + inputs . files groovydoc . outputs . files <nl> + <nl> destinationDir ( file ( " $ buildDir / html " ) ) <nl> into ( ' api ' ) { <nl> from javadoc . destinationDir <nl> 
mmm a / subprojects / distributions / distributions . gradle <nl> ppp b / subprojects / distributions / distributions . gradle <nl> ext { <nl> } <nl> into ( ' lib ' ) { <nl> from rootProject . configurations . runtime <nl> - from rootProject . configurations . distributionOnly <nl> + from rootProject . configurations . distributionOnly - rootProject . configurations . runtime <nl> into ( ' plugins ' ) { <nl> from rootProject . configurations . gradlePlugins - rootProject . configurations . runtime <nl> } <nl> 
mmm a / core / build . gradle <nl> ppp b / core / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion androidMinSdkVersionProp <nl> targetSdkVersion androidTargetSdkVersionProp <nl> - versionCode Integer . valueOf ( androidVersionCodeProp ) <nl> - versionName version <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> buildToolsVersion " 21 . 1 . 1 " <nl> defaultConfig { <nl> + applicationId " io . github . izzyleung . zhihudailypurify " <nl> minSdkVersion 15 <nl> targetSdkVersion 21 <nl> versionCode 16 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 221 <nl> + versionCode = 222 <nl> versionName = ' 12 - beta6 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> - ext . supportVersion = ' 24 . 0 . 1 ' <nl> + ext . supportVersion = ' 24 . 1 . 0 ' <nl> ext . extraVersion = 34 <nl> ext . supportRepoOut = ' ' <nl> ext . buildToolsVersion = ' 23 . 0 . 2 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15134 <nl> - versionName = ' 25 ' <nl> + versionCode = 15135 <nl> + versionName = ' 25 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 15 <nl> targetSdkVersion 22 <nl> - versionCode 2 <nl> - versionName " 0 . 4 " <nl> + versionCode 3 <nl> + versionName " 0 . 9 " <nl> resValue " string " , " tray__authority " , " com . example . preferences " <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task installGroovy ( type : Sync , dependsOn : distBin ) { <nl> into installDir <nl> } <nl> - task dist ( dependsOn : [ distBin / * , distSrc , distDoc * / ] ) { <nl> + task dist ( dependsOn : [ distBin , distSrc , distDoc ] ) { <nl> description = ' Generates the binary , sources and documentation distributions ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> compileOptions { <nl> - sourceCompatibility JavaVersion . VERSION_1_5 <nl> - targetCompatibility JavaVersion . VERSION_1_5 <nl> + sourceCompatibility JavaVersion . VERSION_1_7 <nl> + targetCompatibility JavaVersion . VERSION_1_7 <nl> } <nl> productFlavors { <nl> 
mmm a / actor - sdk / sdk - core - android / android - app / build . gradle <nl> ppp b / actor - sdk / sdk - core - android / android - app / build . gradle <nl> android { <nl> } <nl> } <nl> - compileOptions { <nl> - sourceCompatibility 1 . 6 <nl> - targetCompatibility 1 . 6 <nl> - } <nl> - <nl> lintOptions { <nl> abortOnError false <nl> } <nl> 
mmm a / core / build . gradle <nl> ppp b / core / build . gradle <nl> dependencies { <nl> - compile project ( " : bootstrap " ) <nl> + compile project ( " : bootstrap " ) , project ( " : spring " ) <nl> } <nl> jar . appendix = ' core ' <nl> \ No newline at end of file <nl> 
mmm a / subprojects / plugins / plugins . gradle <nl> ppp b / subprojects / plugins / plugins . gradle <nl> dependencies { <nl> compile libraries . junit <nl> compile libraries . slf4j_api <nl> compile ' org . testng : testng : 6 . 3 . 1 ' <nl> + compile files ( Jvm . current ( ) . toolsJar ) / / needed by SunJavaCompiler <nl> runtime libraries . commons_cli <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha3 ' <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - rc2 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> options . compilerArgs < < " - Xlint : unchecked " < < " - Xlint : deprecation " <nl> } <nl> + tasks . withType ( Pmd ) { <nl> + exclude " com / netflix / servo / jsr166e / * " <nl> + } <nl> + <nl> test { <nl> useTestNG ( ) <nl> options . excludeGroups = [ ' aws ' ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11262 <nl> - versionName = ' 14 - beta5 ' <nl> + versionCode = 11263 <nl> + versionName = ' 14 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / subprojects / model - core / model - core . gradle <nl> ppp b / subprojects / model - core / model - core . gradle <nl> apply plugin : " groovy " <nl> dependencies { <nl> compile libraries . slf4j_api <nl> + compile project ( ' : baseServices ' ) <nl> compile project ( ' : baseServicesGroovy ' ) <nl> + compile libraries . groovy <nl> + compile libraries . guava <nl> compile libraries . commons_lang <nl> compile libraries . jcip <nl> compile libraries . asm <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> buildToolsVersion project . ANDROID_BUILD_TOOLS_VERSION <nl> defaultConfig { <nl> - applicationId " com . rengwuxian . materialedittext " <nl> minSdkVersion 7 <nl> targetSdkVersion Integer . parseInt ( project . ANDROID_BUILD_SDK_VERSION ) <nl> / / versionCode 1 <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 13 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 13 . + ' <nl> } <nl> } <nl> apply plugin : ' com . android . application ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 44 <nl> + versionCode 45 <nl> versionName " 1 . 0 " <nl> } <nl> 
mmm a / UltimateAndroidGradle / demoofui / build . gradle <nl> ppp b / UltimateAndroidGradle / demoofui / build . gradle <nl> dependencies { <nl> compile project ( ' : ultimateandroidui ' ) <nl> compile project ( ' : ultimateandroiduiwidget ' ) <nl> compile project ( ' : ultimateandroiduianimation ' ) <nl> + compile project ( ' : ultimateandroiduicomponent ' ) <nl> / / compile ' com . marshalchen . ultimateandroid : ultimateandroidui : 0 . 6 . 0 ' <nl> } <nl> 
mmm a / Gradle / ConstantsSecure / build . gradle <nl> ppp b / Gradle / ConstantsSecure / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 8 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 9 . 0 ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> minSdkVersion 9 <nl> / / noinspection OldTargetApi <nl> targetSdkVersion 23 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 56 <nl> + versionCode 57 <nl> versionName " 2 . 9 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 53 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> task jacocoTestReport ( type : JacocoReport , dependsOn : " testDebug " ) { <nl> } <nl> } <nl> } <nl> + <nl> + coveralls { <nl> + jacocoReportPath = " $ { buildDir } / reports / jacoco / jacocoTestReport / jacocoTestReport . xml " <nl> + } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include \ <nl> " ratpack - jackson " , <nl> " ratpack - reactor " , <nl> " ratpack - codahale " , <nl> - " ratpack - h2 " <nl> + " ratpack - h2 " , <nl> " ratpack - thymeleaf " <nl> include \ <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 24 <nl> - buildToolsVersion " 24 . 0 . 0 " <nl> + buildToolsVersion " 24 . 0 . 2 " <nl> defaultConfig { <nl> applicationId " com . aurelhubert . ahbottomnavigation . demo " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> } <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> apply from : ' gradle - mvn - push . gradle ' <nl> dependencies { <nl> - compile ' com . mikepenz . iconics : library : 0 . 7 . 0 ' <nl> + compile ' com . mikepenz . iconics : library : 0 . 7 . 2 ' <nl> } <nl> 
mmm a / eclipse - compile / appcompat / build . gradle <nl> ppp b / eclipse - compile / appcompat / build . gradle <nl> apply plugin : ' com . android . library ' <nl> dependencies { <nl> compile files ( ' libs / android - support - v4 . jar ' ) <nl> + compile files ( ' libs / android - support - v7 - appcompat . jar ' ) <nl> } <nl> android { <nl> 
mmm a / samples / SupportPreferenceDemos / build . gradle <nl> ppp b / samples / SupportPreferenceDemos / build . gradle <nl> android { <nl> main . res . srcDirs = [ ' res ' ] <nl> } <nl> + lintOptions { <nl> + / / TODO : fix errors and reenable . <nl> + abortOnError false <nl> + } <nl> + <nl> compileOptions { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> 
mmm a / grails - test - suite - persistence / build . gradle <nl> ppp b / grails - test - suite - persistence / build . gradle <nl> dependencies { <nl> } <nl> test { <nl> maxParallelForks = 2 <nl> - jvmArgs = [ ' - Xmx1024M ' , ' - XX : MaxPermSize = 256m ' ] <nl> + jvmArgs = [ ' - Xmx2048M ' , ' - XX : MaxPermSize = 256m ' ] <nl> } <nl> 
mmm a / org . springsource . loaded / build . gradle <nl> ppp b / org . springsource . loaded / build . gradle <nl> group = " org . springsource . loaded " <nl> - version = ' 1 . 1 . 1 - dev ' <nl> + version = ' 1 . 1 . 4 - dev ' <nl> jar . baseName = ' spring - loaded ' <nl> compileJava { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 171 <nl> - versionName " 3 . 1 . 0 . 14 " <nl> + versionCode 172 <nl> + versionName " 3 . 1 . 1 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' grails - aether ' , <nl> / / POM / BOMs <nl> ' grails - dependencies ' , <nl> + ' grails - bom ' , <nl> / / Plugins <nl> ' grails - plugin - async ' , <nl> 
mmm a / release . gradle <nl> ppp b / release . gradle <nl> afterEvaluate { project - > <nl> artifacts { <nl> archives androidJavadocJar <nl> archives androidSourcesJar <nl> - archives jarRelease <nl> } <nl> version = VERSION_NAME <nl> 
mmm a / gradle / classycle . gradle <nl> ppp b / gradle / classycle . gradle <nl> sourceSets . all { sourceSet - > <nl> } <nl> } <nl> check . dependsOn taskName <nl> + codeQuality . dependsOn taskName <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { subProject - > <nl> defaultTasks ' build ' <nl> group = ' org . hibernate ' <nl> - version = ' 4 . 0 . 0 . CR2 ' <nl> + version = ' 4 . 0 . 0 - SNAPSHOT ' <nl> / / minimize changes , at least for now ( gradle uses ' build ' by default ) . . <nl> buildDir = " target " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> group = ' com . augusttechgroup ' <nl> - version = ' 0 . 5 ' <nl> + version = ' 0 . 6 - SNAPSHOT ' <nl> } <nl> apply from : " idea / idea . gradle " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> * limitations under the License . <nl> * / <nl> - group = ' org . gradle . plugin ' <nl> + group = ' org - gradle - plugin ' / / dashes while it ' s only deployed at GitHub <nl> version = ' 0 . 1 . 0 - SNAPSHOT ' <nl> isSnapshot = version . endsWith ( " SNAPSHOT " ) <nl> 
mmm a / server / build . gradle <nl> ppp b / server / build . gradle <nl> task inlinePartials { <nl> into inlinedPartialsDir <nl> } <nl> - if ( ! org . gradle . internal . os . OperatingSystem . current ( ) . isWindows ( ) ) { <nl> + if ( ! project . hasProperty ( ' fastBuild ' ) ) { <nl> exec { <nl> standardOutput = System . out <nl> errorOutput = System . err <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task syncDoc ( type : Copy , dependsOn : doc ) { <nl> task distSrc ( type : Zip ) { <nl> appendix = ' src ' <nl> + classifier = ' incubating ' <nl> into ( " groovy - $ version " ) <nl> with srcSpec <nl> } <nl> 
mmm a / grails - web / build . gradle <nl> ppp b / grails - web / build . gradle <nl> dependencies { <nl> exclude group : ' commons - logging ' , module : ' commons - logging ' <nl> } <nl> compile ' opensymphony : sitemesh : 2 . 4 ' <nl> - compile " junit : junit : $ { junitVersion } " <nl> compile " org . springframework : spring - webmvc : $ { springVersion } " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 227 <nl> - versionName = ' 12 - beta7 ' <nl> + versionCode = 228 <nl> + versionName = ' 12 - beta8 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / spock - specs / specs . gradle <nl> ppp b / spock - specs / specs . gradle <nl> gradle . addListener ( new TaskExecutionListener ( ) { <nl> } <nl> } <nl> } ) <nl> + <nl> + task ( console , dependsOn : ' classes ' , type : JavaExec ) { <nl> + main = ' groovy . ui . Console ' <nl> + classpath = sourceSets . test . runtimeClasspath <nl> + } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . afollestad . materialdialogssample " <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 72 <nl> + versionCode 73 <nl> versionName " 0 . 6 . 2 . 1 " <nl> } <nl> lintOptions { <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> rootProject . name = ' hystrix ' <nl> - include ' hystrix - core ' , ' hystrix - examples ' , ' hystrix - contrib / hystrix - request - servlet ' <nl> + include ' hystrix - core ' , ' hystrix - examples ' , ' hystrix - contrib : hystrix - request - servlet ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> sourceSets { <nl> main { <nl> manifest . srcFile ' AndroidManifest . xml ' <nl> + res . srcDirs = [ ' res ' ] <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 4 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 5 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> - configurations { <nl> - javadoc <nl> - } <nl> - <nl> subprojects { <nl> apply plugin : ' java ' <nl> apply plugin : ' maven ' <nl> task docsJar ( type : Jar , dependsOn : docs ) { <nl> from docs . destinationDir <nl> } <nl> + artifacts { <nl> + archives docsJar <nl> + } <nl> + <nl> 
mmm a / api / build . gradle <nl> ppp b / api / build . gradle <nl> apply plugin : " signing " <nl> jar . baseName = " seriesguide - api " <nl> group = " com . uwetrottmann . seriesguide " <nl> - version = " 1 . 0 . 1 " <nl> + version = " 1 . 1 . 0 - SNAPSHOT " <nl> / / load properties file <nl> def Properties props = new Properties ( ) <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : app ' , ' : library ' <nl> + include ' : app ' , ' : library ' , ' : material - spinner - 1 . 0 . 5 ' <nl> 
mmm a / subprojects / launcher / launcher . gradle <nl> ppp b / subprojects / launcher / launcher . gradle <nl> dependencies { <nl> } <nl> if ( ! javaVersion . java6Compatible ) { <nl> - sourceSets . main . groovy . exclude ' * * / jdk6 / * * ' <nl> + sourceSets . main . java . exclude ' * * / jdk6 / * * ' <nl> } <nl> useTestFixtures ( ) <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> ext { <nl> javaVersion = JavaVersion . VERSION_1_7 <nl> GROUP = ' com . squareup . leakcanary ' <nl> - VERSION_NAME = " 1 . 3 " <nl> + VERSION_NAME = " 1 . 3 . 1 - SNAPSHOT " <nl> POM_PACKAGING = " pom " <nl> POM_DESCRIPTION = " Leak Canary " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 25 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 62 <nl> + versionCode 63 <nl> versionName " 3 . 1 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 62 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : library ' ) <nl> - compile ( ' com . mikepenz . aboutlibraries : library : 4 . 5 . 0 @ aar ' ) { <nl> + compile ( ' com . mikepenz . aboutlibraries : library : 4 . 5 . 5 @ aar ' ) { <nl> transitive = true <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 2 . 0 - alpha3 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> apply plugin : ' android - library ' <nl> dependencies { <nl> - compile ' com . github . castorflex . smoothprogressbar : library : 0 . 4 . + ' <nl> + compile ' com . github . castorflex . smoothprogressbar : library : 0 . 4 . + @ aar ' <nl> } <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> project ( ' : baseServices ' ) , <nl> project ( ' : baseServicesGroovy ' ) , <nl> project ( ' : messaging ' ) , <nl> + project ( ' : processServices ' ) , <nl> project ( ' : resources ' ) <nl> ] <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> exclude group : ' com . android . support ' , module : ' support - v4 ' <nl> } <nl> - testCompile ' com . android . support : support - v4 : 21 . 0 . 2 ' <nl> - <nl> testCompile ' org . mockito : mockito - core : 1 . 10 . 19 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 1 . 0 ' <nl> + version = ' 2 . 1 . 1 ' <nl> def jarVersion = version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> compileSdkVersion = 23 <nl> - buildToolsVersion = ' 23 . 0 . 1 ' <nl> + buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> versionCode = 15145 <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 237 <nl> - versionName ' 3 . 3 . 19 ' <nl> + versionCode 238 <nl> + versionName ' 3 . 3 . 20 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : testrunner : AndroidJunitRunnerSample : app ' <nl> include ' : unittesting : BasicSample : app ' <nl> include ' : unittesting : BasicUnitAndroidTest : app ' <nl> include ' : integrationtesting : ServiceTestRuleSample : app ' <nl> + include ' : espresso : IntentsAdvancedSample : app ' <nl> 
mmm a / subprojects / dependency - management / dependency - management . gradle <nl> ppp b / subprojects / dependency - management / dependency - management . gradle <nl> dependencies { <nl> testCompile libraries . groovy <nl> - integTestRuntime project ( " : plugins " ) <nl> integTestRuntime project ( " : ivy " ) <nl> integTestRuntime project ( " : maven " ) <nl> / / this dependency is necessary to run IvySFtpResolverIntegrationTest on ibm jdk <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> def versionMajor = 0 <nl> def versionMinor = 2 <nl> - def versionPatch = 1 <nl> + def versionPatch = 2 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15077 <nl> - versionName = ' 21 . 0 . 2 ' <nl> + versionCode = 15078 <nl> + versionName = ' 21 . 0 . 3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 14 . 4 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 0 . 0 - rc4 ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 40 <nl> + versionCode 41 <nl> versionName " 2 . 5 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15152 <nl> - versionName = ' 27 - beta3 ' <nl> + versionCode = 15153 <nl> + versionName = ' 27 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> android { <nl> release <nl> } <nl> + productFlavors { <nl> + / / for saving build time during debugging <nl> + lollipop { <nl> + minSdkVersion 21 <nl> + } <nl> + gb { <nl> + } <nl> + } <nl> + <nl> buildTypes { <nl> release { <nl> minifyEnabled false <nl> 
mmm a / modules / third - party / org - apache - felix - configadmin / build . gradle <nl> ppp b / modules / third - party / org - apache - felix - configadmin / build . gradle <nl> dependencies { <nl> jar { <nl> exclude " OSGI - INF / permissions . perm " <nl> + includeEmptyDirs = false <nl> from zipTree ( <nl> { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 25 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 63 <nl> + versionCode 64 <nl> versionName " 3 . 1 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 62 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> allprojects { <nl> + <nl> + version = VERSION_NAME <nl> + group = GROUP <nl> + <nl> repositories { <nl> jcenter ( ) <nl> } <nl> } <nl> + <nl> + def isReleaseBuild ( ) { <nl> + return version . contains ( " SNAPSHOT " ) = = false <nl> + } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> compile ' org . slf4j : slf4j - api : 1 . 6 . 3 ' <nl> testCompile group : ' junit ' , name : ' junit ' , version : ' 4 . 10 ' <nl> + testRuntime ' org . slf4j : slf4j - simple : 1 . 6 . 3 ' <nl> } <nl> task copyToLib ( type : Copy ) { <nl> 
mmm a / subprojects / tooling - api / tooling - api . gradle <nl> ppp b / subprojects / tooling - api / tooling - api . gradle <nl> forkingIntegTest { <nl> } <nl> } <nl> + parallelIntegTest { <nl> + enabled = false / / tooling integ tests use parallel settings , don ' t run <nl> + } <nl> + <nl> daemonIntegTest { <nl> enabled = false / / tooling integ tests use daemon anyway , don ' t rerun <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> project ( it ) <nl> } <nl> publishedProjects = [ <nl> + project ( ' : logging ' ) , <nl> project ( ' : core ' ) , <nl> project ( ' : toolingApi ' ) , <nl> project ( ' : wrapper ' ) , <nl> 
mmm a / subprojects / plugins / plugins . gradle <nl> ppp b / subprojects / plugins / plugins . gradle <nl> configurations { <nl> } <nl> if ( ! Jvm . current ( ) . java6Compatible ) { <nl> - sourceSets . all . exclude ' * * / jdk6 / * * ' <nl> + sourceSets . all { <nl> + exclude ' * * / jdk6 / * * ' <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15064 <nl> - versionName = ' 20 . 0 . 1 ' <nl> + versionCode = 15070 <nl> + versionName = ' 20 . 1 . 0 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 24 <nl> - versionCode 54 <nl> + versionCode 55 <nl> versionName " 2 . 9 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 53 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> buildscript { <nl> repositories { <nl> jcenter ( ) <nl> + mavenCentral ( ) <nl> maven { url ' https : / / maven . fabric . io / public ' } <nl> mavenLocal ( ) <nl> } <nl> 
mmm a / rajawali / maven_push . gradle <nl> ppp b / rajawali / maven_push . gradle <nl> boolean isLocal ( ) { <nl> } <nl> boolean isRelease ( ) { <nl> - return ( isTag ( ) | | getBranchName ( ) . equals ( " master " ) ) & & ! VERSION_NAME . contains ( " SNAPSHOT " ) <nl> + return isTag ( ) | | getBranchName ( ) . equals ( " master " ) <nl> } <nl> afterEvaluate { project - > <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - beta1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - beta2 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task docsJar ( type : Jar , dependsOn : docGeneratingFilesJar , description : ' Package <nl> appendix = " docs " <nl> metaInf handlersAndSchemasMetaInf <nl> from mainClassesIncludeSpec ( " grails / doc / * * " , " * * / groovy / grails / documentation / * * " ) <nl> - println docGeneratingFilesJar . archivePath <nl> from docGeneratingFilesJar . archivePath <nl> osgify = true <nl> mavenArtifact = true <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> } <nl> - configure ( subprojects . findAll { it . name = = ' jphp - core ' | | it . name = = ' jphp - swing ' } ) { <nl> + configure ( [ project ( ' : jphp - core ' ) , project ( ' : jphp - swing ' ) ] ) { <nl> task deploy < < { <nl> ext { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> jmockVersion = ' 1 . 2 . 0 ' <nl> logbackVersion = ' 1 . 1 . 2 ' <nl> log4jVersion = ' 1 . 2 . 17 ' <nl> - log4j2Version = ' 2 . 4 ' <nl> + log4j2Version = ' 2 . 3 ' <nl> luceneVersion = ' 4 . 7 . 2 ' <nl> openbeansVersion = ' 1 . 0 ' <nl> openejbVersion = ' 1 . 0 ' <nl> 
mmm a / Application / LinkBubble / build . gradle <nl> ppp b / Application / LinkBubble / build . gradle <nl> buildscript { <nl> / / Manifest version information ! <nl> def versionMajor = 1 <nl> def versionMinor = 4 <nl> - def versionPatch = 2 <nl> + def versionPatch = 3 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> if ( buildMode = = " dexguard " ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> versionCode = 233 <nl> - versionName = ' 12 - beta10 ' <nl> + versionName = ' 12 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> / / Establish version and status <nl> - ext . releaseVersion = ' 0 . 2 . 1 ' <nl> + ext . releaseVersion = ' 0 . 2 . 2 ' <nl> ext . githubProjectName = ' archaius ' <nl> / / group = ' com . netflix . archaius ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 24 <nl> minSdkVersion = 14 <nl> targetSdkVersion = 24 <nl> - supportLibraryVersion = ' 24 . 2 . 0 ' <nl> + supportLibraryVersion = ' 24 . 2 . 1 ' <nl> } <nl> 
mmm a / Application / LinkBubble / build . gradle <nl> ppp b / Application / LinkBubble / build . gradle <nl> buildscript { <nl> } <nl> / / Manifest version information ! <nl> - def versionMajor = 1 <nl> - def versionMinor = 0 <nl> + def versionMajor = 0 <nl> + def versionMinor = 9 <nl> def versionPatch = 0 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' rxpermissions ' <nl> - project ( ' : rxpermissions ' ) . projectDir = new File ( settingsDir , ' / lib ' ) <nl> - project ( ' : rxpermissions ' ) . name = ' rxpermissions ' <nl> + include ' lib ' <nl> + project ( ' : lib ' ) . name = ' rxpermissions ' <nl> include ' sample ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> plugins { <nl> defaultTasks ' clean ' , ' build ' , ' shadowJar ' , ' install ' <nl> def sbeGroup = ' uk . co . real - logic ' <nl> - def sbeVersion = ' 1 . 3 . 6 - RC3 - SNAPSHOT ' <nl> + def sbeVersion = ' 1 . 4 . 0 - RC4 - SNAPSHOT ' <nl> group = sbeGroup <nl> version = sbeVersion <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta4 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / PerformanceTests / Cupboard / build . gradle <nl> ppp b / PerformanceTests / Cupboard / build . gradle <nl> android { <nl> testInstrumentationRunner ' android . test . InstrumentationTestRunner ' <nl> - buildConfigField " boolean " , " RUN_PERFORMANCE_TESTS " , " true " <nl> + buildConfigField " boolean " , " RUN_PERFORMANCE_TESTS " , " false " <nl> } <nl> } <nl> 
mmm a / subprojects / gradle - docs / docs . gradle <nl> ppp b / subprojects / gradle - docs / docs . gradle <nl> class RemoteLocations { <nl> } <nl> String getDocsRemoteDir ( ) { <nl> - version . isRelease ( ) ? version . toString ( ) : ' latest ' <nl> + ( version . isRelease ( ) ? version . toString ( ) : ' latest ' ) + ' / docs ' <nl> } <nl> String getJavadocUrl ( ) { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " com . github . glomadrian . pathloading " <nl> minSdkVersion 15 <nl> targetSdkVersion 23 <nl> - versionCode 1 <nl> - versionName " 1 . 0 " <nl> + versionCode 11 <nl> + versionName " 1 . 1 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> classpath ' com . github . jengelman . gradle . plugins : shadow : 0 . 8 ' <nl> + classpath ' com . puppycrawl . tools : checkstyle : 5 . 8 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> repositories { <nl> mavenCentral ( ) <nl> - mavenLocal ( ) ; <nl> } <nl> dependencies { <nl> - classpath ' org . wordpress : wordpress - libraries : 1 . 0 . 0 ' <nl> + classpath ' com . automattic . android : gradle - wordpresslibraries : 1 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / h2o - zookeeper / build . gradle <nl> ppp b / h2o - zookeeper / build . gradle <nl> apply plugin : ' idea ' <nl> apply plugin : ' eclipse ' <nl> version = ' ' <nl> - sourceCompatibility = 1 . 7 <nl> - targetCompatibility = 1 . 7 <nl> + sourceCompatibility = 1 . 6 <nl> + targetCompatibility = 1 . 6 <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> idea { <nl> ideaActivateCopyright ( iprNode ) <nl> ideaActivateAnnotations ( iprNode ) <nl> ideaActivateGit ( iprNode ) <nl> - ideaExcludeLogbackGroovy ( iprNode ) <nl> + / / ideaExcludeLogbackGroovy ( iprNode ) <nl> ideaActivateGradle ( iprNode ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { subProject - > <nl> } <nl> } <nl> + <nl> + task release ( type : Task , dependsOn : ' release : release ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task javadocJar ( type : Jar , dependsOn : javadoc ) { <nl> from javadoc . destinationDir <nl> } <nl> - task javaVersion < < { <nl> - println ant . properties [ ' java . version ' ] <nl> - } <nl> - <nl> artifacts { <nl> archives sourcesJar , javadocJar <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 4 . 6 - rc - 1 " <nl> - versionCode 208 <nl> + versionName " 4 . 6 . 1 " <nl> + versionCode 213 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / util / build . gradle <nl> ppp b / util / build . gradle <nl> dependencies { <nl> sourceSets { <nl> main { java . srcDirs = [ ' src / main ' ] } <nl> + } <nl> + <nl> + tasks . withType ( Compile ) { <nl> + onlyIf { JavaVersion . current ( ) . isJava7 ( ) } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / spock - specs / specs . gradle <nl> ppp b / spock - specs / specs . gradle <nl> gradle . addListener ( new TaskExecutionListener ( ) { <nl> } <nl> } ) <nl> - task ( console , dependsOn : ' classes ' , type : JavaExec ) { <nl> + task groovyConsole ( type : JavaExec ) { <nl> main = ' groovy . ui . Console ' <nl> classpath = sourceSets . test . runtimeClasspath <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : WordPress ' , ' : WordPressUtils ' , ' : WordPressNetworking ' , ' : WordPressComRest ' , ' : WordPressGraphLib ' <nl> + include ' : WordPress ' , ' : WordPressUtils ' , ' : WordPressNetworking ' , ' : WordPressComRest ' , ' : WordPressGraphLib ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : libs : networking : WordPressNetworking ' <nl> include ' : libs : wpcomrest : WordPressComRest ' <nl> include ' : libs : graphview : WordPressGraphView ' <nl> include ' : libs : persistentedittext : PersistentEditText ' <nl> + include ' : libs : editor : editor ' <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> targetSdkVersion 23 <nl> buildConfigField " String " , " APP_PN_KEY " , " \ " org . wordpress . android . playstore \ " " <nl> - generatedDensities = [ ' hdpi ' , ' xhdpi ' , ' xxhdpi ' ] <nl> + vectorDrawables . generatedDensities = [ ' hdpi ' , ' xhdpi ' , ' xxhdpi ' ] <nl> } <nl> productFlavors { <nl> 
mmm a / android / sdk / build . gradle <nl> ppp b / android / sdk / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . hierynomus . license ' <nl> - version = " 1 . 5 . 1 . 6 " <nl> + version = " 1 . 5 . 1 . 9 " <nl> android { <nl> compileSdkVersion 23 <nl> 
mmm a / ratpack - benchmark / ratpack - benchmark . gradle <nl> ppp b / ratpack - benchmark / ratpack - benchmark . gradle <nl> description = " JMH project for writing micro benchmarks for any ratpack module . " <nl> idea { <nl> module { <nl> sourceDirs + = sourceSets . jmh . allSource . srcDirs <nl> + scopes . COMPILE . plus + = [ configurations . jmh ] <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / modules / apps / static / required - dependencies / required - dependencies / build . gradle <nl> ppp b / modules / apps / static / required - dependencies / required - dependencies / build . gradle <nl> deploy { <nl> deployDependencies { <nl> from configurations . provided <nl> + rename ( / javax . el - ( . + ) \ . jar / , " javax . el " + renameSuffix ) <nl> } <nl> deployTestLibs { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> allprojects { <nl> repositories { <nl> + mavenLocal ( ) <nl> mavenCentral ( ) / / maven { url : ' http : / / jcenter . bintray . com ' } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> ext { <nl> androidPlugin = ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> - minSdkVersion = 15 <nl> + minSdkVersion = 14 <nl> compileSdkVersion = 22 <nl> buildToolsVersion = ' 22 . 0 . 1 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> } <nl> + <nl> + if ( JavaVersion . current ( ) . isJava8Compatible ( ) ) { <nl> + tasks . withType ( Javadoc ) { <nl> + options . addStringOption ( ' Xdoclint : none ' , ' - quiet ' ) <nl> + } <nl> + } <nl> } <nl> apply from : " gradle / idea . gradle " <nl> 
mmm a / AIMSICD / build . gradle <nl> ppp b / AIMSICD / build . gradle <nl> android { <nl> applicationId " com . SecUpwN . AIMSICD " <nl> minSdkVersion 16 <nl> targetSdkVersion 22 <nl> - versionCode 42 <nl> + versionCode 43 <nl> testApplicationId " com . SecUpwN . AIMSICD . test " <nl> buildConfigField ' String ' , ' BUILD_NUMBER ' , ( getBuildNumber ( ) = = null ? ' null ' : " \ " $ { buildNumber } \ " " ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> defaultTasks ' build ' <nl> group = ' com . lmax ' <nl> - version = new Version ( major : 3 , minor : 3 , revision : 5 , stage : " rc2 " ) <nl> + version = new Version ( major : 3 , minor : 3 , revision : 5 ) <nl> ext { <nl> fullName = ' Disruptor Framework ' <nl> 
mmm a / config / gradle / common . gradle <nl> ppp b / config / gradle / common . gradle <nl> apply plugin : ' checkstyle ' <nl> apply plugin : ' pmd ' <nl> apply plugin : ' findbugs ' <nl> + sourceCompatibility = 1 . 8 <nl> + targetCompatibility = 1 . 8 <nl> + <nl> / / We use both Maven Central and our own Artifactory instance , which contains module builds , extra libs , and so on <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / gradle / dependencies . gradle <nl> ppp b / gradle / dependencies . gradle <nl> ext { <nl> versions . commons_io = ' commons - io : commons - io : 2 . 2 ' <nl> - versions . groovy = " 2 . 4 . 4 " <nl> + versions . groovy = " 2 . 4 . 6 " <nl> versions . bouncycastle = " 1 . 51 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15050 <nl> - versionName = ' 19 - beta1 ' <nl> + versionCode = 15051 <nl> + versionName = ' 19 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / android / sdk / build . gradle <nl> ppp b / android / sdk / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . hierynomus . license ' <nl> - version = " 1 . 5 . 1 . 9 " <nl> + version = " 1 . 5 . 2 . 4 " <nl> android { <nl> compileSdkVersion 23 <nl> 
mmm a / ratpack - manual / ratpack - manual . gradle <nl> ppp b / ratpack - manual / ratpack - manual . gradle <nl> buildscript { <nl> dependencies { <nl> testCompile apiModules <nl> + testRuntime " org . apache . ant : ant - nodeps : 1 . 8 . 1 " <nl> } <nl> apply from : " $ rootDir / gradle / markdown2book . gradle " <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> + buildscript { <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> + <nl> + dependencies { <nl> + classpath ' com . android . tools . build : gradle : 0 . 5 . + ' <nl> + } <nl> + } <nl> + <nl> apply plugin : ' android - library ' <nl> android { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 41 <nl> + versionCode 42 <nl> versionName " 2 . 5 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 198 <nl> + versionCode 199 <nl> versionName " 11 - beta1 " <nl> } <nl> beta { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 161 <nl> - versionName " 3 . 1 . 0 . 4 " <nl> + versionCode 162 <nl> + versionName " 3 . 1 . 0 . 5 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / requery - android / build . gradle <nl> ppp b / requery - android / build . gradle <nl> android { <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> } <nl> lintOptions { <nl> + abortOnError false <nl> disable ' InvalidPackage ' <nl> } <nl> } <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' com . android . library ' <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . theartofdev . edmodo ' <nl> PUBLISH_ARTIFACT_ID = ' android - image - cropper ' <nl> - PUBLISH_VERSION = ' 1 . 2 . 0 ' <nl> + PUBLISH_VERSION = ' 1 . 2 . 1 ' <nl> / / gradlew clean build generateRelease <nl> } <nl> 
mmm a / modules / apps / layout / layout - service / build . gradle <nl> ppp b / modules / apps / layout / layout - service / build . gradle <nl> dependencies { <nl> + compile group : " com . liferay . portal " , name : " portal - service " , version : liferay . portalVersion <nl> compile group : " org . osgi " , name : " org . osgi . compendium " , version : " 5 . 0 . 0 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' } ) { <nl> evaluationDependsOn ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> - version = ' 3 . 0 . 0 - SNAPSHOT ' <nl> + version = ' 3 . 0 . 0 ' <nl> sourceCompatibility = JavaVersion . VERSION_1_6 <nl> targetCompatibility = JavaVersion . VERSION_1_6 <nl> 
similarity index 100 % <nl> rename from rajawali / maven_push . gradle <nl> rename to maven_push . gradle <nl> mmm a / rajawali / build . gradle <nl> ppp b / rajawali / build . gradle <nl> dependencies { <nl> compile project . depSupportAnnotations <nl> } <nl> - apply from : ' maven_push . gradle ' <nl> + apply from : ' . . / maven_push . gradle ' <nl> 
mmm a / gradle / javaprojects . gradle <nl> ppp b / gradle / javaprojects . gradle <nl> task springSnapshotTest ( type : Test ) { <nl> junitXml . destination = project . file ( " $ buildDir / reports / spring - snapshot - tests / " ) <nl> } <nl> } <nl> - check . dependsOn springSnapshotTest <nl> dependencies { <nl> optional " commons - logging : commons - logging : $ commonsLoggingVersion " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> packageName " org . wordpress . android " <nl> versionName " 2 . 5 . 1 " <nl> - versionCode 84 <nl> + versionCode 85 <nl> minSdkVersion 9 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / integration / build . gradle <nl> ppp b / integration / build . gradle <nl> subprojects { <nl> from variant . javaCompile . destinationDir <nl> exclude " * * / R . class " <nl> exclude " * * / BuildConfig . class " <nl> + baseName " glide - $ { project . name } - integration " <nl> } <nl> jarTask . dependsOn variant . javaCompile <nl> artifacts . add ( ' archives ' , jarTask ) ; <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> publishing { <nl> } <nl> mockitoAll ( MavenPublication ) { <nl> artifactId ' mockito - all ' <nl> + artifact allJar <nl> artifact sourcesJar <nl> artifact javadocJar <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> apply from : ' gradle - mvn - push . gradle ' <nl> dependencies { <nl> - compile ' com . mikepenz . iconics : library : 0 . 7 . 2 ' <nl> + compile ' com . mikepenz : iconics : 1 . 0 . 0 ' <nl> } <nl> 
mmm a / LeonidsLib / build . gradle <nl> ppp b / LeonidsLib / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> apply plugin : ' com . jfrog . bintray ' <nl> - def versionName = ' 1 . 3 . 1 ' <nl> + def versionName = ' 1 . 3 . 2 ' <nl> android { <nl> compileSdkVersion 15 <nl> 
mmm a / osgi / modules / portal - registry / portal - registry - api / build . gradle <nl> ppp b / osgi / modules / portal - registry / portal - registry - api / build . gradle <nl> - project . ext . deployDir = project . hasProperty ( ' globalLibDir ' ) ? project . globalLibDir : null <nl> - <nl> + project . ext . deployDir = project . hasProperty ( ' globalLibDir ' ) ? project . globalLibDir : null <nl> \ No newline at end of file <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - vectorDrawables . useSupportLibrary = true <nl> buildConfigField " boolean " , " VISUAL_EDITOR_AVAILABLE " , " false " <nl> buildConfigField " boolean " , " IN_APP_BILLING_AVAILABLE " , " false " <nl> } <nl> 
mmm a / fml / build . gradle <nl> ppp b / fml / build . gradle <nl> uploadArchives { <nl> logger . info ( ' Publishing to files server ' ) <nl> mavenDeployer { <nl> - configuration = configurations . deployerJars <nl> + configuration = configurations . deployJars <nl> repository ( url : project . filesmaven . url ) { <nl> authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> jar { <nl> } <nl> javadoc { <nl> + options . encoding = ' UTF - 8 ' <nl> options . charSet = ' UTF - 8 ' <nl> source = [ <nl> project ( " Mixin " ) . sourceSets . main . java , <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15073 <nl> - versionName = ' 20 . 1 . 1 ' <nl> + versionCode = 15074 <nl> + versionName = ' 20 . 1 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> repositories { <nl> mavenCentral ( ) <nl> } <nl> - sourceCompatibility = 1 . 7 <nl> - targetCompatibility = 1 . 7 <nl> + sourceCompatibility = 1 . 6 <nl> + targetCompatibility = 1 . 6 <nl> class Compatibility { <nl> String version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> - shortVersion = ' 4 . 0 . 5 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 0 . 6 ' <nl> + isSnapshot = true <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( buildDir , ' documentation ' ) <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> + buildscript { <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> + dependencies { <nl> + classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> + } <nl> + } <nl> + <nl> apply plugin : ' com . android . application ' <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> nettyVersion = ' 4 . 0 . 24 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 7 ' <nl> + slf4jVersion = ' 1 . 7 . 9 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 4 . 4 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / bin / templates / project / build . gradle <nl> ppp b / bin / templates / project / build . gradle <nl> task wrapper ( type : Wrapper ) { <nl> gradleVersion = ' 1 . 12 ' <nl> } <nl> + / / PLUGIN GRADLE EXTENSIONS START <nl> + / / PLUGIN GRADLE EXTENSIONS END <nl> + <nl> ext . multiarch = false <nl> android { <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - alpha7 ' <nl> - isSnapshot = true <nl> - jxmppVersion = " 0 . 4 . 1 - alpha2 - SNAPSHOT " <nl> + shortVersion = ' 4 . 1 . 0 - beta1 ' <nl> + isSnapshot = false <nl> + jxmppVersion = ' 0 . 4 . 1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( " spring - expression " ) { <nl> project ( " spring - instrument " ) { <nl> description = " Spring Instrument " <nl> - dependencies { <nl> - compile ( project ( " : spring - core " ) ) <nl> - } <nl> - <nl> jar { <nl> manifest . attributes [ " Premain - Class " ] = <nl> " org . springframework . instrument . InstrumentationSavingAgent " <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 2 . 0 - rc2 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 5 . 0 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' & & it . name ! = ' mongo - java - driv <nl> / * Testing * / <nl> tasks . withType ( Test ) { <nl> + maxHeapSize = " 3g " <nl> maxParallelForks = 1 <nl> systemProperties ( <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : extensions : net ' <nl> include ' : testapp ' <nl> gradle . ext . versionCode = 10100 <nl> - gradle . ext . versionName = ' 1 . 1 . 0 - beta2 ' <nl> + gradle . ext . versionName = ' 1 . 1 . 0 - SNAPSHOT ' <nl> gradle . ext . bintrayRepo = ' Agera ' <nl> gradle . ext . bintrayName = ' agera ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15135 <nl> - versionName = ' 25 . 0 . 1 ' <nl> + versionCode = 15140 <nl> + versionName = ' 26 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 4 . 5 " <nl> - versionCode 206 <nl> + versionName " 4 . 5 . 1 " <nl> + versionCode 207 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> dependencies { <nl> compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> + <nl> + compile ' com . android . support : recyclerview - v7 : 21 . 0 . 3 ' <nl> + compile ' com . android . support : appcompat - v7 : 21 . 0 . 3 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ivy { <nl> url ' http : / / repo . jfrog . org / artifactory / gradle - wharf - local ' <nl> } <nl> - maven { <nl> - url ' http : / / repository . amdatu . org / maven2 ' <nl> - } <nl> } <nl> configurations { <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> buildscript { <nl> classpath " org . kt3k . gradle . plugin : coveralls - gradle - plugin : 2 . 3 . 1 " <nl> classpath " com . github . ben - manes : gradle - versions - plugin : 0 . 8 " <nl> + classpath " com . gradle : build - scan - plugin : 1 . 0 " <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 2 . 0 - alpha2 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 5 . 0 - alpha6 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / observablescrollview - samples / build . gradle <nl> ppp b / observablescrollview - samples / build . gradle <nl> android { <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> + <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15035 <nl> - versionName = ' 17 ' <nl> + versionCode = 15036 <nl> + versionName = ' 17 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : WordPress ' , ' : WordPressUtils ' , ' : WordPressNetworking ' , ' : WordPressGraphLib ' <nl> + include ' : WordPress ' , ' : WordPressUtils ' , ' : WordPressNetworking ' , ' : WordPressComRest ' , ' : WordPressGraphLib ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> eclipse { <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 1 . 0 - milestone - 6 ' <nl> + gradleVersion = ' 1 . 0 - milestone - 8a ' <nl> } <nl> jar { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> ext { <nl> bintrayPublish = false <nl> - grailsVersion = ' 3 . 0 . 0 . BUILD - SNAPSHOT ' <nl> + grailsVersion = ' 3 . 0 . 0 . RC2 ' <nl> isBuildSnapshot = grailsVersion . endsWith ( " . BUILD - SNAPSHOT " ) <nl> isTravisBuild = System . getenv ( ) . get ( " TRAVIS " ) = = ' true ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> all { <nl> resolutionStrategy { <nl> / / we cannot use ' hours ' for now due to java 1 . 5 problem <nl> - cacheDynamicVersionsFor 0 , ' seconds ' <nl> - cacheChangingModulesFor 0 , ' seconds ' <nl> + cacheDynamicVersionsFor 24 * 60 * 60 , ' seconds ' <nl> + cacheChangingModulesFor 24 * 60 * 60 , ' seconds ' <nl> } <nl> } <nl> } <nl> 
mmm a / ahbottomnavigation / build . gradle <nl> ppp b / ahbottomnavigation / build . gradle <nl> ext { <nl> siteUrl = ' https : / / github . com / aurelhubert / ahbottomnavigation ' <nl> gitUrl = ' https : / / github . com / aurelhubert / ahbottomnavigation . git ' <nl> - libraryVersion = ' 1 . 5 . 1 ' <nl> + libraryVersion = ' 2 . 0 . 0 ' <nl> developerId = ' aurelhubert ' <nl> developerName = ' Aurelien Hubert ' <nl> 
mmm a / rest - api - spec / build . gradle <nl> ppp b / rest - api - spec / build . gradle <nl> apply plugin : ' java ' <nl> + apply plugin : ' com . bmuschko . nexus ' <nl> + <nl> + extraArchive { <nl> + sources = false <nl> + javadoc = false <nl> + tests = false <nl> + } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> / / API level 15 + - > version 15xxx <nl> versionCode = 15001 <nl> - versionName = ' 15 . 0 . 0 ' <nl> + versionName = ' 15 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> - versionCode 116 <nl> + versionCode 117 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> dependencies { <nl> } <nl> task libraryJar ( type : Jar ) { <nl> - from android . sourceSets . main . java . srcDirs <nl> + dependsOn assembleRelease <nl> + from android . sourceSets . main . java . srcDirs , <nl> + [ ' build / intermediates / classes / release / ' ] / / Add the release classes into the jar <nl> baseName ' sugar ' <nl> } <nl> 
mmm a / UltimateRecyclerView / app / build . gradle <nl> ppp b / UltimateRecyclerView / app / build . gradle <nl> dependencies { <nl> compile ' com . android . support : cardview - v7 : 21 . 0 . + ' <nl> / / compile ( name : ' ultimaterecyclerview ' , ext : ' aar ' ) <nl> compile project ( ' : ultimaterecyclerview ' ) <nl> + / / compile ' com . marshalchen . ultimaterecyclerview : library : 0 . 1 . 0 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { project - > project . name = ~ subshadowRE } ) { <nl> } <nl> } <nl> - assemble { <nl> + jar { <nl> dependsOn copyNatives <nl> } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> ext { <nl> compileSdkVersion = 24 <nl> - buildToolsVersion = " 24 . 0 . 0 " <nl> - supportLibVersion = " 24 . 0 . 0 " <nl> + buildToolsVersion = " 24 . 0 . 1 " <nl> + supportLibVersion = " 24 . 1 . 1 " <nl> } <nl> allprojects { <nl> 
mmm a / modules / elasticsearch / build . gradle <nl> ppp b / modules / elasticsearch / build . gradle <nl> dependencies { <nl> testCompile ' org . hamcrest : hamcrest - all : 1 . 1 ' <nl> } <nl> + javadoc { <nl> + maxMemory = " 1g " <nl> + } <nl> + <nl> test { <nl> useTestNG ( ) <nl> jmvArgs = [ " - ea " , " - Xmx1024m " ] <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> } <nl> def versionMajor = 0 <nl> - def versionMinor = 1 <nl> - def versionPatch = 5 <nl> + def versionMinor = 2 <nl> + def versionPatch = 0 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> 
mmm a / grails - scripts / build . gradle <nl> ppp b / grails - scripts / build . gradle <nl> sourceSets { <nl> main { <nl> groovy . srcDirs = [ ' . . / scripts ' ] <nl> } <nl> - } <nl> \ No newline at end of file <nl> + } <nl> + jar . appendix = ' scripts ' <nl> \ No newline at end of file <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 246 <nl> - versionName ' 3 . 3 . 28 ' <nl> + versionCode 247 <nl> + versionName ' 3 . 3 . 29 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15132 <nl> - versionName = ' 25 - beta3 ' <nl> + versionCode = 15133 <nl> + versionName = ' 25 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 42 <nl> + versionCode 43 <nl> versionName " 2 . 5 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> version = ' 1 . 3 . 0 . BUILD - SNAPSHOT ' <nl> sourceCompatibility = " 1 . 5 " <nl> targetCompatibility = " 1 . 5 " <nl> + archivesBaseName = ' grails ' <nl> configurations { <nl> compile . transitive = true <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 163 <nl> - versionName " 3 . 1 . 0 . 6 " <nl> + versionCode 164 <nl> + versionName " 3 . 1 . 0 . 7 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / zipkin - ui / build . gradle <nl> ppp b / zipkin - ui / build . gradle <nl> task npmTest ( type : NpmTask ) { <nl> dependsOn npmBuild <nl> } <nl> check . dependsOn npmTest <nl> + <nl> + task npmLint ( type : NpmTask ) { <nl> + args = [ ' run - script ' , ' lint ' ] <nl> + dependsOn npmInstall <nl> + } <nl> + check . dependsOn npmLint <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - rc5 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 0 - rc6 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / modules / apps / foundation / frontend - editor / frontend - editor - tinymce - web / build . gradle <nl> ppp b / modules / apps / foundation / frontend - editor / frontend - editor - tinymce - web / build . gradle <nl> buildTinyMCE { <nl> from ( zipTree ( tinyMCEZipFile ) ) { <nl> eachFile new StripPathSegmentsAction ( 3 ) <nl> + exclude " * * / moxieplayer . swf " <nl> include " tinymce / js / tinymce / " <nl> } <nl> 
mmm a / SlidingLayerSample / build . gradle <nl> ppp b / SlidingLayerSample / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile ' com . wunderlist : sliding - layer : 1 . 1 ' <nl> + compile ' com . wunderlist : sliding - layer : 1 . 1 . 1 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> * limitations under the License . <nl> * / <nl> - <nl> plugins { <nl> id ' org . jetbrains . intellij ' version " 0 . 0 . 27 " <nl> id " de . undercouch . download " version " 2 . 0 . 0 " <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> configure ( [ smallJavaSwModelCompileAvoidanceWithApi , largeJavaSwModelCompileAvoid <nl> templateArgs . useApiDependencies = true <nl> numberOfExternalDependencies = 0 <nl> createTestComponent = false <nl> + sourceFiles = 300 <nl> dependencyGraph { <nl> size = 0 <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> applicationId " com . andexert . calendarlistview . library " <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> - versionCode 3 <nl> - versionName " 1 . 1 " <nl> + versionCode 4 <nl> + versionName " 1 . 1 . 1 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> } <nl> + <nl> + group = GROUP <nl> + version = VERSION_NAME <nl> } <nl> ext { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 21 <nl> - versionCode 7 <nl> - versionName " 1 . 1 " <nl> + versionCode 8 <nl> + versionName " 1 . 2 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 219 <nl> - versionName ' 3 . 3 . 1 ' <nl> + versionCode 220 <nl> + versionName ' 3 . 3 . 2 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configurations { <nl> dependencies { <nl> runtime project ( ' : launcher ' ) <nl> + runtime project ( ' : wrapper ' ) <nl> plugins pluginProjects <nl> plugins project ( ' : coreImpl ' ) <nl> } <nl> 
mmm a / gradle / pomconfigurer . gradle <nl> ppp b / gradle / pomconfigurer . gradle <nl> project . pomConfigureClosure = { <nl> contributor { <nl> name ' Jan Weitz ' <nl> } <nl> + contributor { <nl> + name ' Joachim Baumann ' <nl> + } <nl> } <nl> mailingLists { <nl> mailingList { <nl> 
mmm a / robolectric . gradle <nl> ppp b / robolectric . gradle <nl> android . testOptions . unitTests . all { <nl> } <nl> ext { <nl> - assertjVersion = ' 1 . 0 . 1 ' <nl> + assertjVersion = ' 1 . 1 . 0 ' <nl> robolectricVersion = ' 3 . 0 ' <nl> } <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> - id ' org . jetbrains . intellij ' version " 0 . 1 . 7 " <nl> + id ' org . jetbrains . intellij ' version " 0 . 1 . 8 " <nl> id " de . undercouch . download " version " 2 . 0 . 0 " <nl> } <nl> 
mmm a / lib / build . gradle <nl> ppp b / lib / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' maven ' <nl> - def version = ' 0 . 0 . 3 ' <nl> + def version = ' 0 . 0 . 4 ' <nl> android { <nl> compileSdkVersion 19 <nl> 
mmm a / android / PhysicalWeb / app / build . gradle <nl> ppp b / android / PhysicalWeb / app / build . gradle <nl> android { <nl> applicationId " physical_web . org . physicalweb " <nl> minSdkVersion 19 <nl> targetSdkVersion 22 <nl> - versionCode 12 <nl> - versionName " 0 . 1 . 853 " <nl> + versionCode 13 <nl> + versionName " 0 . 1 . 854 " <nl> } <nl> buildTypes { <nl> 
mmm a / android / sdk / build . gradle <nl> ppp b / android / sdk / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . hierynomus . license ' <nl> - version = " 0 . 5 . 0 . 9 " <nl> + version = " 1 . 5 . 1 . 4 " <nl> android { <nl> compileSdkVersion 23 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> compile ' org . whispersystems : axolotl - android : 1 . 3 . 4 ' <nl> compile ' com . makeramen : roundedimageview : 2 . 2 . 0 ' <nl> compile ' com . google . android . gms : play - services - gcm : 9 . 4 . 0 ' <nl> + compile " com . wefika : flowlayout : 0 . 4 . 1 " <nl> } <nl> ext { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15135 <nl> - versionName = ' 25 . 0 . 1 ' <nl> + versionCode = 15136 <nl> + versionName = ' 25 . 0 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / gradle / pomconfigurer . gradle <nl> ppp b / gradle / pomconfigurer . gradle <nl> project . pomConfigureClosure = { <nl> contributor { <nl> name ' Jan Weitz ' <nl> } <nl> + contributor { <nl> + name ' Joachim Baumann ' <nl> + } <nl> } <nl> mailingLists { <nl> mailingList { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> jar { <nl> } <nl> javadoc { <nl> + options . charSet = ' UTF - 8 ' <nl> source = [ <nl> project ( " Mixin " ) . sourceSets . main . java , <nl> project ( " SpongeAPI " ) . sourceSets . main . java , <nl> 
mmm a / subprojects / build - scan - performance / build - scan - performance . gradle <nl> ppp b / subprojects / build - scan - performance / build - scan - performance . gradle <nl> dependencies { <nl> } <nl> useClassycle ( ) <nl> + <nl> + performanceAdhocTest . enabled = false <nl> 
mmm a / framework / build . gradle <nl> ppp b / framework / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' net . sf . proguard : proguard - gradle : 5 . 0 ' <nl> + classpath ' net . sf . proguard : proguard - gradle : 4 . 11 ' <nl> classpath ' org . robobinding : aspectj - plugin : 0 . 8 . + ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> repositories { <nl> mavenCentral ( ) <nl> + mavenLocal ( ) <nl> maven { url " https : / / oss . sonatype . org / content / repositories / releases " } <nl> maven { url " https : / / oss . sonatype . org / content / repositories / snapshots " } <nl> maven { url " http : / / download . oracle . com / maven / " } <nl> 
mmm a / gradle / buildReceipt . gradle <nl> ppp b / gradle / buildReceipt . gradle <nl> task determineCommitId { <nl> standardOutput = baos <nl> } <nl> - if ( execResult = = 0 ) { <nl> + if ( execResult . exitValue = = 0 ) { <nl> new String ( baos . toByteArray ( ) , " utf8 " ) . trim ( ) <nl> } else { <nl> / / Read commit id directly from filesystem <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> } <nl> + <nl> + lintOptions { <nl> + / / problems with generated " applicationId " string resource <nl> + disable ' MissingTranslation ' <nl> + } <nl> } <nl> repositories { <nl> 
mmm a / presentation / build . gradle <nl> ppp b / presentation / build . gradle <nl> apply plugin : ' com . android . application ' <nl> apply plugin : ' com . neenbedankt . android - apt ' <nl> apply plugin : ' com . fernandocejas . frodo ' <nl> + frodo { <nl> + enabled = true <nl> + } <nl> + <nl> android { <nl> def globalConfiguration = rootProject . extensions . getByName ( " ext " ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> - versionCode = 240 <nl> - versionName = ' 12 . 3 ' <nl> + versionCode = 244 <nl> + versionName = ' 12 . 4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15075 <nl> - versionName = ' 21 . 0 . 0 ' <nl> + versionCode = 15076 <nl> + versionName = ' 21 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> maven { url " . . / . . / prebuilts / maven_repo / android " } <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 - alpha6 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( javaModules ( ) ) { <nl> docEncoding = ' UTF - 8 ' <nl> stylesheetFile = file ( ' src / main / javadoc / jodd . css ' ) <nl> source = ' 1 . 5 ' <nl> + failOnError = false <nl> } <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> buildToolsVersion " 23 . 0 . 2 " <nl> defaultConfig { <nl> - applicationId " com . sunfushentickyHeaderListView " <nl> + applicationId " com . sunfusheng . StickyHeaderListView " <nl> minSdkVersion 11 <nl> targetSdkVersion 23 <nl> versionCode 4 <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> sourceCompatibility JavaVersion . VERSION_1_8 <nl> targetCompatibility JavaVersion . VERSION_1_8 <nl> } <nl> + <nl> + aaptOptions { <nl> + cruncherEnabled = false <nl> + } <nl> } <nl> ext { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply from : ' . . / signing . gradle ' <nl> android { <nl> compileSdkVersion 24 <nl> - buildToolsVersion " 24 . 0 . 1 " <nl> + buildToolsVersion " 24 . 0 . 2 " <nl> / / For customization of Volley to build . <nl> useLibrary ' org . apache . http . legacy ' <nl> 
mmm a / grails - scripts / build . gradle <nl> ppp b / grails - scripts / build . gradle <nl> + configurations { <nl> + agent . extendsFrom compile <nl> + } <nl> dependencies { <nl> agent ' com . springsource . springloaded : springloaded - core : 0 . 7 . 2 ' <nl> / / Testing <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> ext { <nl> plugin_bigdesk_version = ' 2 . 2 . 2c ' <nl> plugin_segmentspy_version = ' 0 . 2 . 0 ' <nl> plugin_crateadmin_version = ' 0 . 3 . 1 ' <nl> - crash_version = ' 0 . 8 . 1 ' <nl> + crash_version = ' 0 . 8 . 3 ' <nl> } <nl> evaluationDependsOn ( ' : es ' ) <nl> 
mmm a / subprojects / docs / src / samples / signing / maven / build . gradle <nl> ppp b / subprojects / docs / src / samples / signing / maven / build . gradle <nl> signing { <nl> } <nl> / / END SNIPPET sign - archives <nl> + / / START SNIPPET published - configuration <nl> configurations { <nl> published . extendsFrom archives , signatures <nl> } <nl> + / / END SNIPPET published - configuration <nl> / / START SNIPPET sign - pom <nl> uploadPublished { <nl> 
mmm a / zipkin - ui / build . gradle <nl> ppp b / zipkin - ui / build . gradle <nl> task npmLint ( type : NpmTask ) { <nl> dependsOn npmInstall <nl> } <nl> check . dependsOn npmLint <nl> + <nl> + install . repositories . mavenInstaller . pom * . whenConfigured { pom - > <nl> + pom . dependencies . clear ( ) <nl> + } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> allprojects { <nl> + group = ' com . soundcloud . android . crop ' <nl> + version = ' 1 . 0 . 0 ' <nl> + <nl> repositories { <nl> mavenCentral ( ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> zbetagroupCompile ' org . wordpress : emailchecker : 0 . 2 ' <nl> / / Simperium <nl> - compile ' com . simperium : simperium - android : 0 . 4 . 5 ' <nl> + compile ' com . simperium : simperium - android : 0 . 4 . 6 ' <nl> / / Local dependencies <nl> compile files ( ' libs / MixpanelAPI . jar ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( ! project . hasProperty ( ' sonatypeRepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 0 . 3 . 3 " <nl> + version = " 0 . 3 . 4 " <nl> group = " com . facebook . rebound " <nl> signing { <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> apply from : ' gradle - mvn - push . gradle ' <nl> dependencies { <nl> - compile ' com . mikepenz : iconics - core : 1 . 7 . 9 @ aar ' <nl> + compile ' com . mikepenz : iconics - core : 2 . 0 . 0 @ aar ' <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : uiautomator : BasicSample : app ' <nl> include ' : testrunner : AndroidJunitRunnerSample : app ' <nl> include ' : unittesting : BasicSample : app ' <nl> include ' : unittesting : BasicUnitAndroidTest : app ' <nl> + include ' : integrationtesting : ServiceTestRuleSample : app ' <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . stephentuso . welcomeexample " <nl> minSdkVersion 9 <nl> targetSdkVersion 24 <nl> - versionCode 2 <nl> - versionName " 1 . 0 . 1 " <nl> + versionCode 3 <nl> + versionName VERSION_NAME <nl> vectorDrawables . useSupportLibrary = true <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( rootProject ) { <nl> task wrapper ( type : Wrapper ) { <nl> description = " Generates gradlew [ . bat ] scripts " <nl> - gradleVersion = " 2 . 10 " <nl> + gradleVersion = " 2 . 12 " <nl> doLast ( ) { <nl> def gradleOpts = " - XX : MaxMetaspaceSize = 1024m - Xmx1024m " <nl> 
mmm a / OsmAnd / build . gradle <nl> ppp b / OsmAnd / build . gradle <nl> task collectHelpContentsAssets ( type : Copy ) { <nl> include " changes . html " <nl> include " faq . html " <nl> include " technical - articles . html " <nl> + include " map - legend . html " <nl> } <nl> from ( " . . / . . / help / website / feature_articles " ) { <nl> include " * . html " <nl> 
mmm a / application / build . gradle <nl> ppp b / application / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> + compile fileTree ( dir : ' lib ' , include : [ ' * . jar ' ] ) <nl> } <nl> 
mmm a / grails - shell / build . gradle <nl> ppp b / grails - shell / build . gradle <nl> + apply plugin : ' application ' <nl> + <nl> + mainClassName = " org . grails . cli . GrailsCli " <nl> + <nl> dependencies { <nl> compile project ( " : grails - bootstrap " ) <nl> compile " org . apache . ant : ant : $ antVersion " <nl> 
mmm a / compressor / build . gradle <nl> ppp b / compressor / build . gradle <nl> ext { <nl> siteUrl = ' https : / / github . com / zetbaitsu / Compressor ' <nl> gitUrl = ' https : / / github . com / zetbaitsu / Compressor . git ' <nl> - libraryVersion = ' 1 . 0 . 1 ' <nl> + libraryVersion = ' 1 . 0 . 2 ' <nl> developerId = ' zetbaitsu ' <nl> developerName = ' Zetra ' <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task pluginsFromSvn { <nl> plugins = [ <nl> hibernate : grailsVersion , <nl> tomcat : grailsVersion , <nl> - resources : " 1 . 0 . 2 " , <nl> + resources : " 1 . 1 . 1 " , <nl> jquery : " 1 . 6 . 1 . 1 " <nl> ] <nl> 
mmm a / v7 / palette / build . gradle <nl> ppp b / v7 / palette / build . gradle <nl> android { <nl> / / TODO : fix errors and reenable . <nl> abortOnError false <nl> } <nl> + <nl> + compileOptions { <nl> + sourceCompatibility JavaVersion . VERSION_1_7 <nl> + targetCompatibility JavaVersion . VERSION_1_7 <nl> + } <nl> } <nl> android . libraryVariants . all { variant - > <nl> 
mmm a / subprojects / plugins / plugins . gradle <nl> ppp b / subprojects / plugins / plugins . gradle <nl> dependencies { <nl> compile project ( ' : core ' ) <nl> compile project ( ' : coreImpl ' ) <nl> - compile project ( ' : wrapper ' ) <nl> compile project ( ' : reporting ' ) <nl> compile project ( ' : languageBase ' ) <nl> compile project ( ' : languageJvm ' ) <nl> 
mmm a / WordPressGraphView / build . gradle <nl> ppp b / WordPressGraphView / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' maven ' <nl> android { <nl> + defaultPublishConfig ' debug ' <nl> + <nl> compileSdkVersion 19 <nl> buildToolsVersion " 19 . 1 . 0 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply { <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 1 . 9 - rc - 4 ' <nl> + gradleVersion = ' 1 . 9 ' <nl> jarFile = ' gradle / wrapper / gradle - wrapper . jar ' <nl> } <nl> Binary files a / gradle / wrapper / gradle - wrapper . jar and b / gradle / wrapper / gradle - wrapper . jar differ <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 207 <nl> - versionName " 11 " <nl> + versionCode 209 <nl> + versionName " 11 . 1 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / WordPressUtils / build . gradle <nl> ppp b / WordPressUtils / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android . util " <nl> - versionName " 1 . 0 . 1 " <nl> + versionName " 1 . 0 . 2 " <nl> versionCode 1 <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 32 . Final ' <nl> + nettyVersion = ' 4 . 0 . 33 . Final ' <nl> slf4jVersion = ' 1 . 7 . 12 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 6 . 3 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 3 . 1 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 230 <nl> + versionCode = 231 <nl> versionName = ' 12 - beta9 ' <nl> } <nl> 
mmm a / modules / frontend / frontend - js - metal - web / build . gradle <nl> ppp b / modules / frontend / frontend - js - metal - web / build . gradle <nl> cache { <nl> configJSModules { <nl> dependsOn buildMetalComponents <nl> - include " * * / * . js * " <nl> + <nl> + include " * * / * . js " <nl> + include " * * / * . js . map " <nl> } <nl> dependencies { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 197 <nl> - versionName " 3 . 1 . 8 " <nl> + versionCode 198 <nl> + versionName " 3 . 1 . 9 " <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> compile ( <nl> ' com . google . guava : guava : 13 . 0 ' , <nl> ' joda - time : joda - time : 2 . 1 ' , <nl> - ' io . netty : netty : 3 . 5 . 8 . Final ' <nl> + ' io . netty : netty : 3 . 5 . 9 . Final ' <nl> ) <nl> testCompile ( <nl> 
new file mode 100644 <nl> index 0000000000 . . ed9152cda1 <nl> mmm / dev / null <nl> ppp b / core / build . gradle <nl> + dependencies { <nl> + compile project ( " : bootstrap " ) <nl> + } <nl> + jar . appendix = ' core ' <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenLocal ( ) <nl> mavenCentral ( ) <nl> maven { url ' https : / / oss . sonatype . org / content / repositories / snapshots ' } <nl> + jcenter ( ) <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project ( ' : aeron - common ' ) { <nl> dependencies { <nl> - compile ' uk . co . real - logic : Agrona : 1 . 0 - SNAPSHOT ' <nl> + compile ' uk . co . real - logic : Agrona : 0 . 1 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> id ' karanparikh ' <nl> name ' Karan Parikh ' <nl> } <nl> + developer { <nl> + id ' nishanthshankaran ' <nl> + name ' Nishanth Shankaran ' <nl> + } <nl> } <nl> } <nl> } <nl> 
mmm a / UltimateAndroidGradle / demoofui / build . gradle <nl> ppp b / UltimateAndroidGradle / demoofui / build . gradle <nl> android { <nl> applicationId " com . marshalchen . common . demoofui " <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 3 <nl> - versionName " 1 . 0 . 2 " <nl> + versionCode 4 <nl> + versionName " 1 . 0 . 3 " <nl> } <nl> signingConfigs { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' } ) { <nl> evaluationDependsOn ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> - version = ' 3 . 0 . 0 - SNAPSHOT ' <nl> + version = ' 3 . 0 . 0 - beta1 ' <nl> sourceCompatibility = JavaVersion . VERSION_1_6 <nl> targetCompatibility = JavaVersion . VERSION_1_6 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15018 <nl> - versionName = ' 16 - beta6 ' <nl> + versionCode = 15019 <nl> + versionName = ' 16 - beta7 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> def isReleaseBuild ( ) { <nl> - return version . contains ( " SNAPSHOT " ) <nl> + return version . contains ( " SNAPSHOT " ) = = false <nl> } <nl> allprojects { <nl> 
mmm a / subprojects / docs / src / samples / cpp / cpp / build . gradle <nl> ppp b / subprojects / docs / src / samples / cpp / cpp / build . gradle <nl> binaries . all { <nl> } <nl> if ( toolChain = = toolChains . visualCpp ) { <nl> compilerArgs " / Z7 " <nl> - linkerArgs " / INTEGRITYCHECK : NO " <nl> + linkerArgs " / DEBUG " <nl> } <nl> } <nl> / / END SNIPPET all - binaries <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15045 <nl> - versionName = ' 18 . 0 . 2 ' <nl> + versionCode = 15046 <nl> + versionName = ' 18 . 0 . 3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / modules / build . gradle <nl> ppp b / modules / build . gradle <nl> gradle . beforeProject { <nl> ruleSets = [ ] <nl> } <nl> - startTestableTomcat { <nl> - checkTimeout = 15 * 60 * 1000 <nl> - } <nl> - <nl> testIntegration { <nl> doLast { <nl> String databaseType = System . properties [ " database . type " ] <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> task forceCandidate { <nl> } <nl> release . dependsOn ( forceCandidate ) <nl> + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) <nl> task releaseSnapshot ( dependsOn : [ uploadArtifactory , uploadMavenCentral ] ) <nl> / / Ensure our versions look like the project status before publishing <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> buildscript { <nl> } <nl> android { <nl> - compileSdkVersion 18 <nl> - buildToolsVersion " 18 . 0 . 1 " <nl> + compileSdkVersion 19 <nl> + buildToolsVersion " 19 . 0 . 1 " <nl> defaultConfig { <nl> minSdkVersion 8 <nl> - targetSdkVersion 18 <nl> + targetSdkVersion 19 <nl> } <nl> sourceSets { <nl> main { <nl> 
mmm a / h2o - r / build . gradle <nl> ppp b / h2o - r / build . gradle <nl> task cleaner < < { <nl> clean . dependsOn cleanUp <nl> setProperties . dependsOn gitbranch , getRVersion , getRPlatform , pdflatex <nl> setPackageFiles . dependsOn setProperties <nl> - buildPackageDocumentation . dependsOn setPackageFiles <nl> - genPDF . dependsOn buildPackageDocumentation <nl> + / / buildPackageDocumentation . dependsOn setPackageFiles <nl> + / / genPDF . dependsOn buildPackageDocumentation <nl> + genPDF . dependsOn setPackageFiles <nl> cpPDF . dependsOn genPDF <nl> cpH2OAppJar . dependsOn cpPDF <nl> buildPKG . dependsOn cpH2OAppJar <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> distZip { <nl> ext { <nl> downloadDir = new File ( buildDir , ' downloads ' ) <nl> - plugin_crateadmin_version = ' 0 . 10 . 2 ' <nl> + plugin_crateadmin_version = ' 0 . 11 . 0 ' <nl> crash_version = ' 0 . 10 . 3 ' <nl> } <nl> 
mmm a / subprojects / scala / scala . gradle <nl> ppp b / subprojects / scala / scala . gradle <nl> dependencies { <nl> useTestFixtures ( project : " : plugins " ) / / includes core test fixtures <nl> configure ( [ integTest , daemonIntegTest ] ) { <nl> - jvmArgs " - XX : MaxPermSize = 1g " / / AntInProcessScalaCompilerIntegrationTest needs lots of permgen <nl> + jvmArgs " - XX : MaxPermSize = 1500m " / / AntInProcessScalaCompilerIntegrationTest needs lots of permgen <nl> } <nl> 
mmm a / modules / build - theme . gradle <nl> ppp b / modules / build - theme . gradle <nl> createLiferayThemeJson { <nl> outputs . file liferayThemeJsonFile <nl> } <nl> - tasks . whenTaskAdded { <nl> + tasks . all { <nl> if ( it . class . name . startsWith ( " com . liferay . gradle . plugins . gulp . ExecuteGulpTask " ) ) { <nl> it . dependsOn createLiferayThemeJson , npmInstall <nl> } <nl> 
mmm a / h2o - r / build . gradle <nl> ppp b / h2o - r / build . gradle <nl> task cleaner < < { <nl> clean . dependsOn cleanUp <nl> setProperties . dependsOn gitbranch , getRVersion , getRPlatform , pdflatex <nl> setPackageFiles . dependsOn setProperties <nl> - buildPackageDocumentation . dependsOn setPackageFiles <nl> - genPDF . dependsOn buildPackageDocumentation <nl> + / / buildPackageDocumentation . dependsOn setPackageFiles <nl> + / / genPDF . dependsOn buildPackageDocumentation <nl> + genPDF . dependsOn setPackageFiles <nl> cpPDF . dependsOn genPDF <nl> cpH2OAppJar . dependsOn cpPDF <nl> buildPKG . dependsOn cpH2OAppJar <nl> 
mmm a / WordPressUtils / build . gradle <nl> ppp b / WordPressUtils / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android . util " <nl> - versionName " 1 . 0 . 0 " <nl> + versionName " 1 . 0 . 1 " <nl> versionCode 1 <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> / / Realm projects <nl> - include ' realm ' <nl> + include ' realm ' , ' : realm - annotations - processor ' <nl> / / Example projects <nl> include ' : introExample ' , <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> task downloadDependencies < < { <nl> allprojects { p - > <nl> configurations . each { c - > <nl> println " Downloading dependencies for $ p . path - $ c . name " <nl> - it . files <nl> + c . files <nl> } <nl> } <nl> } <nl> 
mmm a / hystrix - core / build . gradle <nl> ppp b / hystrix - core / build . gradle <nl> jar { <nl> jmh { <nl> fork = 10 <nl> iterations = 3 <nl> - jmhVersion = ' 1 . 9 . 3 ' <nl> - / / profilers = [ ' gc ' ] <nl> + jmhVersion = ' 1 . 10 . 3 ' <nl> + profilers = [ ' gc ' ] <nl> threads = 8 <nl> warmup = ' 1s ' <nl> warmupBatchSize = 1 <nl> 
mmm a / performanceTest / src / templates / build . gradle <nl> ppp b / performanceTest / src / templates / build . gradle <nl> repositories { <nl> } <nl> dependencies { <nl> + compile ' commons - lang : commons - lang : 2 . 5 ' <nl> testCompile ' junit : junit : 4 . 8 . 2 ' <nl> - <nl> } <nl> test { <nl> jvmArgs ' - XX : MaxPermSize = 512m ' , ' - XX : + HeapDumpOnOutOfMemoryError ' <nl> 
mmm a / subprojects / plugins / plugins . gradle <nl> ppp b / subprojects / plugins / plugins . gradle <nl> dependencies { <nl> compile libraries . slf4j_api <nl> compile ' org . testng : testng : 5 . 14 . 10 ' <nl> - testCompile libraries . xmlunit <nl> testCompile ' net . sourceforge . nekohtml : nekohtml : 1 . 9 . 14 ' <nl> } <nl> 
mmm a / library - core / build . gradle <nl> ppp b / library - core / build . gradle <nl> if ( project . hasProperty ( ' pushall ' ) | | project . hasProperty ( ' librarycoreonly ' ) ) { <nl> } <nl> dependencies { <nl> - compile ' com . android . support : support - v4 : 23 . 0 . 1 ' <nl> + compile ' com . android . support : support - v4 : 23 . 1 . 0 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15133 <nl> - versionName = ' 25 - beta4 ' <nl> + versionCode = 15134 <nl> + versionName = ' 25 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / third_party / gif_encoder / build . gradle <nl> ppp b / third_party / gif_encoder / build . gradle <nl> android { <nl> buildToolsVersion ' 19 . 1 . 0 ' <nl> defaultConfig { <nl> - applicationId ' com . bumptech . glide . gifencod : ' <nl> + applicationId ' com . bumptech . glide . gifencoder ' <nl> minSdkVersion 10 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> applicationId " com . oguzdev . circularfloatingactionmenu . library " <nl> minSdkVersion 15 <nl> targetSdkVersion 19 <nl> - versionCode 1 <nl> - versionName " 1 . 0 " <nl> + versionCode 2 <nl> + versionName " 1 . 0 . 1 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / subprojects / docs / src / samples / cpp / exe / build . gradle <nl> ppp b / subprojects / docs / src / samples / cpp / exe / build . gradle <nl> executables { <nl> / / Add some additional compiler arguments <nl> if ( toolChain = = compilers . gcc ) { <nl> compilerArgs " - fno - access - control " , " - fconserve - space " <nl> - linkerArgs " - lz " <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : eureka - core ' ) { <nl> testCompile ' junit : junit : 4 . 10 ' <nl> testCompile ' org . mortbay . jetty : jetty : 6 . 1H . 22 ' <nl> + testRuntime ' org . slf4j : slf4j - simple : 1 . 7 . 0 ' <nl> } <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . afollestad . materialdialogssample " <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 68 <nl> + versionCode 69 <nl> versionName " 0 . 6 . 1 . 4 " <nl> } <nl> lintOptions { <nl> Binary files a / sample / sample . apk and b / sample / sample . apk differ <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : timber ' <nl> include ' : timber - lint ' <nl> include ' : timber - sample ' <nl> + <nl> + rootProject . name = ' timber - root ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 14 . 0 . 1 ' <nl> - nettyVersion = ' 4 . 0 . 6 . Final ' <nl> + nettyVersion = ' 4 . 0 . 7 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 2 . 2 ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " com . eightbitlab . blurview_sample " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 1 <nl> + versionCode 2 <nl> versionName " 1 . 0 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> avsGroup = ' com . wire . avs ' <nl> / / proprietary avs artifact config <nl> - customAvsVersion = ' 2 . 8 . 6 @ aar ' <nl> + customAvsVersion = ' 2 . 8 . 7 @ aar ' <nl> customAvsInternalVersion = customAvsVersion <nl> customAvsName = ' avs ' <nl> customAvsGroup = ' com . wearezeta . avs ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15131 <nl> - versionName = ' 25 - beta2 ' <nl> + versionCode = 15132 <nl> + versionName = ' 25 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 2 ' <nl> } <nl> project . ext { <nl> 
new file mode 100644 <nl> index 0000000000 . . 196ae525c9 <nl> mmm / dev / null <nl> ppp b / grails - plugin - validation / build . gradle <nl> + dependencies { <nl> + compile project ( " : grails - core " ) , <nl> + project ( ' : grails - web ' ) , <nl> + project ( ' : grails - plugin - domain - class ' ) <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / WordPressUtils / build . gradle <nl> ppp b / WordPressUtils / build . gradle <nl> android { <nl> buildToolsVersion " 21 . 1 . 1 " <nl> defaultConfig { <nl> - versionName " 1 . 5 . 0 " <nl> + versionName " 1 . 6 . 0 " <nl> minSdkVersion 14 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / spock - specs / build . gradle <nl> ppp b / spock - specs / build . gradle <nl> project ( " : spock - specs " ) { <nl> dependencies { <nl> - compile project ( " : spock - core " ) <nl> - compile junit <nl> + testCompile project ( " : spock - core " ) <nl> + testCompile junit <nl> testCompile easymock <nl> testCompile jmock_junit4 <nl> testCompile jmock <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildTypes { <nl> } <nl> distributedPerformanceExperiments { <nl> - tasks " performance : distributedPerformanceExperiments " <nl> + tasks " performance : distributedPerformanceExperiment " <nl> projectProperties useIncomingDistributions : true <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> ext { <nl> plugin_head_version = ' 2cd68c235f8b0fdf667090e8d2653d80e4183473 ' <nl> plugin_bigdesk_version = ' 2 . 2 . 2c ' <nl> plugin_segmentspy_version = ' 0 . 2 . 0 ' <nl> - plugin_crateadmin_version = ' 0 . 3 . 0 ' <nl> + plugin_crateadmin_version = ' 0 . 3 . 1 ' <nl> crash_version = ' 0 . 7 . 1 ' <nl> } <nl> 
mmm a / exhibitor - standalone / src / main / resources / buildscripts / gradle / build . gradle <nl> ppp b / exhibitor - standalone / src / main / resources / buildscripts / gradle / build . gradle <nl> apply plugin : ' java ' <nl> apply plugin : ' maven ' <nl> group = ' exhibitor ' <nl> - version = 1 . 0 . 10 <nl> + version = ' 1 . 0 . 10 ' <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta4 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta5 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' jme3 - ios ' <nl> include ' jme3 - bullet ' / / java <nl> if ( buildNativeProjects = = " true " ) { <nl> include ' jme3 - bullet - native ' / / cpp <nl> + include ' jme3 - bullet - native - android ' / / cpp <nl> } <nl> include ' jme3 - android - native ' / / cpp <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> gradle . taskGraph . afterTask { <nl> lock . unlock ( ) <nl> } <nl> } <nl> + <nl> + task downloadDependencies < < { <nl> + allprojects { <nl> + configurations . all { <nl> + it . files <nl> + } <nl> + } <nl> + } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configurations { <nl> ext { <nl> antVersion = ' 1 . 9 . 3 ' <nl> - asmVersion = ' 5 . 0 . 1 ' <nl> + asmVersion = ' 5 . 0 . 2 ' <nl> antlrVersion = ' 2 . 7 . 7 ' <nl> bndVersion = ' 0 . 0 . 401 ' <nl> checkstyleVersion = ' 4 . 4 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> dependencies { <nl> - testCompile ' junit : junit : 4 . 11 ' <nl> + testCompile ' junit : junit : 4 . 12 ' <nl> testCompile ( ' org . truth0 : truth : 0 . 23 ' ) { <nl> exclude group : ' com . google . guava ' , module : ' guava ' <nl> exclude group : ' junit ' , module : ' * ' <nl> 
mmm a / subprojects / distributions / distributions . gradle <nl> ppp b / subprojects / distributions / distributions . gradle <nl> task srcZip ( type : Zip ) { <nl> include ' * . gradle ' <nl> include ' wrapper / ' <nl> include ' gradlew . bat ' <nl> + include ' version . txt ' <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> / / API level 11 + - > version 11xxx <nl> versionCode = 11252 <nl> - versionName = ' 13 - beta7 ' <nl> + versionName = ' 13 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task licenseFormatAndroid ( type : nl . javadude . gradle . plugins . license . License ) { <nl> licenseFormat . dependsOn licenseFormatAndroid <nl> ext { <nl> - majorVersion = " 2 . 23 . " <nl> + majorVersion = " 2 . 22 . " <nl> compileSdkVersion = 23 <nl> minSdkVersion = 17 <nl> 
mmm a / permissionsdispatcher - sample / build . gradle <nl> ppp b / permissionsdispatcher - sample / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " permissions . dispatcher . sample " <nl> - minSdkVersion 23 <nl> + minSdkVersion 7 <nl> targetSdkVersion 23 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 24 <nl> - versionName " 1 . 7 " <nl> + versionCode 25 <nl> + versionName " 1 . 8 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> } <nl> 
mmm a / gradle / idea . gradle <nl> ppp b / gradle / idea . gradle <nl> idea { <nl> project { <nl> jdkName " 1 . 7 " <nl> + languageLevel " 1 . 6 " <nl> ipr { <nl> withXml { provider - > <nl> def node = provider . asNode ( ) <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> / / Realm projects <nl> - include ' realm ' <nl> + include ' realm ' , ' : realm - annotations - processor ' <nl> / / Example projects <nl> include ' : introExample ' , <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> + / / Top - level build file where you can add configuration options common to all sub - projects / modules . <nl> 
mmm a / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / ios / build . gradle <nl> ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / ios / build . gradle <nl> task buildRoboVMXML < < { <nl> includes { <nl> include ' * * ' <nl> } <nl> + skipPngCrush true <nl> } <nl> } <nl> } <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> android { <nl> buildToolsVersion " 19 . 1 " <nl> defaultConfig { <nl> - minSdkVersion 9 <nl> + minSdkVersion 16 <nl> targetSdkVersion 19 <nl> } <nl> buildTypes { <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task installGroovy ( type : Sync , dependsOn : distBin ) { <nl> into installDir <nl> } <nl> - task dist ( dependsOn : [ distBin / * , distSrc , distDoc * / ] ) { <nl> + task dist ( dependsOn : [ distBin , distSrc , distDoc ] ) { <nl> description = ' Generates the binary , sources and documentation distributions ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15055 <nl> - versionName = ' 19 . 0 . 2 ' <nl> + versionCode = 15060 <nl> + versionName = ' 20 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / PullToZoomView / library / gradle - mvn - push . gradle <nl> ppp b / PullToZoomView / library / gradle - mvn - push . gradle <nl> afterEvaluate { project - > <nl> artifacts { <nl> archives androidSourcesJar <nl> - archives androidJavadocsJar <nl> archives apklib <nl> archives jar <nl> } <nl> 
mmm a / worldedit - forge / build . gradle <nl> ppp b / worldedit - forge / build . gradle <nl> repositories { <nl> } <nl> version = " 6 . 1 . 1 " <nl> - ext . forgeVersion = " 11 . 15 . 0 . 1695 " <nl> + ext . forgeVersion = " 11 . 15 . 1 . 1760 " <nl> ext . internalVersion = version + " ; " + gitCommitHash <nl> minecraft { <nl> 
mmm a / smack - bosh / build . gradle <nl> ppp b / smack - bosh / build . gradle <nl> This API is considered beta quality . " " " <nl> dependencies { <nl> compile project ( ' : smack - core ' ) <nl> - compile ' org . igniterealtime . jbosh : jbosh : [ 0 . 8 , 0 . 9 ) ' <nl> + compile ' org . igniterealtime . jbosh : jbosh : [ 0 . 9 , 0 . 10 ) ' <nl> } <nl> 
mmm a / grails - core / build . gradle <nl> ppp b / grails - core / build . gradle <nl> dependencies { <nl> exclude group : ' xml - apis ' , module : ' xml - apis ' <nl> } <nl> - compile ( " com . springsource . springloaded : springloaded - core : $ springLoadedVersion " ) { <nl> + compile ( " org . springsource . springloaded : springloaded - core : $ springLoadedVersion " ) { <nl> ext . notInPom = true <nl> } <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> android { <nl> buildToolsVersion " 18 . 0 . 1 " <nl> defaultConfig { <nl> - / / AbsListView . setAdapter is API 11 and up <nl> - minSdkVersion 11 <nl> + minSdkVersion 9 <nl> targetSdkVersion 16 <nl> testPackageName " com . novoda . imageloader . acceptance " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15076 <nl> - versionName = ' 21 . 0 . 1 ' <nl> + versionCode = 15077 <nl> + versionName = ' 21 . 0 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / examples / rxJavaExample / build . gradle <nl> ppp b / examples / rxJavaExample / build . gradle <nl> apply plugin : ' android - sdk - manager ' <nl> apply plugin : ' com . android . application ' <nl> apply plugin : ' android - command ' <nl> - apply plugin : ' realm ' <nl> + apply plugin : ' realm - android ' <nl> android { <nl> compileSdkVersion rootProject . sdkVersion <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15097 <nl> - versionName = ' 22 . 0 . 1 ' <nl> + versionCode = 15098 <nl> + versionName = ' 22 . 0 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 219 <nl> + versionCode = 220 <nl> versionName = ' 12 - beta5 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> / / Establish version and status <nl> - ext . releaseVersion = ' 0 . 2 . 2 ' <nl> + ext . releaseVersion = ' 0 . 2 . 3 ' <nl> ext . githubProjectName = ' archaius ' <nl> / / group = ' com . netflix . archaius ' <nl> 
mmm a / gradle / docs . gradle <nl> ppp b / gradle / docs . gradle <nl> task javadoc ( type : Javadoc ) { <nl> } <nl> task groovydoc ( type : Groovydoc ) { <nl> + classpath = files ( subprojects . configurations . compile ) <nl> groovyClasspath = files ( subprojects . configurations . compile ) <nl> destinationDir = file ( " $ docs . destinationDir / api " ) <nl> windowTitle = " Grails $ grailsVersion " <nl> 
mmm a / subprojects / tooling - api / tooling - api . gradle <nl> ppp b / subprojects / tooling - api / tooling - api . gradle <nl> dependencies { <nl> integTestRuntime project ( ' : buildComparison ' ) <nl> integTestRuntime project ( " : ivy " ) <nl> integTestRuntime project ( " : maven " ) <nl> + integTestRuntime project ( " : toolingApiBuilders " ) <nl> } <nl> useTestFixtures ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> packageName " org . wordpress . android " <nl> - versionName " 2 . 7 Beta 1 " <nl> - versionCode 99 <nl> + versionName " 2 . 7 Beta 2 " <nl> + versionCode 100 <nl> minSdkVersion 9 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( allprojects - javaProjects ) { <nl> } <nl> } <nl> - configure ( subprojects - coreModuleProjects ) { <nl> + configure ( subprojects - coreModuleProjects - project ( ' : spring - security - samples - messages - jc ' ) ) { <nl> tasks . findByPath ( " artifactoryPublish " ) ? . enabled = false <nl> sonarRunner { <nl> skipProject = true <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " fr . tvbarthel . lib . blurdialogfragment . sample " <nl> minSdkVersion 9 <nl> targetSdkVersion 21 <nl> - versionCode 3 <nl> - versionName " 1 . 2 " <nl> + versionCode 4 <nl> + versionName " 1 . 3 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> } <nl> - apply plugin : ' org . jetbrains . intellij ' <nl> intellij { <nl> version ideaVersion <nl> pluginName ' Go ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task uploadUpdateVersion ( type : Exec ) { <nl> task distribute { <nl> group = ' Release ' <nl> - description = ' Distribute release artifacts to Bintray and S3 ' <nl> + description = ' Distribute release artifacts to S3 ' <nl> dependsOn uploadUpdateVersion <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 61 <nl> + versionCode 62 <nl> versionName " 1 . 4 . 0 - alpha " <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 7 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 8 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 6 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 7 . + ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 25 <nl> + versionCode 26 <nl> versionName " 1 . 8 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15087 <nl> - versionName = ' 21 . 1 . 2 ' <nl> + versionCode = 15090 <nl> + versionName = ' 22 . 0 . 0 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 35 . Final ' <nl> + nettyVersion = ' 4 . 0 . 36 . Final ' <nl> slf4jVersion = ' 1 . 7 . 20 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 7 . 3 ' <nl> 
mmm a / compiler / build . gradle <nl> ppp b / compiler / build . gradle <nl> protobuf { <nl> } <nl> } <nl> generateProtoTasks { <nl> - all ( ) * . dependsOn ' java_pluginExecutable ' <nl> + all ( ) . each { task - > <nl> + task . dependsOn ' java_pluginExecutable ' <nl> + task . inputs . file javaPluginPath <nl> + } <nl> ofSourceSet ( ' test ' ) * . plugins { <nl> grpc { } <nl> } <nl> 
mmm a / android / sdk / build . gradle <nl> ppp b / android / sdk / build . gradle <nl> plugins { <nl> id " com . github . hierynomus . license " version " 0 . 12 . 1 " <nl> } <nl> + allprojects { <nl> + repositories { <nl> + jcenter ( ) <nl> + } <nl> + } <nl> + <nl> apply plugin : ' com . android . library ' <nl> 
mmm a / crypto / crypto . gradle <nl> ppp b / crypto / crypto . gradle <nl> / / crypto module build file <nl> - dependencies { <nl> + jdkVersion = System . properties [ ' java . version ' ] <nl> + isJdk6 = jdkVersion > = ' 1 . 6 ' <nl> + test { <nl> + if ( ! isJdk6 ) { <nl> + exclude ' * * / EncryptorsTests . class ' <nl> + } <nl> } <nl> 
mmm a / gradle / analytics . gradle <nl> ppp b / gradle / analytics . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath group : ' com . gradleware . analytics ' , name : ' analytics - plugin ' , version : ' 0 . 1 - 20140912030554 ' <nl> + classpath group : ' com . gradleware . analytics ' , name : ' analytics - plugin ' , version : ' 0 . 1 - 20140912042052 ' <nl> } <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " alpha - 8 " <nl> - versionCode 260 <nl> + versionName " alpha - 9 " <nl> + versionCode 262 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / v7 / mediarouter / build . gradle <nl> ppp b / v7 / mediarouter / build . gradle <nl> dependencies { <nl> } <nl> android { <nl> - compileSdkVersion 19 <nl> + compileSdkVersion ' current ' <nl> buildToolsVersion ' 19 . 0 . 3 ' <nl> sourceSets { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> idea { <nl> project { <nl> - javaVersion = 1 . 6 <nl> + jdkName = " 1 . 6 " <nl> + languageLevel = " 1 . 5 " <nl> } <nl> } <nl> 
mmm a / subprojects / performance / src / templates / java - sw - model - project / build . gradle <nl> ppp b / subprojects / performance / src / templates / java - sw - model - project / build . gradle <nl> model { <nl> < % <nl> apiExports . each { <nl> % > <nl> - exports ' t $ { it } ' <nl> + exports ' $ { it } ' <nl> < % } % > <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / modules / build - module . gradle <nl> ppp b / modules / build - module . gradle <nl> configurations { <nl> printArtifactPublishCommands { <nl> onlyIf { <nl> - if ( buildFile . text . contains ( " project ( \ " " ) ) { <nl> + if ( project . name . endsWith ( " - test " ) | | buildFile . text . contains ( " project ( \ " " ) ) { <nl> return false <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 25 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 65 <nl> + versionCode 66 <nl> versionName " 3 . 1 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 62 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / gradle / ide - integration . gradle <nl> ppp b / gradle / ide - integration . gradle <nl> configure ( javaProjects ) { <nl> } <nl> } <nl> + / / STS - 2723 <nl> project ( ' : spring - security - samples - aspectj ' ) { <nl> task afterEclipseImport { <nl> ext . srcFile = file ( ' . classpath ' ) <nl> 
mmm a / jme3 - bullet - native / build . gradle <nl> ppp b / jme3 - bullet - native / build . gradle <nl> import java . nio . file . Paths <nl> String bulletSrcPath = bulletFolder + ' / src ' <nl> + if ( ! hasProperty ( ' mainClass ' ) ) { <nl> + ext . mainClass = ' ' <nl> + } <nl> + <nl> dependencies { <nl> compile project ( ' : jme3 - bullet ' ) <nl> } <nl> 
mmm a / auth / app / build . gradle <nl> ppp b / auth / app / build . gradle <nl> android { <nl> } <nl> } <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> + <nl> productFlavors { <nl> / / Build variant with minSdk 16 to include Facebook and FirebaseUI libraries . <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> nettyVersion = ' 4 . 0 . 33 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 12 ' <nl> + slf4jVersion = ' 1 . 7 . 13 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 6 . 3 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / python / educational - core / build . gradle <nl> ppp b / python / educational - core / build . gradle <nl> subprojects { <nl> afterEvaluate { <nl> tasks . getByName ( ' buildPlugin ' ) { <nl> - archiveName = " $ intellij . pluginName - $ version - $ { pycharmVersion } . zip " <nl> + archiveName = " $ intellij . pluginName - $ version - $ { buildNumber } . zip " <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> task filterAbout { <nl> } <nl> } <nl> - gradle . projectsEvaluated { <nl> - preBuild . dependsOn filterAbout <nl> - } <nl> \ No newline at end of file <nl> + preBuild . dependsOn filterAbout <nl> \ No newline at end of file <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - rc3 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 0 - rc4 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> license { <nl> ext . url = project . url <nl> ext . year = project . inceptionYear <nl> exclude " * * / * . info " <nl> + exclude " * * / * . json " <nl> exclude " assets / * * " <nl> header new File ( project ( " SpongeAPI " ) . getProjectDir ( ) , " HEADER . txt " ) <nl> sourceSets = project . sourceSets <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - alpha3 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - alpha4 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> debug { <nl> - applicationIdSuffix " . debug " <nl> versionNameSuffix " - debug " <nl> - minifyEnabled true <nl> + minifyEnabled false <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> 
mmm a / actor - sdk / sdk - core - android / android - google - push / build . gradle <nl> ppp b / actor - sdk / sdk - core - android / android - google - push / build . gradle <nl> android { <nl> minifyEnabled false <nl> } <nl> } <nl> + <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply from : ' gradle / filter . gradle ' <nl> apply from : ' gradle / indy . gradle ' <nl> - <nl> - if ( JavaVersion . current ( ) . java6Compatible ) { <nl> - apply from : ' gradle / bintray . gradle ' <nl> - } <nl> + apply from : ' gradle / bintray . gradle ' <nl> buildscript { <nl> repositories { <nl> 
mmm a / gradle / analytics . gradle <nl> ppp b / gradle / analytics . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath group : ' com . gradleware . analytics ' , name : ' analytics - plugin ' , version : ' 0 . 1 - 20140904010937 ' <nl> + classpath group : ' com . gradleware . analytics ' , name : ' analytics - plugin ' , version : ' 0 . 1 - 20140912030554 ' <nl> } <nl> } <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> sauceLabs { <nl> } <nl> if ( project . hasProperty ( " ciBuild " ) ) { <nl> - check . dependsOn chromeLinuxTest <nl> + check . dependsOn " allSauceTests " <nl> } <nl> installApp { <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> versionName " 4 . 0 " <nl> - versionCode 180 <nl> + versionCode 181 <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> 
mmm a / grails - test / build . gradle <nl> ppp b / grails - test / build . gradle <nl> dependencies { <nl> } <nl> / / needed for Spock <nl> - compile ' org . objenesis : objenesis : 1 . 4 ' <nl> - } <nl> \ No newline at end of file <nl> + compile " org . objenesis : objenesis : $ { objenesisVersion } " <nl> + } <nl> 
mmm a / spock - specs / specs . gradle <nl> ppp b / spock - specs / specs . gradle <nl> - apply from : profile ( " publishMaven " ) <nl> - <nl> displayName = " Spock Framework - Specs for Core Module " <nl> description = " Spock specifications for the Core Module . Yes , we eat our own dog food . " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' android - library ' <nl> android { <nl> - compileSdkVersion 16 <nl> + compileSdkVersion 17 <nl> buildToolsVersion ' 17 . 0 . 0 ' <nl> sourceSets { <nl> 
mmm a / demo / build . gradle <nl> ppp b / demo / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 9 <nl> targetSdkVersion 19 <nl> - versionCode 1 <nl> - versionName " 1 . 0 " <nl> + versionCode 2 <nl> + versionName " 1 . 1 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> jar { <nl> - from { configurations . compile . collect { it . isDirectory ( ) ? it : zipTree ( it ) } } <nl> manifest { <nl> attributes ( <nl> ' Implementation - Version ' : project . version <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile ' com . android . support : support - annotations : 21 . + ' <nl> + compile ' com . android . support : support - annotations : 22 . 0 . 0 ' <nl> } <nl> apply from : ' . / gradle - mvn - push . gradle ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> - ext . hibernateTargetVersion = ' 4 . 2 . 0 - SNAPSHOT ' <nl> + ext . hibernateTargetVersion = ' 4 . 3 . 0 - SNAPSHOT ' <nl> idea { <nl> project { <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> } <nl> android { <nl> - compileSdkVersion 21 <nl> - buildToolsVersion " 21 . 1 . 2 " <nl> + compileSdkVersion 22 <nl> + buildToolsVersion " 22 . 0 . 1 " <nl> defaultConfig { <nl> minSdkVersion 14 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> - ext . supportVersion = ' 22 . 0 . 1 ' <nl> + ext . supportVersion = ' 22 . 1 . 0 ' <nl> ext . extraVersion = 13 <nl> ext . supportRepoOut = ' ' <nl> ext . buildToolsVersion = ' 21 . 0 . 0 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15052 <nl> - versionName = ' 19 - beta3 ' <nl> + versionCode = 15053 <nl> + versionName = ' 19 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / h2o - core / build . gradle <nl> ppp b / h2o - core / build . gradle <nl> dependencies { <nl> test { <nl> useTestNG ( ) { <nl> + suites new File ( projectDir , ' src / test / resources / testng - multinode . xml ' ) <nl> suites new File ( projectDir , ' src / test / resources / testng . xml ' ) <nl> } <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 4 . 3 . 1 " <nl> - versionCode 195 <nl> + versionName " 4 . 3 . 2 " <nl> + versionCode 196 <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion ' 23 . 1 . 0 ' <nl> + buildToolsVersion ' 23 . 0 . 1 ' <nl> defaultConfig { <nl> minSdkVersion 9 <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> apply plugin : ' java ' / / Plugin as major conventions , overwrites status <nl> - sourceCompatibility = 1 . 6 <nl> - <nl> / / GRADLE - 2087 workaround , perform after java plugin <nl> status = project . hasProperty ( ' preferredStatus ' ) ? project . preferredStatus : ( version . contains ( ' SNAPSHOT ' ) ? ' snapshot ' : ' release ' ) <nl> 
mmm a / examples / kotlinExample / build . gradle <nl> ppp b / examples / kotlinExample / build . gradle <nl> buildscript { <nl> - ext . kotlin_version = ' 1 . 0 . 2 ' <nl> + ext . kotlin_version = ' 1 . 0 . 3 ' <nl> repositories { <nl> jcenter ( ) <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( ! project . hasProperty ( ' sonatypeRepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 0 . 3 . 5 " <nl> + version = " 0 . 3 . 6 " <nl> group = " com . facebook . rebound " <nl> signing { <nl> 
mmm a / apps / actor - android / build . gradle <nl> ppp b / apps / actor - android / build . gradle <nl> android { <nl> applicationIdSuffix " . business " <nl> buildConfigField STRING , HOCKEY , HOCKEY_ALPHA <nl> - buildConfigField STRING , MIXPANEL , MIXPANEL_ENTERPRISE <nl> } <nl> enterprise { <nl> android { <nl> applicationIdSuffix " . business " <nl> buildConfigField STRING , HOCKEY , HOCKEY_ENTERPRISE <nl> + buildConfigField STRING , MIXPANEL , MIXPANEL_ENTERPRISE <nl> } <nl> / / Development builds <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 168 <nl> - versionName " 3 . 1 . 0 . 11 " <nl> + versionCode 169 <nl> + versionName " 3 . 1 . 0 . 12 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> dependencies { <nl> compile " com . mikepenz : materialize : 0 . 1 . 2 " <nl> - compile ' com . mikepenz : iconics - core : 1 . 5 . 1 @ aar ' <nl> + compile ' com . mikepenz : iconics - core : 1 . 5 . 2 @ aar ' <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' intellij - go ' <nl> include ' utils ' , ' google - app - engine ' , ' google - app - engine : google - app - engine - yaml ' <nl> \ No newline at end of file <nl> 
new file mode 100644 <nl> index 000000000000 . . 259a5569ce96 <nl> mmm / dev / null <nl> ppp b / modules / apps / frontend - theme - porygon / build . gradle <nl> + apply plugin : " com . liferay . app . defaults . plugin " <nl> \ No newline at end of file <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> - versionCode 112 <nl> + versionCode 113 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15124 <nl> - versionName = ' 24 - beta4 ' <nl> + versionCode = 15125 <nl> + versionName = ' 24 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / Android / Sample / jni_plugin / build . gradle <nl> ppp b / Android / Sample / jni_plugin / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 2 " <nl> + buildToolsVersion " 23 . 0 . 1 " <nl> defaultConfig { <nl> minSdkVersion 8 <nl> 
mmm a / moco - runner / build . gradle <nl> ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> ext { <nl> - proguardVersion = ' 5 . 2 ' <nl> + proguardVersion = ' 5 . 2 . 1 ' <nl> } <nl> it . dependencies { <nl> 
mmm a / examples / kotlinExample / build . gradle <nl> ppp b / examples / kotlinExample / build . gradle <nl> android { <nl> } <nl> } <nl> + tasks . preBuild { <nl> + dependsOn " : realm : androidJar " <nl> + } <nl> + <nl> dependencies { <nl> compile " org . jetbrains . kotlin : kotlin - stdlib : $ kotlin_version " <nl> compile ' org . jetbrains . anko : anko : 0 . 6 . 2 - 19s ' <nl> 
mmm a / jphp - json - ext / build . gradle <nl> ppp b / jphp - json - ext / build . gradle <nl> dependencies { <nl> compile ' com . google . code . gson : gson : 2 . 2 . 4 ' <nl> testCompile ' junit : junit : 4 . + ' <nl> + testCompile project ( ' : jphp - zend - ext ' ) <nl> testCompile project ( ' : jphp - core ' ) . sourceSets . test . output <nl> } <nl> 
mmm a / subprojects / model - core / model - core . gradle <nl> ppp b / subprojects / model - core / model - core . gradle <nl> dependencies { <nl> compile libraries . slf4j_api <nl> compile project ( ' : baseServicesGroovy ' ) <nl> compile libraries . commons_lang <nl> - compile libraries . commons_collections <nl> compile libraries . jcip <nl> compile libraries . asm <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> tasks . withType ( GroovyCompile ) { <nl> - groovyOptions . forkOptions . memoryMaximumSize = " 256m " <nl> + groovyOptions . forkOptions . memoryMaximumSize = " 512m " <nl> allprojects { <nl> mustRunAfter tasks . withType ( CodeNarc ) <nl> } <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> task browserTest ( type : Test ) { <nl> } <nl> tasks . withType ( SauceTest ) { <nl> - jvmArgs ' - Dratpack . port = 5050 ' <nl> + systemProperty ' ratpack . port ' , ' 5050 ' <nl> } <nl> installApp { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 186 <nl> - versionName " 3 . 1 . 4 " <nl> + versionCode 187 <nl> + versionName " 3 . 1 . 4 . 1 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15001 <nl> - versionName = ' 15 - beta1 ' <nl> + versionCode = 15002 <nl> + versionName = ' 15 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> openejbVersion = ' 1 . 0 ' <nl> qdoxVersion = ' 1 . 12 . 1 ' <nl> slf4jVersion = ' 1 . 7 . 10 ' <nl> - xmlunitVersion = ' 1 . 5 ' <nl> + xmlunitVersion = ' 1 . 6 ' <nl> xstreamVersion = ' 1 . 4 . 8 ' <nl> spockVersion = ' 1 . 0 - groovy - 2 . 4 ' <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 22 <nl> - versionCode 15 <nl> + versionCode 16 <nl> versionName " 1 . 4 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / android / sdk / build . gradle <nl> ppp b / android / sdk / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . hierynomus . license ' <nl> - version = " 0 . 4 . 1 . 2 " <nl> + version = " 0 . 4 . 1 . 3 " <nl> android { <nl> compileSdkVersion 23 <nl> 
mmm a / realm / realm - library / build . gradle <nl> ppp b / realm / realm - library / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - project . archivesBaseName = " realm - android " <nl> + project . archivesBaseName = " realm - android - library " <nl> consumerProguardFiles ' proguard - rules . pro ' <nl> } <nl> } <nl> 
mmm a / Application / LinkBubble / build . gradle <nl> ppp b / Application / LinkBubble / build . gradle <nl> android { <nl> lintOptions { <nl> lintConfig file ( " lint . xml " ) <nl> + abortOnError false <nl> } <nl> } <nl> 
mmm a / samples / comparison / build . gradle <nl> ppp b / samples / comparison / build . gradle <nl> android { <nl> buildTypes { <nl> release { <nl> minifyEnabled true <nl> - proguardFiles getDefaultProguardFile ( ' proguard - android - optimize . txt ' ) , ' . . / proguard - fresco . pro ' <nl> + proguardFiles getDefaultProguardFile ( ' proguard - android - optimize . txt ' ) , ' . . / . . / proguard - fresco . pro ' <nl> } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 184 <nl> - versionName " 3 . 1 . 3 . 3 " <nl> + versionCode 185 <nl> + versionName " 3 . 1 . 3 . 4 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' checkstyle ' <nl> defaultTasks ' build ' <nl> group = ' com . lmax ' <nl> - version = new Version ( major : 3 , revision : 1 , stage : " Mahi " , snapshot : true ) <nl> + version = new Version ( major : 3 , revision : 1 ) <nl> ext { <nl> fullName = ' Disruptor Framework ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply { <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion " 1 . 0 - milestone - 9 " <nl> + gradleVersion = ' 1 . 1 - rc - 1 ' <nl> + jarFile = ' gradle / wrapper / gradle - wrapper . jar ' <nl> } <nl> 
mmm a / gradle / performanceTest . gradle <nl> ppp b / gradle / performanceTest . gradle <nl> configure ( [ performanceTest , performanceExperiments ] ) { <nl> } <nl> } <nl> - ext . performanceReportTasks = tasks . withType ( PerformanceTest ) <nl> + ext . performanceReportTasks = tasks . withType ( PerformanceReport ) <nl> task performanceReport ( type : PerformanceReport ) { <nl> classpath = sourceSets . performanceTest . runtimeClasspath <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15114 <nl> - versionName = ' 23 - beta5 ' <nl> + versionCode = 15115 <nl> + versionName = ' 23 . 0 . 0 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / UltimateRecyclerView / ultimaterecyclerview / build . gradle <nl> ppp b / UltimateRecyclerView / ultimaterecyclerview / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> - compileSdkVersion 21 <nl> + compileSdkVersion 22 <nl> buildToolsVersion " 21 . 1 . 2 " <nl> defaultConfig { <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 5 . 2 - rc - 2 " <nl> - versionCode 247 <nl> + versionName " 5 . 2 " <nl> + versionCode 249 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> / / Establish version and status <nl> - ext . releaseVersion = ' 0 . 3 . 0 ' <nl> + ext . releaseVersion = ' 0 . 3 . 1 ' <nl> ext . githubProjectName = ' archaius ' <nl> / / group = ' com . netflix . archaius ' <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> compass { <nl> debugInfo = false <nl> } <nl> - run . dependsOn compassWatch <nl> + run . dependsOn compassCompile <nl> task createScriptsDir { <nl> doLast { <nl> 
mmm a / d2 / build . gradle <nl> ppp b / d2 / build . gradle <nl> task scripts ( dependsOn : packup , type : Zip ) { <nl> baseName = ' lb - tool ' <nl> description = " Zip a package up with all scripts , log4js , and jars . " <nl> } <nl> + <nl> + configurations { <nl> + testArtifacts { <nl> + visible = true <nl> + } <nl> + } <nl> 
mmm a / picasso - sample / build . gradle <nl> ppp b / picasso - sample / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion rootProject . ext . minSdkVersion <nl> - minSdkVersion rootProject . ext . targetSdkVersion <nl> + targetSdkVersion rootProject . ext . targetSdkVersion <nl> applicationId ' com . example . picasso ' <nl> versionCode 1 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> sourceSets . test . java . srcDir ' src / main / java ' <nl> + / / Establish a provided scope <nl> + configurations { <nl> + compile . extendsFrom provided <nl> + } <nl> + <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> mavenCentral ( ) <nl> } <nl> - tasks . withType ( Compile ) { <nl> + tasks . withType ( JavaCompile ) { <nl> options . encoding = " UTF - 8 " <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 14 . 0 . 1 ' <nl> - nettyVersion = ' 3 . 6 . 5 . Final ' <nl> + nettyVersion = ' 3 . 6 . 6 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> logbackVersion = ' 1 . 0 . 13 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> classifier = ' javadoc ' <nl> from javadoc . destinationDir <nl> } <nl> + task testJar ( type : Jar ) { <nl> + classifier = ' tests ' <nl> + from sourceSets . test . output <nl> + } <nl> artifacts { <nl> archives sourcesJar <nl> archives javadocJar <nl> + archives testJar <nl> } <nl> uploadArchives { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> - id ' org . jetbrains . intellij ' version " 0 . 1 . 8 " <nl> + id ' org . jetbrains . intellij ' version " 0 . 1 . 10 " <nl> id " de . undercouch . download " version " 3 . 1 . 0 " <nl> } <nl> 
mmm a / DaoCore / build . gradle <nl> ppp b / DaoCore / build . gradle <nl> apply plugin : ' signing ' <nl> group = ' org . greenrobot ' <nl> archivesBaseName = ' greendao ' <nl> - version = ' 3 . 1 . 1 ' <nl> + version = ' 3 . 2 . 0 - SNAPSHOT ' <nl> sourceCompatibility = 1 . 7 <nl> targetCompatibility = 1 . 7 <nl> 
mmm a / Gradle / HelloBuildConfig / build . gradle <nl> ppp b / Gradle / HelloBuildConfig / build . gradle <nl> android { <nl> mezzanine { <nl> applicationIdSuffix " . mezz " <nl> debuggable true <nl> - signingConfig signingConfigs . release <nl> buildConfigField " String " , " SERVER_URL " , ' " http : / / stage . this - is - so - fake . com " ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 10 . 19 ' <nl> httpComponentVersion = ' 4 . 5 . 1 ' <nl> - jsonpathVersion = ' 2 . 0 . 0 ' <nl> + jsonpathVersion = ' 2 . 1 . 0 ' <nl> freemarkerVersion = ' 2 . 3 . 23 ' <nl> } <nl> 
mmm a / gradle / wrapper . gradle <nl> ppp b / gradle / wrapper . gradle <nl> task downloadWrapper ( type : Wrapper ) { <nl> description = " Download the gradle wrapper and requisite files . Overwrites any existing wrapper files . " <nl> gradleVersion = project . gradleVersion <nl> } <nl> + <nl> + defaultTasks ' downloadWrapper ' <nl> 
mmm a / hugo - example / build . gradle <nl> ppp b / hugo - example / build . gradle <nl> android { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> } <nl> + <nl> + buildTypes { <nl> + dev { <nl> + packageNameSuffix ' . dev ' <nl> + } <nl> + } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - alpha2 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - alpha3 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 - alpha6 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> package : " name . gudong . translate " , <nl> buildToolsVersion : " 23 . 0 . 2 " , <nl> compileVersion : 23 , <nl> - minSdk : 19 , <nl> + minSdk : 16 , <nl> targetSdk : 23 , <nl> version_code : 063 , <nl> version_name : " 0 . 6 . 3 " <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> lintOptions { <nl> abortOnError false <nl> } <nl> + <nl> + adbOptions { <nl> + timeOutInMs 30000 <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' com . android . library ' <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . theartofdev . edmodo ' <nl> PUBLISH_ARTIFACT_ID = ' android - image - cropper ' <nl> - PUBLISH_VERSION = ' 1 . 1 . 0 ' <nl> + PUBLISH_VERSION = ' 1 . 1 . 1 ' <nl> / / gradlew clean build generateRelease <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 233 <nl> + versionCode = 234 <nl> versionName = ' 12 ' <nl> } <nl> 
mmm a / maven_push . gradle <nl> ppp b / maven_push . gradle <nl> afterEvaluate { project - > <nl> source = android . sourceSets . main . allJava <nl> } <nl> - task androidJavadocsJar ( type : Jar ) { <nl> + task androidJavadocsJar ( type : Jar , dependsOn : javadoc ) { <nl> classifier = ' javadoc ' <nl> / / basename = artifact_id <nl> from androidJavadocs . destinationDir <nl> 
mmm a / enterprise / server / build . gradle <nl> ppp b / enterprise / server / build . gradle <nl> dependencies { <nl> / / } <nl> } <nl> + javadoc . classpath + = project . sourceSets . test . compileClasspath <nl> + <nl> sourceSets { <nl> integrationTest { <nl> / / TODO rename webtest into integrationTest <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 22 <nl> - versionCode 9 <nl> + versionCode 10 <nl> versionName " 1 . 2 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> / / set heap size for the test JVM ( s ) <nl> minHeapSize = " 256m " <nl> maxHeapSize = " 512m " <nl> - <nl> - / / set JVM arguments for the test JVM ( s ) <nl> - jvmArgs ' - XX : MaxPermSize = 256m ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 44 <nl> + versionCode 45 <nl> versionName " 2 . 5 " <nl> vectorDrawables . useSupportLibrary = true <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 234 <nl> + versionCode = 235 <nl> versionName = ' 12 ' <nl> } <nl> 
mmm a / subprojects / groovy - jmx / build . gradle <nl> ppp b / subprojects / groovy - jmx / build . gradle <nl> apply plugin : ' code - quality ' <nl> dependencies { <nl> compile project ( ' : ' ) <nl> + testCompile project ( ' : ' ) <nl> } <nl> 
mmm a / subprojects / publish / publish . gradle <nl> ppp b / subprojects / publish / publish . gradle <nl> dependencies { <nl> groovy libraries . groovy <nl> compile project ( ' : core ' ) <nl> - testCompile project ( ' : plugins ' ) <nl> } <nl> useTestFixtures ( ) <nl> \ No newline at end of file <nl> 
mmm a / ratpack - lazybones / ratpack - lazybones . gradle <nl> ppp b / ratpack - lazybones / ratpack - lazybones . gradle <nl> test { <nl> inputs . dir compiledTemplateDir <nl> dependsOn prepareTestResources <nl> + <nl> + / / Don ' t run these tests for the joint Groovy build <nl> + onlyIf { ! System . getenv ( " CI_GROOVY_VERSION " ) } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task distDoc ( type : Zip , dependsOn : doc ) { <nl> } <nl> task syncDoc ( type : Copy , dependsOn : doc ) { <nl> + inputs . files javadoc . outputs . files <nl> + inputs . files groovydoc . outputs . files <nl> + <nl> destinationDir ( file ( " $ buildDir / html " ) ) <nl> into ( ' api ' ) { <nl> from javadoc . destinationDir <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15042 <nl> - versionName = ' 18 - beta3 ' <nl> + versionCode = 15043 <nl> + versionName = ' 18 . 0 . 0 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task clean ( type : Delete ) { <nl> homeSrcDir <nl> } <nl> - task allDependencies ( dependsOn : { subprojects * . implicitTasks * . dependencies } ) <nl> - <nl> / / From this point on we need the subprojects to be fully configured , so force their full evaluation <nl> subprojects . each { evaluationDependsOn it . path } <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> task smallJavaSwModelProject ( type : JvmProjectGeneratorTask ) { <nl> } <nl> task largeJavaSwModelProject ( type : JvmProjectGeneratorTask ) { <nl> - projects = 100 <nl> + projects = 50 <nl> sourceFiles = 1000 <nl> } <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> task forceCandidate { <nl> } <nl> release . dependsOn ( forceCandidate ) <nl> + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) <nl> task releaseSnapshot ( dependsOn : [ uploadArtifactory , uploadMavenCentral ] ) <nl> / / Ensure our versions look like the project status before publishing <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 205 <nl> - versionName ' 3 . 2 . 1 ' <nl> + versionCode 206 <nl> + versionName ' 3 . 2 . 2 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task release { <nl> } <nl> } <nl> + task incrementNextVersion < < { <nl> + releases . incrementNextVersion ( ) <nl> + } <nl> + <nl> task uploadAll { <nl> description = ' Uploads binaries , sources and documentation . Does not upload the website ! Useful when release procedure breaks at upload and only upload tasks should executed again ' <nl> dependsOn uploadArchives , uploadDists , ' : docs : uploadDocs ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> } <nl> } <nl> 
mmm a / EventBus / build . gradle <nl> ppp b / EventBus / build . gradle <nl> uploadArchives { <nl> println " Settings sonatypeUsername / sonatypePassword missing / incomplete for $ { project . name } " <nl> } <nl> + pom . artifactId = ' eventbus ' <nl> pom . project { <nl> name ' EventBus ' <nl> packaging ' jar ' <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 5 . 4 - rc - 1 " <nl> - versionCode 258 <nl> + versionName " 5 . 4 - rc - 2 " <nl> + versionCode 261 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 209 <nl> - versionName ' 3 . 2 . 5 ' <nl> + versionCode 210 <nl> + versionName ' 3 . 2 . 6 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> / / Establish version and status <nl> - ext . releaseVersion = ' 0 . 3 . 3 ' <nl> + ext . releaseVersion = ' 0 . 4 . 0 ' <nl> ext . githubProjectName = ' archaius ' <nl> / / group = ' com . netflix . archaius ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15144 <nl> - versionName = ' 26 ' <nl> + versionCode = 15145 <nl> + versionName = ' 26 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> java9IntegTest { <nl> } <nl> } <nl> - verifyTestFilesCleanup . errorWhenNotEmpty = false <nl> - <nl> 
mmm a / examples / kotlinExample / build . gradle <nl> ppp b / examples / kotlinExample / build . gradle <nl> buildscript { <nl> - ext . kotlin_version = ' 1 . 0 . 0 ' <nl> + ext . kotlin_version = ' 1 . 0 . 1 ' <nl> repositories { <nl> jcenter ( ) <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 224 <nl> - versionName ' 3 . 3 . 6 ' <nl> + versionCode 225 <nl> + versionName ' 3 . 3 . 7 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 17 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 21 . Final ' <nl> + nettyVersion = ' 4 . 0 . 22 . Final ' <nl> slf4jVersion = ' 1 . 7 . 7 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 4 . 1 . 2 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' org . robolectric : robolectric - gradle - plugin : 0 . 11 . + ' <nl> + classpath ' org . robolectric : robolectric - gradle - plugin : 0 . 12 . + ' <nl> classpath ' com . android . tools . build : gradle : 0 . 12 . + ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15033 <nl> - versionName = ' 17 - beta4 ' <nl> + versionCode = 15034 <nl> + versionName = ' 17 - beta5 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> - supportLibVersion = ' 23 . 3 . 0 ' <nl> + supportLibVersion = ' 23 . 4 . 0 ' <nl> } <nl> dependencies { <nl> 
mmm a / simplecropview - sample / build . gradle <nl> ppp b / simplecropview - sample / build . gradle <nl> android { <nl> assets . srcDirs = [ ' src / main / assets ' , ' src / main / assets / ' ] <nl> } <nl> } <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> ext { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> import org . gradle . build . docs . ExtractSnippetsTask <nl> defaultTasks " clean " , " dists " <nl> - archivesBaseName = ' gradle ' <nl> - <nl> usePlugin ( ' groovy ' ) <nl> + archivesBaseName = ' gradle ' <nl> + <nl> sourceCompatibility = 1 . 5 <nl> targetCompatibility = 1 . 5 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15032 <nl> - versionName = ' 17 - beta3 ' <nl> + versionCode = 15033 <nl> + versionName = ' 17 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> mainClassName = " org . ratpackframework . groovy . bootstrap . RatpackMain " <nl> run { <nl> dependsOn configureRun , prepareContent <nl> workingDir = " src / ratpack " <nl> + jvmArgs " - Dratpack . reloadable = true " <nl> } <nl> installApp { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 18 <nl> - versionName " 1 . 5 " <nl> + versionCode 19 <nl> + versionName " 1 . 6 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / cglib - and - asm / build . gradle <nl> ppp b / cglib - and - asm / build . gradle <nl> archivesBaseName = ' cglib - and - asm ' <nl> / / Make sure sources also belong to the jar <nl> archive_jar . fileSet ( dir : " src " ) <nl> - destinationDir = ' build ' <nl> dists { <nl> zip ( ) { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> buildTypes { <nl> release { <nl> - minifyEnabled true <nl> - proguardFiles ' proguard - project . txt ' <nl> + minifyEnabled false <nl> } <nl> } <nl> } <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> subprojects { project - > <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> + / / API level 11 + - > version 11xxx <nl> versionCode = 11242 <nl> versionName = ' 13 - beta3 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> - ext . hibernateTargetVersion = ' 4 . 3 . 0 . Beta4 ' <nl> + ext . hibernateTargetVersion = ' 4 . 3 . 0 - SNAPSHOT ' <nl> ext . javaLanguageLevel = " 1 . 6 " <nl> idea { <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> task javadocJar ( type : Jar , dependsOn : javadoc ) { <nl> } <nl> artifacts { <nl> + archives jar <nl> archives sourcesJar <nl> archives javadocJar <nl> } <nl> 
mmm a / gradle / quality . gradle <nl> ppp b / gradle / quality . gradle <nl> allprojects { <nl> sourceSets = [ sourceSets . main ] <nl> } <nl> tasks . withType ( FindBugs ) { <nl> + effort = ' max ' <nl> reports { <nl> xml . enabled = false <nl> html . enabled = true <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> apply plugin : ' android - library ' <nl> - dependencies { <nl> - compile ' com . android . support : support - v4 : 18 . 0 . + ' <nl> - } <nl> - <nl> android { <nl> compileSdkVersion 18 <nl> buildToolsVersion ' 18 . 0 . 1 ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 23 <nl> - versionName " 1 . 6 " <nl> + versionCode 24 <nl> + versionName " 1 . 7 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> } <nl> 
mmm a / release . gradle <nl> ppp b / release . gradle <nl> commitRelease . doLast { <nl> } <nl> } <nl> - task createGithubRelease ( type : Exec ) < < { <nl> + task createGithubRelease ( type : Exec ) { <nl> def jsonData = JsonOutput . toJson ( [ <nl> tag_name : " v $ versionName " , <nl> name : " v $ versionName " , <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' spock - specs ' <nl> include ' spock - spring ' <nl> include ' spock - tapestry ' <nl> include ' spock - unitils ' <nl> - include ' spock - grails - support ' <nl> + / / include ' spock - grails - support ' <nl> / / include ' spock - grails ' <nl> \ No newline at end of file <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 213 <nl> - versionName ' 3 . 2 . 9 ' <nl> + versionCode 214 <nl> + versionName ' 3 . 2 . 10 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / rajawali / build . gradle <nl> ppp b / rajawali / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile ' com . android . support : support - v13 : 22 . 0 . 0 ' <nl> + compile ' com . android . support : support - v4 : 21 . 0 . 3 ' <nl> } <nl> apply from : ' maven_push . gradle ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15084 <nl> - versionName = ' 21 . 1 . 0 - beta5 ' <nl> + versionCode = 15085 <nl> + versionName = ' 21 . 1 . 0 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 190 <nl> - versionName " 3 . 1 . 5 . 1 " <nl> + versionCode 191 <nl> + versionName " 3 . 1 . 5 . 2 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> from sourceSets . test . output <nl> } <nl> - task javadocJar ( type : Jar , dependsOn : javadoc ) { <nl> + task javadocJar ( type : Jar ) { <nl> classifier = ' javadoc ' <nl> from javadoc . destinationDir <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15120 <nl> - versionName = ' 24 - beta1 ' <nl> + versionCode = 15121 <nl> + versionName = ' 24 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext . libraries = [ <nl> exclude ( module : ' slf4j - api ' ) <nl> exclude ( module : ' jcl - over - slf4j ' ) <nl> exclude ( module : ' nimbus - jose - jwt ' ) <nl> + exclude ( module : ' json - smart ' ) <nl> force = true <nl> } , <nl> dependencies . create ( " org . pac4j : pac4j - mongo : $ pac4jVersion " ) { <nl> 
mmm a / gradle / upload . gradle <nl> ppp b / gradle / upload . gradle <nl> - boolean isUsingBintray = rootProject . bintrayUser & & rootProject . bintrayPassword <nl> + boolean isUsingBintray = rootProject . hasProperty ( ' bintrayUser ' ) & & rootProject . bintrayUser & & <nl> + rootProject . hasProperty ( ' bintrayPassword ' ) & & rootProject . bintrayPassword <nl> + <nl> if ( isUsingBintray ) { <nl> logger . lifecycle ' Deployment environment set to Bintray ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> ext . libraries = [ <nl> supportv4 : ' com . android . support : support - v4 : 19 . 0 . + ' , <nl> - okhttp : ' com . squareup . okhttp : okhttp : 1 . 3 . 0 ' <nl> + okhttp : ' com . squareup . okhttp : okhttp : 1 . 5 . 0 ' <nl> ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 218 <nl> + versionCode = 219 <nl> versionName = ' 12 - beta5 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> allprojects { <nl> group = ' io . realm ' <nl> - version = ' 0 . 80 ' <nl> + version = ' 0 . 1 . 0 ' <nl> ext . coreVersion = ' 0 . 82 . 2 ' <nl> repositories { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' checkstyle ' <nl> apply plugin : ' pmd ' <nl> apply plugin : ' findbugs ' <nl> + apply plugin : ' maven ' <nl> group = ' org . mongodb ' <nl> version = ' 3 . 0 . 0 - SNAPSHOT ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def keyStore = file ( ' meizhi . keystore ' ) <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 1 " <nl> + buildToolsVersion " 23 . 0 . 0 " <nl> defaultConfig { <nl> applicationId " me . drakeet . meizhi " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11255 <nl> - versionName = ' 13 . 0 . 1 ' <nl> + versionCode = 11256 <nl> + versionName = ' 13 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / telecine / build . gradle <nl> ppp b / telecine / build . gradle <nl> android { <nl> } <nl> lintOptions { <nl> + textReport true <nl> textOutput ' stdout ' <nl> + warning ' MissingTranslation ' <nl> } <nl> dexOptions { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . netflix . nebula : gradle - extra - configurations - plugin : 1 . 12 . + ' <nl> + classpath ' com . netflix . nebula : gradle - extra - configurations - plugin : 2 . 0 . 1 ' <nl> } <nl> } <nl> 
mmm a / modules / settings . gradle <nl> ppp b / modules / settings . gradle <nl> FileTree fileTree = fileTree ( rootDir ) { <nl> exclude " * * / bin / " <nl> exclude " sdk / * / samples / " <nl> + exclude " sdk / gradle - templates / src / " <nl> if ( Boolean . getBoolean ( " portal . build " ) ) { <nl> String excludesString = System . properties [ " portal . build . modules . excludes " ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 237 <nl> - versionName = ' 12 . 2 ' <nl> + versionCode = 238 <nl> + versionName = ' 12 . 2 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply from : file ( ' gradle / release . gradle ' ) <nl> apply plugin : ' war ' <nl> apply plugin : ' jetty ' <nl> + apply plugin : ' eclipse ' <nl> dependencies { <nl> compile ' javax . ws . rs : jsr311 - api : 1 . 1 . 1 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 10 . 19 ' <nl> httpComponentVersion = ' 4 . 5 . 2 ' <nl> - jsonpathVersion = ' 2 . 1 . 0 ' <nl> + jsonpathVersion = ' 2 . 2 . 0 ' <nl> freemarkerVersion = ' 2 . 3 . 23 ' <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 2 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 - beta1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 179 <nl> - versionName " 8 . 2 " <nl> + versionCode 181 <nl> + versionName " 8 . 3 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / h2o - app / build . gradle <nl> ppp b / h2o - app / build . gradle <nl> dependencies { <nl> compile project ( " : h2o - web " ) <nl> compile project ( " : h2o - algos " ) <nl> compile project ( " : h2o - core " ) <nl> - compile project ( " : h2o - scala " ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15061 <nl> - versionName = ' 20 - beta2 ' <nl> + versionCode = 15062 <nl> + versionName = ' 20 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> id ' jpbetz ' <nl> name ' Joe Betz ' <nl> } <nl> + developer { <nl> + id ' karanparikh ' <nl> + name ' Karan Parikh ' <nl> + } <nl> } <nl> } <nl> } <nl> 
mmm a / caffeine / testing . gradle <nl> ppp b / caffeine / testing . gradle <nl> tasks . withType ( Test ) { <nl> options . includeGroups = [ ' slow ' ] <nl> } else { <nl> options { <nl> + threadCount = System . env . ' CI ' ? 2 : 6 <nl> excludeGroups = [ ' slow ' ] <nl> parallel = ' methods ' <nl> - threadCount = 6 <nl> } <nl> } <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 2 . 0 - beta2 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / gradle / release - process . gradle <nl> ppp b / gradle / release - process . gradle <nl> release { <nl> dependsOn subprojects . install <nl> dependsOn publishWiki <nl> - dependsOn draftGhRelease <nl> + / / dependsOn draftGhRelease <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> - ext . releaseVersion = ' 1 . 0 ' <nl> + ext . releaseVersion = ' 1 . 1 ' <nl> ext . githubProjectName = ' eureka ' <nl> group = ' com . netflix . eureka ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildTypes { <nl> } <nl> / / Run a single performance scenario <nl> - performanceScenarios { <nl> - tasks " performance : performanceScenario " <nl> + fullPerformanceTests { <nl> + tasks " performance : fullPerformanceTest " <nl> projectProperties useIncomingDistributions : true <nl> } <nl> 
mmm a / rajawali / build . gradle <nl> ppp b / rajawali / build . gradle <nl> version = VERSION_NAME <nl> status = ' debug ' <nl> android { <nl> - compileSdkVersion 21 <nl> - buildToolsVersion " 21 . 1 . 2 " <nl> + compileSdkVersion 22 <nl> + buildToolsVersion " 22 . 0 . 0 " <nl> defaultConfig { <nl> minSdkVersion 15 <nl> - targetSdkVersion 21 <nl> + targetSdkVersion 22 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( " : streaming " ) { <nl> from zipTree ( it ) <nl> } <nl> } <nl> + <nl> + uploadArchives . onlyIf { hadoop_version ! = " 1 . 0 " } <nl> } <nl> project ( " : flume " ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' com . jfrog . artifactory - upload ' <nl> group = ' com . sk89q . worldedit ' <nl> - version = ' 6 . 1 . 1 - SNAPSHOT ' <nl> + version = ' 6 . 1 . 3 - SNAPSHOT ' <nl> ext . internalVersion = version + " ; " + gitCommitHash <nl> sourceCompatibility = 1 . 7 <nl> 
mmm a / DaoCore / build . gradle <nl> ppp b / DaoCore / build . gradle <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> group = ' de . greenrobot ' <nl> - version = ' 1 . 3 . 0 - beta - 1 ' <nl> + version = ' 1 . 3 . 0 ' <nl> sourceCompatibility = 1 . 6 <nl> def isSnapshot = version . endsWith ( ' - SNAPSHOT ' ) <nl> 
new file mode 100644 <nl> index 0000000 . . 93517e4 <nl> mmm / dev / null <nl> ppp b / gradle / dex . gradle <nl> + task hello < < { <nl> + println " 11111 " <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> maven { url ' . . / . . / prebuilts / tools / common / m2 / internal ' } <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 2 . 0 - rc1 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 2 . 3 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' base ' <nl> allprojects { <nl> - version = ' 3 . 1 . 0 - SNAPSHOT ' <nl> + version = ' 3 . 1 . 0 . CI - SNAPSHOT ' <nl> releaseBuild = version . endsWith ( ' RELEASE ' ) <nl> snapshotBuild = version . endsWith ( ' SNAPSHOT ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15012 <nl> - versionName = ' 16 - beta3 ' <nl> + versionCode = 15013 <nl> + versionName = ' 16 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> junitVersion = ' 4 . 11 ' <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 10 . 8 ' <nl> - httpComponentVersion = ' 4 . 3 . 5 ' <nl> + httpComponentVersion = ' 4 . 3 . 6 ' <nl> jsonpathVersion = ' 1 . 1 . 0 ' <nl> freemarkerVersion = ' 2 . 3 . 21 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { subProject - > <nl> defaultTasks ' build ' <nl> group = ' org . hibernate ' <nl> - version = ' 4 . 0 . 0 . CR5 ' <nl> + version = ' 4 . 0 . 0 - SNAPSHOT ' <nl> / / minimize changes , at least for now ( gradle uses ' build ' by default ) . . <nl> buildDir = " target " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 20 . 0 ' <nl> nettyVersion = ' 4 . 1 . 4 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 21 ' <nl> + slf4jVersion = ' 1 . 7 . 22 ' <nl> commonsIoVersion = ' 2 . 5 ' <nl> jacksonVersion = ' 2 . 8 . 4 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + name ' gradle - template ' <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15163 <nl> - versionName = ' 28 ' <nl> + versionCode = 15170 <nl> + versionName = ' 29 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 83 <nl> + versionCode 84 <nl> versionName " 1 . 6 . 0 " <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> def non_os_modules = [ <nl> ' databus3 - scripts ' , <nl> ' databus3 - linkedin - relay ' , <nl> ' perf ' , <nl> - ' integration - test ' <nl> + ' integration - test ' , <nl> + ' sitetools ' <nl> ] <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> tasks . withType ( GroovyCompile ) { <nl> - groovyOptions . fork = false <nl> + groovyOptions . forkOptions . memoryMaximumSize = " 256m " <nl> allprojects { <nl> mustRunAfter tasks . withType ( CodeNarc ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' eclipse ' / / Only used so the Eclipse STS Gradle plugin can see <nl> defaultTasks ' build ' <nl> group = ' com . lmax ' <nl> - version = new Version ( major : 3 , stage : ' beta3 ' ) <nl> + version = new Version ( major : 3 , stage : ' beta4 ' ) <nl> ext { <nl> fullName = ' Disruptor Framework ' <nl> 
mmm a / actor - apps / core - js / build . gradle <nl> ppp b / actor - apps / core - js / build . gradle <nl> gwt { <nl> compiler { <nl> strict = true ; <nl> style = " OBF " <nl> - enableClosureCompiler = true ; <nl> + enableClosureCompiler = false ; <nl> disableClassMetadata = true ; <nl> disableCastChecking = true ; <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> versionName " 4 . 6 . 1 " <nl> - versionCode 214 <nl> + versionCode 216 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' com . android . library ' <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . theartofdev . edmodo ' <nl> PUBLISH_ARTIFACT_ID = ' android - image - cropper ' <nl> - PUBLISH_VERSION = ' 1 . 0 . 6 ' <nl> + PUBLISH_VERSION = ' 1 . 0 . 7 ' <nl> / / gradlew clean build generateRelease <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 223 <nl> + versionCode = 224 <nl> versionName = ' 12 - beta6 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> avsGroup = ' com . wire ' <nl> / / proprietary avs artifact config <nl> - customAvsVersion = ' 2 . 9 . 8 @ aar ' <nl> + customAvsVersion = ' 2 . 9 . 3 @ aar ' <nl> customAvsInternalVersion = customAvsVersion <nl> customAvsName = ' avs ' <nl> customAvsGroup = ' com . wearezeta . avs ' <nl> 
mmm a / requery - android / build . gradle <nl> ppp b / requery - android / build . gradle <nl> android { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> } <nl> - <nl> - dataBinding { <nl> - enabled = true <nl> - } <nl> } <nl> dependencies { <nl> 
mmm a / android / sdk / build . gradle <nl> ppp b / android / sdk / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . hierynomus . license ' <nl> - version = " 1 . 5 . 1 . 5 " <nl> + version = " 1 . 5 . 1 . 6 " <nl> android { <nl> compileSdkVersion 23 <nl> 
mmm a / subprojects / diagnostics / diagnostics . gradle <nl> ppp b / subprojects / diagnostics / diagnostics . gradle <nl> dependencies { <nl> compile libraries . groovy <nl> compile project ( ' : core ' ) <nl> + compile project ( ' : reporting ' ) <nl> compile project ( ' : plugins ' ) <nl> compile project ( ' : coreImpl ' ) <nl> } <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> task ciZip ( type : Zip ) { <nl> archiveName = " ci . zip " <nl> destinationDir = buildDir <nl> } <nl> - <nl> - task wrapper ( type : Wrapper ) { <nl> - gradleVersion = " 1 . 6 " <nl> - } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 162 <nl> - versionName " 3 . 1 . 0 . 5 " <nl> + versionCode 163 <nl> + versionName " 3 . 1 . 0 . 6 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " alpha - 23 " <nl> - versionCode 309 <nl> + versionName " 6 . 0 - rc - 1 " <nl> + versionCode 308 <nl> minSdkVersion 16 <nl> targetSdkVersion 24 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> install { <nl> } <nl> signing { <nl> - required { version . release } <nl> + required { version . release & & gradle . taskGraph . hasTask ( " uploadArchives " ) } <nl> sign configurations . archives <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> ext { <nl> plugin_head_version = ' 2cd68c235f8b0fdf667090e8d2653d80e4183473 ' <nl> plugin_bigdesk_version = ' 2 . 2 . 2c ' <nl> plugin_segmentspy_version = ' 0 . 2 . 0 ' <nl> - plugin_crateadmin_version = ' 0 . 5 . 2 ' <nl> + plugin_crateadmin_version = ' 0 . 6 . 0 ' <nl> crash_version = ' 0 . 8 . 3 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / jphp - example - project / build . gradle <nl> ppp b / jphp - example - project / build . gradle <nl> dependencies { <nl> compile project ( ' : jphp - core ' ) <nl> compile project ( ' : jphp - swing - ext ' ) <nl> compile project ( ' : jphp - zend - ext ' ) <nl> - compile project ( ' : jphp - net - ext ' ) <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> } <nl> sourceSets { <nl> - / / Common code for JVM tests lives in src / jvmTestsCommon . <nl> - test . java . srcDir ' src / jvmTestsCommon / java ' <nl> - <nl> / / Unit tests live in src / unitTest . <nl> test . java . srcDir ' src / unitTests / java ' <nl> 
mmm a / drawee / build . gradle <nl> ppp b / drawee / build . gradle <nl> android { <nl> compileSdkVersion 21 <nl> packagingOptions { <nl> + exclude ' NOTICE ' <nl> exclude ' LICENSE ' <nl> exclude ' LICENSE . txt ' <nl> exclude ' META - INF / LICENSE ' <nl> 
mmm a / xabber / build . gradle <nl> ppp b / xabber / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> - smackVersion = ' 4 . 1 . 3 ' <nl> + smackVersion = ' 4 . 1 . 4 ' <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> / / apply from : " $ { githubBase } / gradle_cobertura / gradle_cobertura / 1 . 0 - rc4 / coberturainit . gradle " <nl> repositories { <nl> - mavenRepo urls : [ ' https : / / oss . sonatype . org ' ] <nl> + mavenRepo url : [ ' https : / / oss . sonatype . org ' ] <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> androidBuildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - androidVersionCode = 15173 <nl> - androidVersionName = ' 29 ' <nl> + androidVersionCode = 15174 <nl> + androidVersionName = ' 29 . 0 . 1 ' <nl> supportVersion = ' 23 . 1 . 1 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> java . srcDirs = [ " tests / src " ] <nl> } <nl> } <nl> + lintOptions { <nl> + / / TODO : fix errors and reenable . <nl> + abortOnError false <nl> + } <nl> } <nl> 
mmm a / flexibleAdapter / build . gradle <nl> ppp b / flexibleAdapter / build . gradle <nl> android { <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> versionCode 4 <nl> - versionName " 2015 . 07 . 20 " <nl> + versionName " 2015 . 07 . 21 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> publishedGroupId = ' com . tbruyelle . rxpermissions ' <nl> artifact = ' rxpermissions ' <nl> libraryName = ' RxPermissions ' <nl> - libraryVersion = ' 0 . 7 . 1 ' <nl> + libraryVersion = ' 0 . 8 . 0 ' <nl> libraryDescription = ' A wrapper for Android 6 . 0 permissions ' <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> if ( project . hasProperty ( ' storePassword ' ) <nl> android . signingConfigs . release . keyAlias = keyAlias <nl> android . signingConfigs . release . keyPassword = keyPassword <nl> } else { <nl> - buildTypes . release . signingConfig = null <nl> + android . buildTypes . release . signingConfig = null <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15111 <nl> - versionName = ' 23 - beta2 ' <nl> + versionCode = 15112 <nl> + versionName = ' 23 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> springVersion = " 4 . 0 . 3 . RELEASE " <nl> ehcacheVersion = " 2 . 4 . 6 " <nl> junitVersion = " 4 . 11 " <nl> - concurrentlinkedhashmapVersion = " 1 . 3 . 1 " <nl> + concurrentlinkedhashmapVersion = " 1 . 4 " <nl> cglibVersion = " 2 . 2 . 2 " <nl> objenesisVersion = " 1 . 2 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 225 <nl> + versionCode = 226 <nl> versionName = ' 12 - beta6 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta6 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha1 ' <nl> } <nl> } <nl> 
mmm a / gradle / javaModule . gradle <nl> ppp b / gradle / javaModule . gradle <nl> javadoc { <nl> task codeQuality { <nl> dependsOn tasks . withType ( CodeNarc ) , tasks . withType ( Checkstyle ) <nl> + } <nl> + tasks . withType ( Test ) { <nl> + testLogging { <nl> + exceptionFormat " full " <nl> + } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 212 <nl> - versionName ' 3 . 2 . 8 ' <nl> + versionCode 213 <nl> + versionName ' 3 . 2 . 9 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / gradle / java9 . gradle <nl> ppp b / gradle / java9 . gradle <nl> task java9IntegTest ( type : Test ) { <nl> ' ScalaTestIntegrationTest ' , / / scala compile broken <nl> ' FunctionalReleaseNotesTest ' , <nl> ' StaticReleaseNotesTest ' , <nl> + ' M9JavaConfigurabilityCrossVersionSpec ' , <nl> + ' ClientShutdownCrossVersionSpec ' , <nl> + ' ToolingApiUnsupportedClientJvmCrossVersionSpec ' / / source compat 1 . 5 unsupported <nl> ] . collect { " * * / * $ { it } * " } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15117 <nl> - versionName = ' 23 . 1 ' <nl> + versionCode = 15118 <nl> + versionName = ' 23 . 1 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15050 <nl> - versionName = ' 19 - beta1 ' <nl> + versionCode = 15047 <nl> + versionName = ' 18 . 1 . 0 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11245 <nl> - versionName = ' 13 - beta3 ' <nl> + versionCode = 11246 <nl> + versionName = ' 13 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' signing ' <nl> repositories { <nl> - mavenLocal ( ) <nl> mavenCentral ( ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 17 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 19 . Final ' <nl> + nettyVersion = ' 4 . 0 . 20 . Final ' <nl> slf4jVersion = ' 1 . 7 . 7 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 4 . 0 ' <nl> 
mmm a / v7 / mediarouter / build . gradle <nl> ppp b / v7 / mediarouter / build . gradle <nl> dependencies { <nl> } <nl> android { <nl> - compileSdkVersion 19 <nl> + compileSdkVersion ' current ' <nl> buildToolsVersion ' 19 . 0 . 3 ' <nl> sourceSets { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> repositories { <nl> dependencies { <nl> testCompile ' junit : junit : 4 . 8 . 1 ' <nl> + compile ' commons - pool : commons - pool : 1 . 5 . 5 ' <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> } <nl> } <nl> - apply from : ' . . / maven_push . gradle ' <nl> + / / apply from : ' . . / maven_push . gradle ' <nl> 
mmm a / AIMSICD / build . gradle <nl> ppp b / AIMSICD / build . gradle <nl> dependencies { <nl> apply from : " signing . gradle " <nl> apply plugin : " io . freefair . android - checkstyle " <nl> + apply plugin : " io . freefair . android - javadoc - jar " <nl> checkstyle { <nl> toolVersion = " 6 . 15 " <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task pluginsFromSvn { <nl> } <nl> task installResources ( type : Copy ) { <nl> - into projectDir / / not actually used , but has to be set to something <nl> + into homeConfDir / / not actually used , but has to be set to something <nl> into ( homeLibDir . name ) { <nl> from ( ' grails - resources / src / grails / home / tests ' ) <nl> 
mmm a / osgi / modules / gradle / baseline . gradle <nl> ppp b / osgi / modules / gradle / baseline . gradle <nl> task baseline < < { <nl> sourcePath : " . " <nl> ) { <nl> classpath { <nl> - files ( [ " build / classes / main " ] ) <nl> + pathelement ( location : " build / classes / main " ) <nl> } <nl> } <nl> 
mmm a / hibernate - envers / hibernate - envers . gradle <nl> ppp b / hibernate - envers / hibernate - envers . gradle <nl> sourceSets { <nl> } <nl> } <nl> - compileTestJava { <nl> + compileJava { <nl> classpath + = configurations . hibernateJpaModelGenTool <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> - versionCode 107 <nl> + versionCode 108 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 16 . 0 . 1 ' <nl> nettyVersion = ' 4 . 0 . 15 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 5 ' <nl> + slf4jVersion = ' 1 . 7 . 6 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 3 . 1 ' <nl> junitVersion = ' 4 . 11 ' <nl> 
mmm a / gradle / publish - maven . gradle <nl> ppp b / gradle / publish - maven . gradle <nl> def customizePom ( pom , gradleProject ) { <nl> generatedPom . dependencies = generatedPom . dependencies . sort { dep - > <nl> " $ dep . scope : $ dep . groupId : $ dep . artifactId " <nl> } <nl> + generatedPom . dependencies . clear ( ) ; <nl> / / add all items necessary for maven central publication <nl> generatedPom . project { <nl> 
mmm a / subprojects / announce / announce . gradle <nl> ppp b / subprojects / announce / announce . gradle <nl> * limitations under the License . <nl> * / <nl> dependencies { <nl> - compile libraries . groovy <nl> compile libraries . slf4j_api <nl> compile project ( ' : core ' ) <nl> + testCompile libraries . groovy <nl> integTestRuntime project ( ' : plugins ' ) <nl> } <nl> 
mmm a / v7 / gridlayout / build . gradle <nl> ppp b / v7 / gridlayout / build . gradle <nl> apply plugin : ' android - library ' <nl> archivesBaseName = ' gridlayout - v7 ' <nl> + dependencies { <nl> + compile project ( ' : v4 ' ) <nl> + } <nl> + <nl> android { <nl> - compileSdkVersion " unstubbed " <nl> + compileSdkVersion 7 <nl> buildToolsVersion " 17 " <nl> sourceSets { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15040 <nl> - versionName = ' 18 - beta1 ' <nl> + versionCode = 15041 <nl> + versionName = ' 18 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> task bintrayPublish < < { <nl> allprojects { <nl> group = " io . ratpack " <nl> - version = " 1 . 3 . 0 - rc - 1 " <nl> + version = " 1 . 3 . 0 - SNAPSHOT " <nl> apply plugin : " base " <nl> apply plugin : " idea " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> apply plugin : ' android - reporting ' <nl> - <nl> - <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> test { <nl> testLogging { <nl> - events " failed " <nl> - exceptionFormat " full " <nl> + quiet { <nl> + events " failed " <nl> + exceptionFormat " full " <nl> + } <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> - compileSdkVersion 21 <nl> - buildToolsVersion " 21 . 1 . 2 " <nl> + compileSdkVersion 22 <nl> + buildToolsVersion " 22 " <nl> defaultConfig { <nl> applicationId " io . github . izzyleung . zhihudailypurify " <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 8 <nl> - versionName " 2 . 0 . 1 " <nl> + versionCode 9 <nl> + versionName " 2 . 0 . 2 " <nl> / / consumerProguardFiles ' consumer - proguard - rules . txt ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 49 <nl> + versionCode 50 <nl> versionName " 2 . 6 " <nl> vectorDrawables . useSupportLibrary = true <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> } <nl> + tasks . withType ( Test ) { <nl> + testLogging { <nl> + exceptionFormat " full " <nl> + events " failed " , " started " <nl> + } <nl> + } <nl> + <nl> repositories { <nl> mavenCentral ( ) <nl> } <nl> 
mmm a / subprojects / core / core . gradle <nl> ppp b / subprojects / core / core . gradle <nl> dependencies { <nl> runtime libraries . log4j_to_slf4j <nl> runtime libraries . jcl_to_slf4j <nl> - runtime module ( " com . jcraft : jsch : 0 . 1 . 42 " ) { <nl> - dependency " com . jcraft : jzlib : 1 . 0 . 7 " <nl> - } <nl> testRuntime " xerces : xercesImpl : 2 . 9 . 1 " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " de . robv . android . xposed . installer " <nl> - minSdkVersion 7 <nl> + minSdkVersion 14 <nl> targetSdkVersion 22 <nl> versionCode 37 <nl> versionName " 3 . 0 alpha4 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 229 <nl> - versionName = ' 12 - beta8 ' <nl> + versionCode = 230 <nl> + versionName = ' 12 - beta9 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / DaoTestGenerator / build . gradle <nl> ppp b / DaoTestGenerator / build . gradle <nl> apply plugin : ' java ' <nl> + apply plugin : ' application ' <nl> + <nl> + mainClassName = " de . greenrobot . daogenerator . gentest . TestDaoGenerator " <nl> sourceSets { <nl> main { <nl> 
mmm a / realm / build . gradle <nl> ppp b / realm / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile group : ' com . google . guava ' , name : ' guava ' , version : ' 15 . 0 ' <nl> androidTestApt files ( " . . / realm - annotations - processor / build / libs / realm - annotations - processor - $ { version } . jar " ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply from : ' gradle / filter . gradle ' <nl> apply from : ' gradle / indy . gradle ' <nl> - <nl> - if ( JavaVersion . current ( ) . java6Compatible ) { <nl> - apply from : ' gradle / bintray . gradle ' <nl> - } <nl> + apply from : ' gradle / bintray . gradle ' <nl> buildscript { <nl> repositories { <nl> 
mmm a / android / PhysicalWeb / app / build . gradle <nl> ppp b / android / PhysicalWeb / app / build . gradle <nl> android { <nl> applicationId " physical_web . org . physicalweb " <nl> minSdkVersion 19 <nl> targetSdkVersion 22 <nl> - versionCode 11 <nl> - versionName " 0 . 1 . 852 " <nl> + versionCode 12 <nl> + versionName " 0 . 1 . 853 " <nl> } <nl> buildTypes { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> paperwork { <nl> } <nl> android { <nl> - / / See build . gradle in the root of the project <nl> + / / Declared in dependencies . gradle in the root of the project . <nl> compileSdkVersion versions . compileSdk <nl> buildToolsVersion versions . buildTools <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' eu . appsatori : gradle - fatjar - plugin : 0 . 2 - rc1 ' <nl> + classpath ' eu . appsatori : gradle - fatjar - plugin : 0 . 2 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project ( ' : aeron - common ' ) { <nl> dependencies { <nl> - compile ' uk . co . real - logic : Agrona : 0 . 2 . 1 - SNAPSHOT ' <nl> + compile ' uk . co . real - logic : Agrona : 0 . 3 ' <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> task checkstyle ( type : Checkstyle ) { <nl> include ' * * / * . java ' <nl> exclude ' * * / gen / * * ' <nl> - classpath = files ( project . configurations . compile . asPath ) <nl> + classpath = files ( ) <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> } <nl> dependencies { <nl> - compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> - compile project ( " : library " ) <nl> + compile ' com . melnykov : floatingactionbutton : 1 . 0 . 0 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11249 <nl> + versionCode = 11250 <nl> versionName = ' 13 - beta6 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - beta3 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15078 <nl> - versionName = ' 21 . 0 . 3 ' <nl> + versionCode = 15079 <nl> + versionName = ' 21 . 0 . 4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / android / app / build . gradle <nl> ppp b / android / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 25 <nl> - buildToolsVersion " 25 . 0 . 1 " <nl> + buildToolsVersion " 25 . 0 . 2 " <nl> defaultConfig { <nl> applicationId " com . graphhopper . android " <nl> 
mmm a / osgi / modules / build . gradle <nl> ppp b / osgi / modules / build . gradle <nl> project . ext { <nl> propertiesFile = " $ { gradleDir } / gradle - wrapper . properties " <nl> } <nl> + allprojects { <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> + } <nl> + <nl> task installGradleWrapper ( type : Wrapper ) { <nl> project . gradleDir . mkdir ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta2 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha1 ' <nl> } <nl> } <nl> def isReleaseBuild ( ) { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> buildTypes { <nl> debug { <nl> runProguard false <nl> + versionNameSuffix " - debug " <nl> } <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task licenseFormatAndroid ( type : nl . javadude . gradle . plugins . license . License ) { <nl> licenseFormat . dependsOn licenseFormatAndroid <nl> ext { <nl> - majorVersion = " 2 . 22 . " <nl> + majorVersion = " 2 . 23 . " <nl> compileSdkVersion = 23 <nl> minSdkVersion = 17 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> - shortVersion = ' 4 . 0 . 3 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 0 . 4 ' <nl> + isSnapshot = true <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( buildDir , ' documentation ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15098 <nl> - versionName = ' 22 . 0 . 2 ' <nl> + versionCode = 15110 <nl> + versionName = ' 23 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 29 <nl> + versionCode 30 <nl> versionName " 2 . 0 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> - if ( isSnapshotVersion ) { <nl> - maven { url " http : / / snapshots . repository . codehaus . org " } <nl> - } <nl> + maven { url " http : / / snapshots . repository . codehaus . org " } <nl> } <nl> configurations { <nl> 
mmm a / AIMSICD / build . gradle <nl> ppp b / AIMSICD / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " com . SecUpwN . AIMSICD " <nl> minSdkVersion 16 <nl> - targetSdkVersion 19 / / Do not change : Working Icons on Android 5 + <nl> + targetSdkVersion 22 <nl> versionCode 41 <nl> testApplicationId " com . SecUpwN . AIMSICD . test " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> outputJar { <nl> from extraTxts <nl> / / add crowdin locales <nl> - from { crowdin . getDidWork ( ) ? zipTree ( crowdin . outputs ) : null } <nl> + from { crowdin . getDidWork ( ) ? zipTree ( crowdin . output ) : null } <nl> dependsOn ' crowdin ' <nl> manifest . attributes ( [ <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 6 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 7 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 2 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> plugins { <nl> id ' nebula . netflixoss ' version ' 2 . 2 . 9 ' <nl> + id ' net . saliman . cobertura ' version ' 2 . 2 . 7 ' <nl> } <nl> / / Establish version and status <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> packageName " org . wordpress . android " <nl> versionName " 2 . 6 . 1 " <nl> - versionCode 95 <nl> + versionCode 96 <nl> minSdkVersion 9 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / gradle / gradle / reports . tests . gradle <nl> ppp b / gradle / gradle / reports . tests . gradle <nl> subprojects { <nl> description = " All tests except long running " <nl> ignoreFailures = true <nl> maxParallelForks = 2 <nl> + dependsOn testClasses , integrationClasses <nl> testLogging { events ' started ' , ' passed ' } <nl> exclude ' * * / LongRunning * ' , ' * * / * TestSuite * ' <nl> } <nl> 
mmm a / grails - plugin - controllers / build . gradle <nl> ppp b / grails - plugin - controllers / build . gradle <nl> dependencies { <nl> testRuntime " jline : jline : $ jlineVersion " <nl> testRuntime " org . fusesource . jansi : jansi : $ jansiVersion " <nl> - <nl> - testRuntime project ( " : grails - compat " ) <nl> } <nl> 
mmm a / actor - sdk / sdk - core - android / android - sdk / build . gradle <nl> ppp b / actor - sdk / sdk - core - android / android - sdk / build . gradle <nl> project . afterEvaluate { <nl> } <nl> } <nl> } <nl> - <nl> - task releaseSDK ( dependsOn : [ ' uploadArchives ' , ' closeAndPromoteRepository ' ] ) { <nl> - <nl> - } <nl> } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> allprojects { <nl> - group = ' com . 6wunderkinder . slidinglayerlibrary ' <nl> + group = ' com . wunderkinder . slidinglayerlibrary ' <nl> version = ' 1 . 1 - SNAPSHOT ' <nl> repositories { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> tasks . withType ( JavaCompile ) { <nl> sourceCompatibility = " 1 . 7 " <nl> targetCompatibility = " 1 . 7 " <nl> + options . encoding = ' UTF - 8 ' <nl> } <nl> tasks . withType ( Test ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 14 . 0 . 1 ' <nl> - nettyVersion = ' 4 . 0 . 4 . Final ' <nl> + nettyVersion = ' 4 . 0 . 6 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 2 . 2 ' <nl> 
mmm a / gradle / javaModule . gradle <nl> ppp b / gradle / javaModule . gradle <nl> javadoc { <nl> } <nl> } <nl> } <nl> + <nl> + test { <nl> + maxParallelForks 2 <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / flyway - gradle - plugin / build . gradle <nl> ppp b / flyway - gradle - plugin / build . gradle <nl> dependencies { <nl> compile gradleApi ( ) <nl> compile localGroovy ( ) <nl> testCompile ' junit : junit : 4 . 11 ' <nl> - testCompile ' org . hsqldb : hsqldb : 2 . 2 . 8 ' <nl> + testCompile ' org . hsqldb : hsqldb : 2 . 3 . 2 ' <nl> } <nl> jar { <nl> 
mmm a / subprojects / plugin - development / plugin - development . gradle <nl> ppp b / subprojects / plugin - development / plugin - development . gradle <nl> useTestFixtures ( ) <nl> useTestFixtures ( project : " : logging " ) <nl> useClassycle ( ) <nl> strictCompile ( ) <nl> + <nl> + verifyTestFilesCleanup . errorWhenNotEmpty = false <nl> 
mmm a / moco - runner / build . gradle <nl> ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> - logbackVersion = ' 1 . 1 . 5 ' <nl> + logbackVersion = ' 1 . 1 . 6 ' <nl> commonsCliVersion = ' 1 . 3 . 1 ' <nl> } <nl> 
mmm a / WordPressAnalytics / build . gradle <nl> ppp b / WordPressAnalytics / build . gradle <nl> android { <nl> defaultConfig { <nl> versionName " 1 . 0 . 0 " <nl> minSdkVersion 14 <nl> - targetSdkVersion 19 <nl> + targetSdkVersion 23 <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : " groovy " <nl> apply plugin : " signing " <nl> - sourceCompatibility = 1 . 5 <nl> + sourceCompatibility = 1 . 6 <nl> sourceSets . all { ss - > <nl> for ( v in variants . findAll { it < = variant } ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' } ) { <nl> apply plugin : ' findbugs ' <nl> apply plugin : ' jacoco ' <nl> apply plugin : ' eclipse ' <nl> + apply plugin : ' maven ' <nl> evaluationDependsOn ( ' : util ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> - versionCode = 242 <nl> - versionName = ' 13 - beta2 ' <nl> + versionCode = 11242 <nl> + versionName = ' 13 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / simplecropview - sample / build . gradle <nl> ppp b / simplecropview - sample / build . gradle <nl> apply plugin : ' android - apt ' <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 2 " <nl> + buildToolsVersion " 23 . 0 . 1 " <nl> defaultConfig { <nl> applicationId " com . example . simplecropviewsample " <nl> 
mmm a / ratpack - manual / ratpack - manual . gradle <nl> ppp b / ratpack - manual / ratpack - manual . gradle <nl> compass { <nl> fontsDir = file ( ' . . / ratpack - stylesheets / fonts ' ) <nl> relativeAssets = true <nl> quiet = true <nl> + debugInfo = false <nl> + environment = ' production ' <nl> } <nl> combineJs { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . yalantis . ucrop . sample " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 8 <nl> - versionName " 1 . 2 . 0 " <nl> + versionCode 9 <nl> + versionName " 1 . 2 . 1 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15014 <nl> - versionName = ' 16 - beta5 ' <nl> + versionCode = 15015 <nl> + versionName = ' 16 - beta6 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> buildscript { <nl> } <nl> apply plugin : ' rxjava - project ' <nl> + <nl> + / / Multi - module modules aren ' t really supported <nl> + version = rootProject . version <nl> + <nl> apply plugin : ' provided - base ' <nl> dependencies { <nl> test { <nl> displayGranularity 2 <nl> } <nl> } <nl> + <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> signing { <nl> sign configurations . archives <nl> - required { ! isBuildSnapshot & & gradle . taskGraph . contains ( uploadArchives ) } <nl> + required { ! isBuildSnapshot & & gradle . taskGraph . contains ( uploadPublished ) } <nl> } <nl> uploadPublished { <nl> 
mmm a / materialList / build . gradle <nl> ppp b / materialList / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> - compileSdkVersion 21 <nl> + compileSdkVersion 19 <nl> buildToolsVersion " 20 . 0 . 0 " <nl> defaultConfig { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> jarjarVersion = ' 1 . 3 ' <nl> jlineVersion = ' 2 . 12 ' <nl> jmockVersion = ' 1 . 2 . 0 ' <nl> - logbackVersion = ' 1 . 1 . 3 ' <nl> + logbackVersion = ' 1 . 1 . 5 ' <nl> log4jVersion = ' 1 . 2 . 17 ' <nl> log4j2Version = ' 2 . 3 ' <nl> luceneVersion = ' 4 . 7 . 2 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> grailsVersion = ' 1 . 4 . 0 . BUILD - SNAPSHOT ' <nl> antVersion = " 1 . 8 . 2 " <nl> - antNodepsVersion = " 1 . 8 . 1 " <nl> antTraxVersion = " 1 . 7 . 1 " <nl> springVersion = " 3 . 0 . 5 . RELEASE " <nl> ivyVersion = " 2 . 2 . 0 " <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 179 <nl> - versionName " 3 . 1 . 1 . 7 " <nl> + versionCode 180 <nl> + versionName " 3 . 1 . 2 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / Android / Sample / app / build . gradle <nl> ppp b / Android / Sample / app / build . gradle <nl> android { <nl> buildToolsVersion " 23 . 0 . 1 " <nl> defaultConfig { <nl> - minSdkVersion 9 <nl> + minSdkVersion 11 <nl> targetSdkVersion 23 <nl> applicationId " net . wequick . example . small " <nl> versionCode 1 <nl> 
mmm a / modules / apps / foundation / frontend - js / frontend - js - metal - web / build . gradle <nl> ppp b / modules / apps / foundation / frontend - js / frontend - js - metal - web / build . gradle <nl> configJSModules { <nl> } <nl> transpileJS { <nl> + skipWhenEmpty = false <nl> sourceDir = npmInstall . nodeModulesDir <nl> srcIncludes = " metal * / src / * * / * . js " <nl> } <nl> \ No newline at end of file <nl> 
mmm a / WordPressUtils / build . gradle <nl> ppp b / WordPressUtils / build . gradle <nl> dependencies { <nl> } <nl> android { <nl> + defaultPublishConfig ' debug ' <nl> + <nl> compileSdkVersion 19 <nl> buildToolsVersion " 19 . 1 . 0 " <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 22 <nl> - versionCode 13 <nl> - versionName " 1 . 3 " <nl> + versionCode 14 <nl> + versionName " 1 . 4 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11260 <nl> - versionName = ' 14 - beta3 ' <nl> + versionCode = 11261 <nl> + versionName = ' 14 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha7 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha8 ' <nl> classpath ' com . novoda : bintray - release : 0 . 3 . 4 ' <nl> } <nl> } <nl> 
mmm a / gradle / version . gradle <nl> ppp b / gradle / version . gradle <nl> props . load ( new FileInputStream ( versionFile ) ) <nl> project . version = props . version <nl> - logger . lifecycle " Using version : ' $ project . version ' " <nl> + logger . lifecycle " Version : $ project . version " <nl> task incrementVersion { <nl> description " Increments version in ' version . properties ' file . " <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 205 <nl> + versionCode 206 <nl> versionName " 11 - beta5 " <nl> } <nl> beta { <nl> 
mmm a / gradle / docs . gradle <nl> ppp b / gradle / docs . gradle <nl> allprojects { <nl> } <nl> } <nl> + if ( JavaVersion . current ( ) . isJava7Compatible ( ) ) { <nl> + javadocAll . options . source = ' 1 . 7 ' <nl> + } <nl> + <nl> if ( JavaVersion . current ( ) . isJava8Compatible ( ) ) { <nl> allprojects { <nl> tasks . withType ( Javadoc ) { <nl> 
mmm a / packaging / server / build . gradle <nl> ppp b / packaging / server / build . gradle <nl> dependencies { <nl> / / } <nl> } <nl> + javadoc . classpath + = project . sourceSets . test . compileClasspath <nl> + <nl> sourceSets { <nl> integrationTest { <nl> / / TODO rename webtest into integrationTest <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> androidBuildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - androidVersionCode = 15174 <nl> - androidVersionName = ' 29 . 0 . 1 ' <nl> + androidVersionCode = 15175 <nl> + androidVersionName = ' 29 . 0 . 2 ' <nl> supportVersion = ' 23 . 1 . 1 ' <nl> } <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> apply plugin : ' android - cq ' <nl> apply plugin : ' crashlytics ' <nl> android { <nl> - lintOptions { <nl> - quiet true <nl> - abortOnError false <nl> - } <nl> - <nl> packagingOptions { <nl> exclude " META - INF / LICENSE . txt " <nl> exclude " META - INF / NOTICE . txt " <nl> 
mmm a / android / sdk / build . gradle <nl> ppp b / android / sdk / build . gradle <nl> apply plugin : ' com . android . library ' <nl> apply plugin : ' com . github . hierynomus . license ' <nl> - version = " 0 . 0 . 0 . 1 " <nl> + version = " 0 . 4 . 1 . 2 " <nl> android { <nl> compileSdkVersion 23 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> javadoc { <nl> + options . encoding = " UTF - 8 " <nl> options . author = true <nl> options . version = true <nl> options . links ' http : / / docs . oracle . com / javase / 6 / docs / api / ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> - nettyVersion = ' 4 . 0 . 30 . Final ' <nl> + nettyVersion = ' 4 . 0 . 31 . Final ' <nl> slf4jVersion = ' 1 . 7 . 12 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 6 . 1 ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' spock - core ' , ' spock - specks ' <nl> - / / external dependencies for task " findSpecks " in project " spock - specks " <nl> - mavenCentral ( ) <nl> - dependencies " asm : asm : 2 . 2 . 3 " <nl> - dependencies " asm : asm - commons : 2 . 2 . 3 " <nl> 
mmm a / portal - web / build - test . gradle <nl> ppp b / portal - web / build - test . gradle <nl> repositories { <nl> maven { <nl> url " http : / / cdn . repository . liferay . com / nexus / content / groups / public " <nl> } <nl> + } <nl> + <nl> + runPoshi { <nl> + jvmArgs " - Dfile . encoding = UTF - 8 " <nl> } <nl> \ No newline at end of file <nl> 
mmm a / ratpack - gradle / build . gradle <nl> ppp b / ratpack - gradle / build . gradle <nl> apply plugin : ' groovy ' <nl> dependencies { <nl> - groovy localGroovy ( ) <nl> - compile gradleApi ( ) <nl> + compile localGroovy ( ) , gradleApi ( ) <nl> testCompile ' org . spockframework : spock - core : 0 . 7 - groovy - 1 . 8 ' , { <nl> exclude module : " groovy - all " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> packageName " org . wordpress . android " <nl> - versionName " 2 . 5 . 1 " <nl> - versionCode 85 <nl> + versionName " 2 . 6 Beta 1 " <nl> + versionCode 86 <nl> minSdkVersion 9 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / requery - android / example / build . gradle <nl> ppp b / requery - android / example / build . gradle <nl> android { <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> } <nl> lintOptions { <nl> - disable ' InvalidPackage ' <nl> + abortOnError false <nl> } <nl> dataBinding { <nl> enabled = true <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> avsGroup = ' com . wire . avs ' <nl> / / proprietary avs artifact config <nl> - customAvsVersion = ' 2 . 7 . 26 @ aar ' <nl> + customAvsVersion = ' 2 . 8 . 6 @ aar ' <nl> customAvsInternalVersion = customAvsVersion <nl> customAvsName = ' avs ' <nl> customAvsGroup = ' com . wearezeta . avs ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> junitVersion = ' 4 . 12 ' <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 10 . 19 ' <nl> - httpComponentVersion = ' 4 . 5 . 1 ' <nl> + httpComponentVersion = ' 4 . 5 . 2 ' <nl> jsonpathVersion = ' 2 . 1 . 0 ' <nl> freemarkerVersion = ' 2 . 3 . 23 ' <nl> } <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> task forceCandidate { <nl> } <nl> release . dependsOn ( forceCandidate ) <nl> + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) <nl> task releaseSnapshot ( dependsOn : [ uploadArtifactory , uploadMavenCentral ] ) <nl> / / Ensure our versions look like the project status before publishing <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 0 . 1 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / gradle / release - checks . gradle <nl> ppp b / gradle / release - checks . gradle <nl> task checkDependencies < < { <nl> } <nl> if ( ! snapshotBuild ) { <nl> - tasks . findByPath ( ' check ' ) ? . dependsOn checkRepositories , checkDependencies <nl> + tasks . findByPath ( ' check ' ) ? . dependsOn checkDependencies <nl> } <nl> def verifyNoDependenciesMatchingVersion ( def pattern ) { <nl> 
mmm a / modules / build . gradle <nl> ppp b / modules / build . gradle <nl> buildscript { <nl> } <nl> } <nl> + buildDir = new File ( rootDir . parentFile , " build " ) <nl> + <nl> gradle . beforeProject { <nl> Project project - > <nl> 
mmm a / leakcanary - watcher / build . gradle <nl> ppp b / leakcanary - watcher / build . gradle <nl> android { <nl> minSdkVersion rootProject . ext . minSdkVersion <nl> targetSdkVersion rootProject . ext . targetSdkVersion <nl> } <nl> + dexOptions { <nl> + javaMaxHeapSize ' 2048M ' <nl> + } <nl> lintOptions { <nl> disable ' GoogleAppIndexingWarning ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 7 ' <nl> + version = ' 2 . 0 . 8 ' <nl> def jarVersion = version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15171 <nl> - versionName = ' 29 - beta2 ' <nl> + versionCode = 15172 <nl> + versionName = ' 29 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / examples / moduleExample / app / build . gradle <nl> ppp b / examples / moduleExample / app / build . gradle <nl> android { <nl> release { <nl> minifyEnabled true <nl> signingConfig signingConfigs . release <nl> - proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> plugins { <nl> - id ' nebula . netflixoss ' version ' 3 . 2 . 0 ' <nl> + id ' nebula . netflixoss ' version ' 3 . 2 . 2 ' <nl> id ' me . champeau . gradle . jmh ' version ' 0 . 2 . 0 ' <nl> id ' net . saliman . cobertura ' version ' 2 . 2 . 8 ' <nl> } <nl> 
mmm a / OsmAnd / build . gradle <nl> ppp b / OsmAnd / build . gradle <nl> apply plugin : ' com . android . application ' <nl> / / TODO <nl> - / / 0 . Update OsmAndCore_wrapper for build ( implement ) <nl> + / / 0 . Update OsmAndCore_wrapper for build ( use ivy ) <nl> / / 1 . Filter fonts <nl> / / < unzip src = " OsmAndCore_android . aar " dest = " . " > <nl> / / < patternset > <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15153 <nl> - versionName = ' 27 - beta4 ' <nl> + versionCode = 15154 <nl> + versionName = ' 27 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> release <nl> } <nl> buildTypes { <nl> + debug { <nl> + <nl> + } <nl> release { <nl> signingConfig project . hasProperty ( ' storeFile ' ) ? signingConfigs . release : signingConfigs . debug <nl> } <nl> 
mmm a / ProKey / LinkBubblePro / build . gradle <nl> ppp b / ProKey / LinkBubblePro / build . gradle <nl> buildscript { <nl> def versionMajor = 0 <nl> def versionMinor = 9 <nl> def versionPatch = 0 <nl> - def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> + def versionBuild = 2 / / bump for dogfood builds , public betas , etc . <nl> apply plugin : ' android ' <nl> / / apply plugin : ' dexguard ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( projectsPrefix . isEmpty ( ) ) { <nl> vcs = ' Git ' <nl> } <nl> } <nl> - tasks . cleanIdea { <nl> - delete ' . idea ' <nl> - } <nl> } <nl> / / eclipse configuration <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 1 . 0 - beta1 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 1 . 0 - beta2 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 4 . 1 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 5 ' <nl> + version = ' 2 . 0 . 6 ' <nl> def jarVersion = version <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> configure ( [ smallNewMultiprojectJava , largeNewMultiprojectJava ] ) { <nl> } <nl> task nativeMonolithic ( type : MonolithicNativeProjectGeneratorTask ) { <nl> - projects = 500 <nl> + projects = 100 <nl> / / number of source files to generate in each project of each type <nl> / / this generates 200 C , 200 C + + , 200 headers and 400 unused C / C + + files <nl> sourceFiles = 200 <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> } <nl> jvmArgs " - Xss320k " <nl> - if ( System . properties [ ' ratpack . testJvmArgs ' ] ) { <nl> - jvmArgs System . properties [ ' ratpack . testJvmArgs ' ] <nl> - } <nl> } <nl> sourceCompatibility = " 1 . 7 " <nl> 
mmm a / annotations / build . gradle <nl> ppp b / annotations / build . gradle <nl> apply plugin : ' java ' <nl> archivesBaseName = ' support - annotations ' <nl> sourceSets { <nl> - main . java . srcDir ' java ' <nl> + main . java . srcDir ' src ' <nl> } <nl> jar { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> versionCode 2 <nl> versionName " 1 . 0 . 1 " <nl> + vectorDrawables . useSupportLibrary = true <nl> + <nl> testInstrumentationRunner " android . support . test . runner . AndroidJUnitRunner " <nl> } <nl> buildTypes { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> uploadArchives { <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 2 . 4 ' <nl> + gradleVersion = ' 2 . 8 ' <nl> } <nl> 
mmm a / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gwt / build . gradle <nl> ppp b / extensions / gdx - setup / src / com / badlogic / gdx / setup / resources / gwt / build . gradle <nl> gwt { <nl> compiler { <nl> strict = true ; <nl> enableClosureCompiler = true ; <nl> - disableClassMetadata = true ; <nl> disableCastChecking = true ; <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> - guavaVersion = ' 16 . 0 . 1 ' <nl> + guavaVersion = ' 17 . 0 ' <nl> nettyVersion = ' 4 . 0 . 18 . Final ' <nl> slf4jVersion = ' 1 . 7 . 7 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + / / The name of the root project . <nl> + / / If we would not set the name , then gradle would use the directory <nl> + / / name of the root directory <nl> + rootProject . name = ' Smack ' <nl> + <nl> include ' smack - core ' , <nl> ' smack - im ' , <nl> ' smack - tcp ' , <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 224 <nl> + versionCode = 225 <nl> versionName = ' 12 - beta6 ' <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : libraries : pagerslidingtabstrip ' <nl> include ' : libraries : android - menudrawer ' <nl> include ' : libraries : stickygridheaders ' <nl> include ' : SeriesGuide ' <nl> - include ' : SeriesGuideFree ' <nl> \ No newline at end of file <nl> + include ' : SeriesGuideX ' <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> password publishPassword <nl> channels publishChannel <nl> } <nl> - intellijRepo intellijRepoUrl <nl> systemProperty ' dlv . path ' , customDlvPath <nl> } <nl> } <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " com . afollestad . materialdialogs " <nl> - minSdkVersion 14 <nl> + minSdkVersion 9 <nl> targetSdkVersion 21 <nl> versionCode 1 <nl> versionName " 0 . 0 . 8 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 4 . 2 ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 4 . + ' <nl> } <nl> } <nl> 
mmm a / AndroidAsync / build . gradle <nl> ppp b / AndroidAsync / build . gradle <nl> android { <nl> / / upload to maven task <nl> if ( System . getenv ( ) . I_AM_KOUSH = = ' true ' ) { <nl> apply from : ' https : / / raw . github . com / koush / mvn - repo / master / maven . gradle ' <nl> - / / apply from : ' / Users / koush / src / mvn - repo / maven . gradle ' <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> def versionMajor = 0 <nl> def versionMinor = 3 <nl> - def versionPatch = 1 <nl> + def versionPatch = 2 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15145 <nl> - versionName = ' 26 . 0 . 1 ' <nl> + versionCode = 15150 <nl> + versionName = ' 27 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / framework / build . gradle <nl> ppp b / framework / build . gradle <nl> configurations { <nl> javadocTaglet <nl> dependencyJar <nl> aopDependencyJar <nl> - proguardArchives <nl> } <nl> sourceSets { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 18 . 0 ' <nl> nettyVersion = ' 4 . 0 . 25 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 9 ' <nl> + slf4jVersion = ' 1 . 7 . 10 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 5 . 0 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' eclipse ' / / Only used so the Eclipse STS Gradle plugin can see <nl> defaultTasks ' build ' <nl> group = ' com . lmax ' <nl> - version = new Version ( major : 3 , stage : ' beta4 ' ) <nl> + version = new Version ( major : 3 , stage : ' beta5 ' ) <nl> ext { <nl> fullName = ' Disruptor Framework ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> apply plugin : ' com . android . library ' <nl> - <nl> + apply plugin : ' maven ' <nl> android { <nl> compileSdkVersion 23 <nl> buildToolsVersion " 23 . 0 . 1 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> repositories { <nl> mavenCentral ( ) <nl> mavenLocal ( ) <nl> + maven { <nl> + url " https : / / strangelydim . com / repository / " <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15095 <nl> - versionName = ' 22 . 0 . 0 ' <nl> + versionCode = 15096 <nl> + versionName = ' 22 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> name = ' forge ' <nl> url = ' http : / / files . minecraftforge . net / maven ' <nl> } <nl> + maven { <nl> + name = ' sponge ' <nl> + url = ' http : / / repo . spongepowered . org / maven ' <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 222 <nl> + versionCode = 223 <nl> versionName = ' 12 - beta6 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15060 <nl> - versionName = ' 20 - beta1 ' <nl> + versionCode = 15061 <nl> + versionName = ' 20 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' maven - publish ' <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . theartofdev . edmodo ' <nl> PUBLISH_ARTIFACT_ID = ' android - image - cropper ' <nl> - PUBLISH_VERSION = ' 2 . 1 . 1 ' <nl> + PUBLISH_VERSION = ' 2 . 1 . 2 ' <nl> / / gradlew clean build generateRelease <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name in [ ' driver - compat ' , ' morphia ' ] } ) { <nl> pmd { <nl> / / cut down version of PMD for the older code base <nl> - ruleSets = [ " braces " , " junit " ] <nl> + ruleSets = [ " braces " ] <nl> ignoreFailures = false <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' base ' <nl> description = ' Spring Security ' <nl> allprojects { <nl> - version = ' 3 . 1 . 0 . RC3 ' <nl> + version = ' 3 . 1 . 0 . CI - SNAPSHOT ' <nl> releaseBuild = version . endsWith ( ' RELEASE ' ) <nl> snapshotBuild = version . endsWith ( ' SNAPSHOT ' ) <nl> 
mmm a / h2o - core / build . gradle <nl> ppp b / h2o - core / build . gradle <nl> dependencies { <nl> test { <nl> useTestNG ( ) { <nl> + suites new File ( projectDir , ' src / test / resources / testng - multinode . xml ' ) <nl> suites new File ( projectDir , ' src / test / resources / testng . xml ' ) <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 8 ' <nl> + version = ' 2 . 1 . 0 ' <nl> def jarVersion = version <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15160 <nl> - versionName = ' 28 - beta1 ' <nl> + versionCode = 15161 <nl> + versionName = ' 28 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15079 <nl> - versionName = ' 21 . 0 . 4 ' <nl> + versionCode = 15080 <nl> + versionName = ' 21 . 1 . 0 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / cropper / build . gradle <nl> ppp b / cropper / build . gradle <nl> apply plugin : ' com . android . library ' <nl> ext { <nl> PUBLISH_GROUP_ID = ' com . theartofdev . edmodo ' <nl> PUBLISH_ARTIFACT_ID = ' android - image - cropper ' <nl> - PUBLISH_VERSION = ' 1 . 0 . 3 ' <nl> + PUBLISH_VERSION = ' 1 . 0 . 4 ' <nl> / / gradlew clean build generateRelease <nl> } <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> class BinariesComparatorTask extends DefaultTask { <nl> } <nl> @ TaskAction compareBinaries ( ) { <nl> + assert ! markerFile . exists ( ) | | markerFile . delete ( ) <nl> String prev = project . getPreviousVersion ( ) <nl> logger . info " { } - comparing current binaries with version { } " , path , prev <nl> 
mmm a / config / gradle / common . gradle <nl> ppp b / config / gradle / common . gradle <nl> checkstyle { <nl> pmd { <nl> ignoreFailures = true <nl> ruleSetFiles = files ( " $ rootDir / config / pmd / pmd . xml " ) <nl> + / / by default , gradle uses both ruleset file AND the rulesets . <nl> + / / We override the ruleSets to use only those from the file <nl> + ruleSets = [ ] <nl> } <nl> findbugs { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> sourceCompatibility = ' 1 . 6 ' <nl> targetCompatibility = ' 1 . 6 ' <nl> + javadoc { <nl> + options { <nl> + verbose = true <nl> + } <nl> + } <nl> + <nl> tasks . withType ( JavaCompile ) { <nl> options . compilerArgs < < " - Xlint : unchecked " < < " - Xlint : deprecation " <nl> } <nl> 
mmm a / zipkin - ui / build . gradle <nl> ppp b / zipkin - ui / build . gradle <nl> task npmLint ( type : NpmTask ) { <nl> } <nl> check . dependsOn npmLint <nl> + / / Strip out scala deps inherited from the base project <nl> install . repositories . mavenInstaller . pom * . whenConfigured { pom - > <nl> pom . dependencies . clear ( ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> String getVersionFromJava ( File file ) <nl> return out ; <nl> } <nl> + <nl> + / / re - add old tasks for jenkins compat <nl> + / / should be remvoed , and the jenkisn fixed when no longer building with FG 1 . 2 <nl> + task setupForge { dependsOn ' setup ' } <nl> + task buildPackages { dependsOn ' build ' } <nl> 
mmm a / config / gradle / artifactory . gradle <nl> ppp b / config / gradle / artifactory . gradle <nl> buildscript { <nl> / / This configures what we need to interact with the MovingBlocks Artifactory instance <nl> artifactory { <nl> - contextUrl = ' http : / / artifactory . movingblocks . net / artifactory ' <nl> + contextUrl = ' http : / / artifactory . terasology . org : 8081 / artifactory ' <nl> / / This is the target for publishing artifacts <nl> publish { <nl> 
mmm a / hibernate - core / hibernate - core . gradle <nl> ppp b / hibernate - core / hibernate - core . gradle <nl> sourceSets . test . resources { <nl> idea { <nl> module { <nl> - sourceDirs + = file ( ' $ buildDir / generated - src / antlr / main ' ) <nl> + sourceDirs + = file ( " $ { buildDir } / generated - src / antlr / main " ) <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> def isJava15 ( ) { <nl> System . properties [ ' java . version ' ] . contains ( ' 1 . 5 ' ) <nl> } <nl> def modules ( ) { <nl> - subprojects . findAll { it . name = ~ / groovy - ( ? ! all - tests ) / } <nl> + subprojects <nl> } <nl> / / provide to other build scripts <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> } <nl> } <nl> } <nl> + <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 191 <nl> - versionName " 3 . 1 . 5 . 2 " <nl> + versionCode 192 <nl> + versionName " 3 . 1 . 5 . 3 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> repositories { <nl> jcenter ( ) <nl> - maven { url ' https : / / jitpack . io ' } <nl> } <nl> dependencies { <nl> 
mmm a / tastytoast / build . gradle <nl> ppp b / tastytoast / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> - compileSdkVersion 24 <nl> - buildToolsVersion " 24 . 0 . 0 " <nl> + compileSdkVersion 25 <nl> + buildToolsVersion " 25 . 0 . 1 " <nl> defaultConfig { <nl> minSdkVersion 11 <nl> - targetSdkVersion 24 <nl> + targetSdkVersion 25 <nl> versionCode 6 <nl> versionName " 0 . 1 . 0 " <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> / / project and then reference this from the modules <nl> ext { <nl> compileSdkVersion = 23 <nl> - buildToolsVersion = " 23 . 0 . 1 " <nl> + buildToolsVersion = " 23 . 0 . 2 " <nl> minSdkVersion = 10 <nl> targetSdkVersion = 23 <nl> 
mmm a / Android / Sample / app / build . gradle <nl> ppp b / Android / Sample / app / build . gradle <nl> android { <nl> } <nl> buildTypes { <nl> debug { <nl> - minifyEnabled true <nl> + minifyEnabled false <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> 
mmm a / android / build . gradle <nl> ppp b / android / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 1 ' <nl> } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> - versionCode 102 <nl> + versionCode 103 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task docs ( type : Javadoc ) { <nl> include ' * * / DriverTimeoutException . java ' <nl> destinationDir = file ( " $ buildDir / docs / all " ) <nl> } <nl> + <nl> + task docsJar ( type : Jar , dependsOn : docs ) { <nl> + classifier = ' docs ' <nl> + from docs . destinationDir <nl> + } <nl> + <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task clean ( type : Delete ) { <nl> } <nl> ext { <nl> - androidCompileSdkVersion = 24 <nl> - androidBuildToolsVersion = ' 24 . 0 . 3 ' <nl> + androidCompileSdkVersion = 25 <nl> + androidBuildToolsVersion = ' 25 . 0 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> androidVersionCode = 15215 <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> task bintrayPublish < < { <nl> allprojects { <nl> group = " io . ratpack " <nl> - version = " 1 . 3 . 0 - rc - 2 " <nl> + version = " 1 . 3 . 0 - SNAPSHOT " <nl> apply plugin : " base " <nl> apply plugin : " idea " <nl> 
mmm a / sql / build . gradle <nl> ppp b / sql / build . gradle <nl> task bench ( type : Test , dependsOn : [ ' : app : getVersion ' ] ) { <nl> include ( ' io / crate / benchmark / * * ' ) <nl> + exclude ( ' io / crate / benchmark / LuceneDocCollector * * ' ) <nl> testLogging { <nl> / / show standard out and standard error of the test JVM ( s ) on the console <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> buildToolsVersion " 19 . 0 . 3 " <nl> defaultConfig { <nl> - minSdkVersion 10 <nl> - targetSdkVersion 19 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> } <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> if ( loadSigningConfigFromPropertiesFile ( <nl> dependencies { <nl> compile fileTree ( dir : ' libs ' , include : [ ' * . jar ' ] ) <nl> compile project ( ' : library ' ) <nl> - compile ' com . nispok : snackbar : 2 . 9 . 1 ' <nl> + compile ' com . nispok : snackbar : 2 . 10 . 8 ' <nl> } <nl> 
mmm a / moco - runner / build . gradle <nl> ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> - logbackVersion = ' 1 . 1 . 6 ' <nl> + logbackVersion = ' 1 . 1 . 7 ' <nl> commonsCliVersion = ' 1 . 3 . 1 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> project . ext { <nl> - guavaVersion = ' 16 . 0 ' <nl> + guavaVersion = ' 16 . 0 . 1 ' <nl> nettyVersion = ' 4 . 0 . 15 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 208 <nl> - versionName " 12 - beta1 " <nl> + versionCode 210 <nl> + versionName " 12 - beta2 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / gradle / versioning . gradle <nl> ppp b / gradle / versioning . gradle <nl> if ( finalRelease ) { <nl> isSnapshot = true <nl> version + = " - $ buildTimestamp " <nl> } <nl> - <nl> - println " Gradle version : $ version " <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task checkApi ( type : CheckApiTask , dependsOn : generateApi ) { <nl> newRemovedApiFile = new File ( project . docsDir , ' release / removed . txt ' ) <nl> oldRemovedApiFile = new File ( project . rootDir , ' api / removed . txt ' ) <nl> } <nl> + createArchive . dependsOn checkApi <nl> subprojects { <nl> / / Only modify android projects . <nl> 
mmm a / subprojects / docs / src / samples / dirscanning / buildSrc / build . gradle <nl> ppp b / subprojects / docs / src / samples / dirscanning / buildSrc / build . gradle <nl> apply plugin : ' java ' <nl> - apply plugin : ' idea ' <nl> repositories { <nl> jcenter ( ) <nl> 
new file mode 100644 <nl> index 000000000000 . . 259a5569ce96 <nl> mmm / dev / null <nl> ppp b / modules / apps / frontend - theme - westeros - bank / build . gradle <nl> + apply plugin : " com . liferay . app . defaults . plugin " <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - beta7 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / moco - runner / build . gradle <nl> ppp b / moco - runner / build . gradle <nl> buildscript { <nl> } <nl> project . ext { <nl> - logbackVersion = ' 1 . 1 . 3 ' <nl> + logbackVersion = ' 1 . 1 . 5 ' <nl> commonsCliVersion = ' 1 . 3 . 1 ' <nl> } <nl> 
mmm a / worldedit - sponge / build . gradle <nl> ppp b / worldedit - sponge / build . gradle <nl> shadowJar { <nl> } <nl> } <nl> - task deobfJar ( type : Jar ) { <nl> - from sourceSets . main . output <nl> - classifier = ' dev ' <nl> - } <nl> - <nl> artifacts { <nl> - archives deobfJar <nl> + archives shadowJar <nl> } <nl> 
mmm a / gradle / taskProperties . gradle <nl> ppp b / gradle / taskProperties . gradle <nl> afterEvaluate { <nl> validator . dependsOn sourceSets . main . output <nl> validator . classesDir = sourceSets . main . output . classesDir <nl> validator . classpath = sourceSets . main . compileClasspath <nl> + validator . outputFile = " $ buildDir / reports / task - properties / report . txt " <nl> validator . failOnWarning = true <nl> } <nl> } <nl> 
mmm a / gradle / maven . gradle <nl> ppp b / gradle / maven . gradle <nl> task uploadMavenCentral ( type : Upload , dependsOn : signArchives ) { <nl> url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> - } <nl> } <nl> } <nl> } <nl> 
mmm a / json2view / build . gradle <nl> ppp b / json2view / build . gradle <nl> android { <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / Gradle / HelloBuildType / build . gradle <nl> ppp b / Gradle / HelloBuildType / build . gradle <nl> android { <nl> mezzanine { <nl> applicationIdSuffix " . mezz " <nl> debuggable true <nl> - signingConfig signingConfigs . release <nl> } <nl> } <nl> } <nl> 
mmm a / bosh / build . gradle <nl> ppp b / bosh / build . gradle <nl> repositories { <nl> dependencies { <nl> compile project ( ' : core ' ) <nl> - compile ' org . igniterealtime . jbosh : jbosh : 0 . 8 . 0 - SNAPSHOT ' <nl> + compile ' org . igniterealtime . jbosh : jbosh : 0 . 8 . 0 ' <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> } <nl> def versionMajor = 0 <nl> - def versionMinor = 5 <nl> + def versionMinor = 6 <nl> def versionPatch = 0 <nl> - def versionBuild = 1 / / bump for dogfood builds , public betas , etc . <nl> + def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> compileSdkVersion 21 <nl> 
mmm a / buildSrc / build . gradle <nl> ppp b / buildSrc / build . gradle <nl> apply plugin : ' groovy ' <nl> repositories { <nl> - mavenLocal ( ) <nl> mavenCentral ( ) <nl> maven { <nl> name = ' SpringSource Enterprise Release ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> } <nl> lintOptions { <nl> - disable ' ExtraTranslation ' , ' MissingTranslation ' , ' InvalidPackage ' , ' MissingQuantity ' <nl> + disable ' ExtraTranslation ' , ' MissingTranslation ' , ' InvalidPackage ' , ' MissingQuantity ' , ' AppCompatResource ' <nl> } <nl> subprojects { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 5 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 6 . + ' <nl> } <nl> } <nl> 
mmm a / modules / util . gradle <nl> ppp b / modules / util . gradle <nl> private void _createSetUpTasks ( ) { <nl> } <nl> Task portalToolTask = tasks . create ( name : " setUp " + portalToolSuffix , type : Copy ) { <nl> + doLast { <nl> + ant . checksum file : ivyXmlFile <nl> + } <nl> + <nl> from portalToolConfiguration <nl> into new File ( portalToolDir , " lib " ) <nl> rename new RenameDependencyClosure ( project , portalToolConfiguration . name ) <nl> 
mmm a / data / build . gradle <nl> ppp b / data / build . gradle <nl> android { <nl> } <nl> packagingOptions { <nl> + exclude ' LICENSE . txt ' <nl> exclude ' META - INF / DEPENDENCIES ' <nl> exclude ' META - INF / ASL2 . 0 ' <nl> exclude ' META - INF / NOTICE ' <nl> 
mmm a / utilcode / build . gradle <nl> ppp b / utilcode / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 11 <nl> targetSdkVersion 23 <nl> - versionCode 2 <nl> + versionCode 3 <nl> versionName " 1 . 1 . 1 " <nl> } <nl> buildTypes { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task releaseArtifacts { <nl> task release { <nl> description = ' Builds , tests and uploads the release artifacts ' <nl> group = ' release ' <nl> - dependsOn releaseVersion , tag , releaseArtifacts , testedDists , uploadDists , ' : docs : uploadDocs ' <nl> + dependsOn releaseVersion , tag , releaseArtifacts , testedDists , ' : docs : uploadDocs ' <nl> } <nl> task wrapper ( type : Wrapper , dependsOn : binZip ) <nl> 
mmm a / fml / build . gradle <nl> ppp b / fml / build . gradle <nl> uploadArchives { <nl> name ' cpw ' <nl> roles { role ' developer ' } <nl> } <nl> - } <nl> - developers { <nl> developer { <nl> id ' LexManos ' <nl> name ' Lex Manos ' <nl> Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 244 <nl> - versionName ' 3 . 3 . 26 ' <nl> + versionCode 245 <nl> + versionName ' 3 . 3 . 27 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / gradle / maven . gradle <nl> ppp b / gradle / maven . gradle <nl> task uploadMavenCentral ( type : Upload , dependsOn : signArchives ) { <nl> url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> - } <nl> } <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 23 <nl> - versionCode 31 <nl> + versionCode 32 <nl> versionName " 2 . 0 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> buildConfigField " String " , " READABILITY_TOKEN " , " \ " \ " " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 0 . 12 . + ' <nl> - classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 10 . + ' <nl> + classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . + ' <nl> } <nl> } <nl> 
mmm a / gradle / groovyModule . gradle <nl> ppp b / gradle / groovyModule . gradle <nl> apply from : " $ rootDir / gradle / javaModule . gradle " <nl> dependencies { <nl> compile commonDependencies . groovy <nl> } <nl> - <nl> - configurations { <nl> - compile . extendsFrom groovy <nl> - testCompile . extendsFrom - = groovy <nl> - } <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' <nl> } <nl> } <nl> 
mmm a / android / PhysicalWeb / app / build . gradle <nl> ppp b / android / PhysicalWeb / app / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " physical_web . org . physicalweb " <nl> minSdkVersion 19 <nl> - targetSdkVersion 21 <nl> + targetSdkVersion 22 <nl> versionCode 11 <nl> - versionName " 0 . 1 . 851 " <nl> + versionName " 0 . 1 . 852 " <nl> } <nl> buildTypes { <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . afollestad . materialdialogssample " <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 69 <nl> + versionCode 70 <nl> versionName " 0 . 6 . 1 . 5 " <nl> } <nl> lintOptions { <nl> Binary files a / sample / sample . apk and b / sample / sample . apk differ <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " com . andexert . library " <nl> - minSdkVersion 14 <nl> + minSdkVersion 9 <nl> targetSdkVersion 20 <nl> versionCode 5 <nl> versionName " 1 . 2 . 1 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15074 <nl> - versionName = ' 20 . 1 . 2 ' <nl> + versionCode = 15075 <nl> + versionName = ' 21 . 0 . 0 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 - alpha5 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / client / build . gradle <nl> ppp b / client / build . gradle <nl> apply plugin : ' java ' <nl> apply plugin : ' maven ' <nl> - archiveBaseName = " crate - client " <nl> + archivesBaseName = " crate - client " <nl> evaluationDependsOn ( ' : core ' ) <nl> evaluationDependsOn ( ' : sql ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> minSdkVersion = 10 <nl> targetSdkVersion = 23 <nl> - supportVersion = " 24 . 0 . 0 " <nl> + supportVersion = " 23 . 4 . 0 " <nl> commonsioVersion = " 2 . 4 " <nl> commonslangVersion = " 3 . 4 " <nl> eventbusVersion = " 2 . 4 . 0 " <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 193 <nl> - versionName " 10 - beta1 " <nl> + versionCode 194 <nl> + versionName " 10 - beta2 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : moco - core ' ) { <nl> project ( ' : moco - runner ' ) { <nl> ext { <nl> - logbackVersion = ' 1 . 1 . 1 ' <nl> + logbackVersion = ' 1 . 1 . 2 ' <nl> commonsCliVersion = ' 1 . 2 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> classpath ' com . github . dcendents : android - maven - plugin : 1 . 2 ' <nl> } <nl> } <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> task forceCandidate { <nl> } <nl> release . dependsOn ( forceCandidate ) <nl> + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) <nl> task releaseSnapshot ( dependsOn : [ uploadArtifactory , uploadMavenCentral ] ) <nl> / / Ensure our versions look like the project status before publishing <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> buildTypes { <nl> release { <nl> runProguard false <nl> - proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> } <nl> } <nl> 
mmm a / examples / moduleExample / app / build . gradle <nl> ppp b / examples / moduleExample / app / build . gradle <nl> android { <nl> buildTypes { <nl> release { <nl> minifyEnabled true <nl> + proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , <nl> + ' proguard - rules . pro ' <nl> signingConfig signingConfigs . release <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 3 . 1 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configurations { <nl> } <nl> ext { <nl> - antVersion = ' 1 . 9 . 4 ' <nl> + antVersion = ' 1 . 9 . 5 ' <nl> asmVersion = ' 5 . 0 . 3 ' <nl> antlrVersion = ' 2 . 7 . 7 ' <nl> coberturaVersion = ' 1 . 9 . 4 . 1 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / android / app / build . gradle <nl> ppp b / android / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 25 <nl> - buildToolsVersion " 25 . 0 . 0 " <nl> + buildToolsVersion " 25 . 0 . 1 " <nl> defaultConfig { <nl> applicationId " com . graphhopper . android " <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / grails - bootstrap / build . gradle <nl> ppp b / grails - bootstrap / build . gradle <nl> jar . appendix = ' bootstrap ' <nl> jar { <nl> from compileUaaGroovy . outputs . files <nl> } <nl> + <nl> + <nl> + eclipse { <nl> + classpath { <nl> + plusConfigurations + = configurations . uaa <nl> + } <nl> + } <nl> \ No newline at end of file <nl> 
mmm a / fml / build . gradle <nl> ppp b / fml / build . gradle <nl> minecraft { <nl> installerVersion = " 1 . 4 " <nl> } <nl> - group = ' cpw . mods ' <nl> + group = ' net . minecraftforge ' <nl> version = getVersionFromGit ( getProject ( ) ) <nl> jenkins { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> * / <nl> plugins { <nl> - id ' org . jetbrains . intellij ' version " 0 . 0 . 39 " <nl> + id ' org . jetbrains . intellij ' version " 0 . 0 . 42 " <nl> id " de . undercouch . download " version " 2 . 0 . 0 " <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : cropper ' ) <nl> - compile ' com . android . support : appcompat - v7 : 23 . 2 . 1 ' <nl> + compile ' com . android . support : appcompat - v7 : 23 . 3 . 0 ' <nl> } <nl> 
mmm a / bigbluebutton - web / build . gradle <nl> ppp b / bigbluebutton - web / build . gradle <nl> usePlugin ' java ' <nl> + usePlugin ' eclipse ' <nl> task resolveDeps ( dependsOn : configurations . default . buildArtifacts , type : Copy ) { <nl> into ( ' lib ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> targetCompatibility = JavaVersion . VERSION_1_6 <nl> repositories { <nl> - mavenCentral ( ) <nl> + jcenter ( ) <nl> } <nl> project . uploadArchives { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> maven { url ' http : / / repo . gradle . org / gradle / libs ' } <nl> maven { url ' http : / / repository . codehaus . org / ' } <nl> - maven { url ' https : / / oss . sonatype . org / content / repositories / releases / ' } <nl> } <nl> configurations { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 2 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 3 ' <nl> } <nl> } <nl> 
mmm a / extra / extra - staggeredgrid / build . gradle <nl> ppp b / extra / extra - staggeredgrid / build . gradle <nl> apply plugin : ' android - sdk - manager ' <nl> - apply plugin : ' android - library ' <nl> + apply plugin : ' com . android . library ' <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 191 <nl> - versionName " 9 . 2 " <nl> + versionCode 192 <nl> + versionName " 9 . 3 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> dependencies { <nl> compile ' me . leolin : ShortcutBadger : 1 . 1 . 1 @ aar ' <nl> compile ' com . kyleduo . switchbutton : library : 1 . 2 . 8 ' <nl> compile ' org . whispersystems : axolotl - android : 1 . 3 . 4 ' <nl> - compile ' com . kyleduo . switchbutton : library : 1 . 2 . 8 ' <nl> } <nl> android { <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> repositories { <nl> dependencies { <nl> compile ' com . android . support : support - v4 : 19 . 1 . 0 ' <nl> + compile ' com . android . support : support - annotations : 22 . 2 . 0 ' <nl> compile ' com . nineoldandroids : library : 2 . 4 . 0 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> pmd { <nl> * / <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 1 . 11 ' <nl> + gradleVersion = ' 1 . 12 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> + apply plugin : " base " <nl> + <nl> description = " Spock Framework " <nl> ext { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> def isJava15 ( ) { <nl> System . properties [ ' java . version ' ] . contains ( ' 1 . 5 ' ) <nl> } <nl> def modules ( ) { <nl> - subprojects . findAll { it . name = ~ / groovy - ( ? ! all - tests ) / } <nl> + subprojects <nl> } <nl> / / provide to other build scripts <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> compileJava { <nl> " - AoutRefMapFile = $ { project . mixinRefMap . getCanonicalPath ( ) } " <nl> ] <nl> options . deprecation = true <nl> - options . encoding = ' utf8 ' <nl> + options . encoding = ' UTF - 8 ' <nl> } <nl> / / set the reobf srg late <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> subprojects { <nl> } <nl> tasks . withType ( GroovyCompile ) { <nl> - groovyOptions . forkOptions . memoryMaximumSize = " 256m " <nl> + groovyOptions . forkOptions . memoryMaximumSize = " 312m " <nl> allprojects { <nl> mustRunAfter tasks . withType ( CodeNarc ) <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> def buildTime ( ) { <nl> def versionMajor = 0 <nl> def versionMinor = 3 <nl> - def versionPatch = 2 <nl> + def versionPatch = 3 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> android { <nl> 
mmm a / rxandroid / build . gradle <nl> ppp b / rxandroid / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion rootProject . ext . minSdkVersion <nl> - targetSdkVersion rootProject . ext . targetSdkVersion <nl> } <nl> compileOptions { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' java ' <nl> group = " com . netflix . $ { githubProjectName } " / / TEMPLATE : Set to organization of project <nl> + <nl> + dependencies { <nl> + testCompile ' org . testng : testng : 6 . 1 . 1 ' <nl> + } <nl> } <nl> project ( ' : exhibitor - core ' ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / xabber / build . gradle <nl> ppp b / xabber / build . gradle <nl> android { <nl> disable ' MissingTranslation ' <nl> } <nl> + dexOptions { <nl> + incremental true <nl> + } <nl> + <nl> productFlavors { <nl> dev { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> idea { <nl> project { <nl> jdkName = javaVersion <nl> languageLevel = javaVersion <nl> + vcs = ' Git ' <nl> } <nl> module { <nl> generatedSourceDirs + = file ( ' gen ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> minSdkVersion = 8 <nl> targetSdkVersion = 23 <nl> - versionCode = 18 <nl> - versionName = " 1 . 6 . 9 " <nl> + versionCode = 19 <nl> + versionName = " 1 . 7 . 0 " <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> minSdkVersion = 10 <nl> targetSdkVersion = 23 <nl> - supportVersion = " 23 . 2 . 0 " <nl> + supportVersion = " 23 . 2 . 1 " <nl> commonsioVersion = " 2 . 4 " <nl> commonslangVersion = " 3 . 4 " <nl> eventbusVersion = " 2 . 4 . 0 " <nl> 
mmm a / lib / build . gradle <nl> ppp b / lib / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion rootProject . ext . minSdkVersion <nl> targetSdkVersion rootProject . ext . targetSdkVersion <nl> - versionCode 10 <nl> - version = ' 0 . 5 . 1 ' <nl> + versionCode 11 <nl> + version = ' 0 . 5 . 2 ' <nl> group = ' com . tbruyelle . rxpermissions ' <nl> } <nl> buildTypes { <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> * limitations under the License . <nl> * / <nl> rootProject . name = ' crouton ' <nl> - include ' : library ' , ' : sample ' <nl> + include ' : library ' / / , ' : sample ' <nl> rootProject . children . each { it . name = rootProject . name + " - " + it . name } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 24 <nl> - versionCode 203 <nl> - versionName " 3 . 1 . 14 " <nl> + versionCode 204 <nl> + versionName ' 3 . 2 . 0 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> sourceSets { <nl> java { <nl> srcDirs = [ ] <nl> } <nl> - groovy { Rel <nl> + groovy { <nl> srcDirs = [ ' src / test ' ] <nl> } <nl> resources { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15161 <nl> - versionName = ' 28 - beta2 ' <nl> + versionCode = 15162 <nl> + versionName = ' 28 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " 4 . 3 . 2 " <nl> - versionCode 196 <nl> + versionName " 4 . 4 - rc1 " <nl> + versionCode 197 <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> 
mmm a / EventBusTest / build . gradle <nl> ppp b / EventBusTest / build . gradle <nl> buildscript { <nl> dependencies { <nl> classpath ' com . android . tools . build : gradle : 1 . 3 . 1 ' <nl> - classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 4 ' <nl> + classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15063 <nl> - versionName = ' 20 ' <nl> + versionCode = 15064 <nl> + versionName = ' 20 . 0 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> task docsJar ( dependsOn : javadocJar ) <nl> + javadoc { <nl> + options . charSet = ' UTF - 8 ' <nl> + options . docEncoding = ' UTF - 8 ' <nl> + options . encoding = ' UTF - 8 ' <nl> + } <nl> + <nl> task systemTestLibs ( dependsOn : jar ) <nl> artifacts { <nl> 
mmm a / zipkin - ui / build . gradle <nl> ppp b / zipkin - ui / build . gradle <nl> apply plugin : ' com . moowork . node ' <nl> - artifacts . zipkinUpload jar <nl> + / / manually control upload configuration as source and javadoc aren ' t relevant here <nl> + configurations { <nl> + zipkinUpload <nl> + } <nl> + artifacts { <nl> + jar <nl> + zipkinUpload jar <nl> + } <nl> sourceSets { <nl> main { <nl> 
mmm a / modules / build - module . gradle <nl> ppp b / modules / build - module . gradle <nl> sourceSets { <nl> } <nl> test { <nl> - compileClasspath = configurations . portal + compileClasspath + configurations . portalTest <nl> - runtimeClasspath = configurations . portal + runtimeClasspath + configurations . portalTest <nl> + compileClasspath + = configurations . portal + configurations . portalTest <nl> + runtimeClasspath + = configurations . portal + configurations . portalTest <nl> } <nl> testIntegration { <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 205 <nl> - versionName " 11 - beta5 " <nl> + versionCode 206 <nl> + versionName " 11 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / grails - bootstrap / build . gradle <nl> ppp b / grails - bootstrap / build . gradle <nl> jar . appendix = ' bootstrap ' <nl> jar { <nl> from compileUaaGroovy . outputs . files <nl> } <nl> + <nl> + <nl> + eclipse { <nl> + classpath { <nl> + plusConfigurations + = configurations . uaa <nl> + } <nl> + } <nl> 
mmm a / docs / docs . gradle <nl> ppp b / docs / docs . gradle <nl> project ( ' manual ' ) { <nl> idprefix : ' ' , <nl> idseparator : ' - ' , <nl> doctype : ' book ' , <nl> + numbered : ' ' , <nl> ' spring - security - version ' : project . version , <nl> revnumber : project . version <nl> ] <nl> 
mmm a / SeriesGuide / build . gradle <nl> ppp b / SeriesGuide / build . gradle <nl> android { <nl> productFlavors { <nl> free { <nl> packageName " com . battlelancer . seriesguide " <nl> - versionCode 183 <nl> - versionName " 9 - beta3 " <nl> + versionCode 184 <nl> + versionName " 9 - beta4 " <nl> } <nl> beta { <nl> packageName " com . battlelancer . seriesguide . beta " <nl> 
mmm a / Application / LinkBubble / build . gradle <nl> ppp b / Application / LinkBubble / build . gradle <nl> buildscript { <nl> def versionMajor = 0 <nl> def versionMinor = 9 <nl> def versionPatch = 0 <nl> - def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> + def versionBuild = 1 / / bump for dogfood builds , public betas , etc . <nl> apply plugin : ' android ' <nl> / / apply plugin : ' dexguard ' <nl> 
mmm a / core / build . gradle <nl> ppp b / core / build . gradle <nl> if ( isEclipse = = false | | project . path = = " : core - tests " ) { <nl> } <nl> check . dependsOn integTest <nl> integTest . mustRunAfter test <nl> - <nl> - RestSpecHack . configureDependencies ( project ) <nl> - Task copyRestSpec = RestSpecHack . configureTask ( project , true ) <nl> - integTest . dependsOn copyRestSpec <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> issueManagement { <nl> system ' github ' <nl> - url ' https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues ' <nl> + url " https : / / github . com / Netflix / $ { rootProject . githubProjectName } / issues " <nl> } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 1 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' <nl> } <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task pluginsFromSvn { <nl> } <nl> task installResources ( type : Copy ) { <nl> - into projectDir / / not actually used , but has to be set to something <nl> + into homeConfDir / / not actually used , but has to be set to something <nl> into ( homeLibDir . name ) { <nl> from ( ' grails - resources / src / grails / home / tests ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> repositories { <nl> jcenter ( ) <nl> mavenCentral ( ) ; <nl> + maven { <nl> + url ' https : / / oss . sonatype . org / content / repositories / snapshots ' <nl> + } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> group = ' org . gradle ' <nl> repositories { <nl> + maven { url ' https : / / repo . gradle . org / gradle / libs - releases ' } <nl> maven { url ' https : / / repo . gradle . org / gradle / libs - milestones ' } <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15080 <nl> - versionName = ' 21 . 1 . 0 - beta1 ' <nl> + versionCode = 15081 <nl> + versionName = ' 21 . 1 . 0 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> } <nl> } <nl> + test { <nl> + testLogging { <nl> + events " failed " <nl> + exceptionFormat " full " <nl> + } <nl> + } <nl> + <nl> sourceCompatibility = " 1 . 7 " <nl> targetCompatibility = " 1 . 7 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> jar { <nl> enabled = false <nl> } <nl> + / / Disable upload archives for the root project <nl> + uploadArchives . enabled = false <nl> + <nl> description = " " " \ <nl> Smack $ { version } <nl> $ { oneLineDesc } . " " " <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + name ' gradle - template ' <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / example / build . gradle <nl> ppp b / example / build . gradle <nl> dependencies { <nl> } <nl> android { <nl> - compileSdkVersion 19 <nl> - buildToolsVersion ' 20 . 0 . 0 ' <nl> + compileSdkVersion 21 <nl> + buildToolsVersion ' 21 . 0 . 1 ' <nl> compileOptions { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> 
mmm a / subprojects / docs / src / samples / java / multiproject / build . gradle <nl> ppp b / subprojects / docs / src / samples / java / multiproject / build . gradle <nl> / / START SNIPPET configuration - injection <nl> subprojects { <nl> apply plugin : ' java ' <nl> - apply plugin : ' eclipse ' <nl> + apply plugin : ' eclipseWtp ' <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> compileSdkVersion = 19 <nl> buildToolsVersion = ' 19 . 0 . 1 ' <nl> - versionCode = 231 <nl> + versionCode = 232 <nl> versionName = ' 12 - beta9 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 2 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 2 . 1 ' <nl> } <nl> } <nl> 
mmm a / android / PhysicalWeb / app / build . gradle <nl> ppp b / android / PhysicalWeb / app / build . gradle <nl> android { <nl> applicationId " physical_web . org . physicalweb " <nl> minSdkVersion 18 <nl> targetSdkVersion 21 <nl> - versionCode 4 <nl> + versionCode 5 <nl> versionName " 0 . 1 . 800 " <nl> } <nl> 
mmm a / subprojects / performance / performance . gradle <nl> ppp b / subprojects / performance / performance . gradle <nl> task all ( dependsOn : generators ) <nl> task prepareSamples ( dependsOn : [ small , multi , lotDependencies , withJUnit , withTestNG , withVerboseTestNG , withVerboseJUnit ] ) <nl> integTestTasks . all { <nl> + dependsOn prepareSamples <nl> maxParallelForks = 1 <nl> } <nl> 
mmm a / common . gradle <nl> ppp b / common . gradle <nl> apply plugin : ' maven ' <nl> group = ' org . jmonkeyengine ' <nl> version = jmePomVersion <nl> - sourceCompatibility = ' 1 . 6 ' <nl> + sourceCompatibility = ' 1 . 7 ' <nl> [ compileJava , compileTestJava ] * . options * . encoding = ' UTF - 8 ' <nl> repositories { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 25 / / TODO http : / / b . android . com / 212316 <nl> - versionCode 66 <nl> + versionCode 67 <nl> versionName " 3 . 1 " <nl> buildConfigField " int " , " LATEST_RELEASE " , " 62 " <nl> buildConfigField " String " , " GITHUB_TOKEN " , " \ " \ " " <nl> 
mmm a / subprojects / core - impl / core - impl . gradle <nl> ppp b / subprojects / core - impl / core - impl . gradle <nl> dependencies { <nl> mvn3Input libraries . maven3 <nl> - integTestRuntime rootProject . configurations . testRuntime . allDependencies <nl> + / / this dependency is necessary to run IvySFtpResolverIntegrationTest on ibm jdk <nl> + integTestRuntime " org . bouncycastle : bcprov - jdk15 : 1 . 46 @ jar " <nl> } <nl> task jarJarMaven3 ( type : JarJar ) { <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' assertj - android - root ' <nl> + <nl> include ' : assertj - android ' <nl> include ' : assertj - android - appcompat - v7 ' <nl> include ' : assertj - android - cardview - v7 ' <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( " $ { dbflow_project_prefix } flowcore " ) <nl> - compile " com . android . support : support - annotations : 21 . 0 . 0 " <nl> + compile " com . android . support : support - annotations : 22 . 0 . 0 " <nl> androidTestApt project ( " $ { dbflow_project_prefix } compiler " ) <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> task installGroovy ( type : Sync , dependsOn : distBin ) { <nl> into installDir <nl> } <nl> - task dist ( dependsOn : [ distBin , distSrc , distDoc ] ) { <nl> + task dist ( dependsOn : [ distBin / * , distSrc , distDoc * / ] ) { <nl> description = ' Generates the binary , sources and documentation distributions ' <nl> } <nl> 
mmm a / gradle / codenarc . gradle <nl> ppp b / gradle / codenarc . gradle <nl> project . apply plugin : " codenarc " <nl> dependencies { <nl> - codenarc ' org . codenarc : CodeNarc : 0 . 19 ' <nl> + codenarc ' org . codenarc : CodeNarc : 0 . 20 ' <nl> } <nl> codenarc { <nl> 
mmm a / ratpack . gradle <nl> ppp b / ratpack . gradle <nl> buildscript { <nl> } <nl> allprojects { <nl> - version = " 1 . 4 . 1 " <nl> + version = " 1 . 4 . 2 - SNAPSHOT " <nl> } <nl> ext { <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' es ' , <nl> ' testing ' , <nl> ' core ' , <nl> - ' inout ' , <nl> ' blob ' , <nl> ' admin - ui ' , <nl> ' sql ' , <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 14 . 0 . 1 ' <nl> - nettyVersion = ' 3 . 6 . 4 . Final ' <nl> + nettyVersion = ' 3 . 6 . 5 . Final ' <nl> slf4jVersion = ' 1 . 7 . 5 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> logbackVersion = ' 1 . 0 . 11 ' <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> minifyEnabled false <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . pro ' <nl> } <nl> - debug { <nl> - testCoverageEnabled true <nl> - } <nl> } <nl> applicationVariants . all { variant - > <nl> / / variant . dex . dependsOn deleteJacocoagentJar <nl> 
mmm a / actor - apps / core - async - android / build . gradle <nl> ppp b / actor - apps / core - async - android / build . gradle <nl> android { <nl> minSdkVersion 15 <nl> targetSdkVersion 21 <nl> } <nl> + <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> repositories { <nl> maven { url ' https : / / oss . sonatype . org / content / repositories / snapshots ' } <nl> mavenCentral ( ) <nl> + jcenter ( ) <nl> } <nl> dependencies { <nl> classpath ' me . trnl : clirr - gradle - plugin : 0 . 4 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( ' : bson ' ) { <nl> project ( ' : driver ' ) { <nl> - sourceSets { Mongo <nl> + sourceSets { <nl> acceptance { <nl> java { <nl> srcDir ' src / acceptancetest ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> apply plugin : ' com . android . application ' <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 2 " <nl> + buildToolsVersion " 23 . 0 . 1 " <nl> dataBinding { <nl> enabled true <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> applicationDistribution . into ( " newrelic " ) { <nl> from " src / newrelic " <nl> } <nl> - run { <nl> - main " ratpack . site . SiteMain " <nl> - } <nl> - <nl> idea { <nl> module { <nl> testSourceDirs + = sourceSets . browserTest . allSource . srcDirs <nl> 
mmm a / fml / install / build . gradle <nl> ppp b / fml / install / build . gradle <nl> buildscript { <nl> } <nl> } <nl> dependencies { <nl> - classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' <nl> + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 1 - SNAPSHOT ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> - nettyVersion = ' 4 . 1 . 2 . Final ' <nl> + nettyVersion = ' 4 . 1 . 4 . Final ' <nl> slf4jVersion = ' 1 . 7 . 21 ' <nl> commonsIoVersion = ' 2 . 5 ' <nl> jacksonVersion = ' 2 . 8 . 1 ' <nl> 
mmm a / EventBus / build . gradle <nl> ppp b / EventBus / build . gradle <nl> apply plugin : ' java ' <nl> group = ' de . greenrobot . eventbus ' <nl> version = ' 2 . 0 . 1 ' <nl> + sourceCompatibility = 1 . 6 <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> buildscript { <nl> } <nl> } <nl> - apply plugin : " io . ratpack . ratpack - groovy " <nl> + apply plugin : " io . ratpack . ratpack - java " <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> apply plugin : ' asset - pipeline ' <nl> 
mmm a / ratpack - site / ratpack - site . gradle <nl> ppp b / ratpack - site / ratpack - site . gradle <nl> ext { <nl> ] <nl> if ( ! isHeroku | | ! isCi ) { <nl> - manualVersions = [ manualVersions . last ( ) ] <nl> + / / manualVersions = [ manualVersions . last ( ) ] <nl> } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 185 <nl> - versionName " 3 . 1 . 3 . 4 " <nl> + versionCode 186 <nl> + versionName " 3 . 1 . 4 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / subprojects / soak / soak . gradle <nl> ppp b / subprojects / soak / soak . gradle <nl> dependencies { <nl> testFixturesCompile project ( ' : internalIntegTesting ' ) <nl> } <nl> - integTest { <nl> + tasks . matching { it . name in [ ' integTest ' , ' java9IntegTest ' ] } . all { <nl> options { <nl> excludeCategories ' org . gradle . soak . categories . SoakTest ' <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 215 <nl> - versionName ' 3 . 2 . 11 ' <nl> + versionCode 216 <nl> + versionName ' 3 . 2 . 12 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " false " ) ' <nl> 
mmm a / h2o - web / build . gradle <nl> ppp b / h2o - web / build . gradle <nl> installNpmPackages . dependsOn checkClientPrerequisites <nl> installBowerPackages . dependsOn installNpmPackages <nl> buildClientWithGulp . dependsOn installBowerPackages <nl> processResources . dependsOn buildClientWithGulp <nl> + cleanClientWithGulp . dependsOn installBowerPackages <nl> clean . dependsOn cleanClientWithGulp <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> task configureVersionInfo { <nl> if ( System . env . TRAVIS_BRANCH ! = null ) { <nl> jmeBranchName = System . env . TRAVIS_BRANCH <nl> } else if ( System . env . APPVEYOR_REPO_BRANCH ! = null ) { <nl> - jmeBranchName = APPVEYOR_REPO_BRANCH <nl> + jmeBranchName = System . env . APPVEYOR_REPO_BRANCH <nl> } <nl> if ( System . env . TRAVIS_PULL_REQUEST ! = null & & <nl> System . env . TRAVIS_PULL_REQUEST ! = " false " ) { <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . froger . instamaterial " <nl> minSdkVersion 15 <nl> targetSdkVersion 21 <nl> - versionCode 1 <nl> - versionName " 1 . 0 " <nl> + versionCode 2 <nl> + versionName " 1 . 0 . 1 " <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15020 <nl> - versionName = ' 16 - beta8 ' <nl> + versionCode = 15021 <nl> + versionName = ' 16 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> - description = " Apereo Cenrtal Authentication Service " <nl> + description = " Apereo Central Authentication Service " <nl> defaultTasks " clean " , " build " <nl> 
mmm a / WordPressUtils / build . gradle <nl> ppp b / WordPressUtils / build . gradle <nl> android { <nl> publishNonDefault true <nl> compileSdkVersion 19 <nl> - buildToolsVersion " 19 . 1 . 0 " <nl> + buildToolsVersion " 21 . 1 . 1 " <nl> defaultConfig { <nl> applicationId " org . wordpress . android . util " <nl> 
mmm a / brut . apktool . smali / build . gradle <nl> ppp b / brut . apktool . smali / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 5 ' <nl> + version = ' 2 . 0 . 6 ' <nl> def jarVersion = version <nl> 
mmm a / v4 / build . gradle <nl> ppp b / v4 / build . gradle <nl> android { <nl> / / TODO : fix errors and reenable . <nl> abortOnError false <nl> } <nl> + <nl> + compileOptions { <nl> + sourceCompatibility JavaVersion . VERSION_1_7 <nl> + targetCompatibility JavaVersion . VERSION_1_7 <nl> + } <nl> } <nl> android . libraryVariants . all { variant - > <nl> 
mmm a / gradle / release . gradle <nl> ppp b / gradle / release . gradle <nl> task forceCandidate { <nl> } <nl> release . dependsOn ( forceCandidate ) <nl> + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) <nl> task releaseSnapshot ( dependsOn : [ uploadArtifactory , uploadMavenCentral ] ) <nl> / / Ensure our versions look like the project status before publishing <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> jar { <nl> attributes ' Implementation - Title ' : ' hamcrest - all ' , <nl> ' Implementation - Vendor ' : ' hamcrest . org ' , <nl> ' Implementation - Version ' : version <nl> + instruction ' Import - Package ' , ' * ; resolution : = optional ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> avsGroup = ' com . wire ' <nl> / / proprietary avs artifact configuration <nl> - customAvsVersion = ' 2 . 9 . 14 @ aar ' <nl> + customAvsVersion = ' 2 . 9 . 17 @ aar ' <nl> customAvsInternalVersion = customAvsVersion <nl> customAvsName = ' avs ' <nl> customAvsGroup = ' com . wearezeta . avs ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 2b2 ' <nl> + version = ' 2 . 2b3 ' <nl> if ( ! ( ' release ' in gradle . startParameter . taskNames ) ) { <nl> def versionSuffix <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' eclipse ' <nl> apply plugin : com . smokejumperit . gradle . OneJarPlugin <nl> apply plugin : ' maven ' <nl> - sourceCompatibility = 1 . 7 <nl> + sourceCompatibility = 1 . 6 <nl> group = ' com . tomakehurst ' <nl> version = 1 . 7 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> tasks . withType ( JavaCompile ) { <nl> } <nl> compileGeneratedJava . dependsOn ' generateExampleCodecs ' <nl> - compileExamplesJava . dependsOn ' compileGeneratedJava ' <nl> compileGeneratedJava . classpath + = sourceSets . main . runtimeClasspath <nl> + <nl> + compileExamplesJava . dependsOn ' compileGeneratedJava ' <nl> compileExamplesJava . classpath + = sourceSets . generated . runtimeClasspath + sourceSets . main . runtimeClasspath <nl> test { <nl> 
mmm a / subprojects / groovy - test / build . gradle <nl> ppp b / subprojects / groovy - test / build . gradle <nl> dependencies { <nl> compile rootProject <nl> - compile ' junit : junit : 4 . 11 ' <nl> + compile ' junit : junit : 4 . 12 ' <nl> testRuntime project ( ' : groovy - ant ' ) <nl> } <nl> 
mmm a / hibernate - core / hibernate - core . gradle <nl> ppp b / hibernate - core / hibernate - core . gradle <nl> task testingJar ( type : Jar , dependsOn : compileTestJava ) { <nl> include ' org / hibernate / testing / * * ' <nl> include ' org / hibernate / testing / * ' <nl> classifier = ' testing ' <nl> - includeEmptyDirs = false <nl> } <nl> / / allow other modules to use it <nl> 
mmm a / ratpack - gradle - plugin / plugin . gradle <nl> ppp b / ratpack - gradle - plugin / plugin . gradle <nl> buildscript { <nl> classpath ' com . augusttechgroup : ratpack - plugin : 0 . 5 - SNAPSHOT ' <nl> } <nl> } <nl> - <nl> - println sourceSets . plugin . files <nl> - println sourceSets . main . files <nl> \ No newline at end of file <nl> 
mmm a / subprojects / docs / src / samples / modelRules / basicRuleSourcePlugin / build . gradle <nl> ppp b / subprojects / docs / src / samples / modelRules / basicRuleSourcePlugin / build . gradle <nl> @ Managed <nl> interface Person { <nl> / / START SNIPPET property - type - string <nl> - void setFirstName ( String n ) <nl> + void setFirstName ( String name ) <nl> String getFirstName ( ) <nl> / / END SNIPPET property - type - string <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15123 <nl> + versionCode = 15124 <nl> versionName = ' 24 - beta4 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 0 . 1 ' <nl> + version = ' 2 . 0 . 2 ' <nl> def jarVersion = version <nl> 
mmm a / subprojects / smoke - test / smoke - test . gradle <nl> ppp b / subprojects / smoke - test / smoke - test . gradle <nl> configurations { <nl> } <nl> dependencies { <nl> - smokeTestCompile gradleTestKit ( ) <nl> + smokeTestCompile project ( ' : testKit ' ) <nl> smokeTestCompile libraries . spock <nl> } <nl> 
mmm a / gradle / assemble . gradle <nl> ppp b / gradle / assemble . gradle <nl> ext . distSpec = copySpec { <nl> fileMode = 0755 <nl> exclude " groovy . icns " <nl> } <nl> - / / from ( " src / bin / groovy . icns " ) <nl> from ( " src / tools / org / codehaus / groovy / tools / groovy . ico " ) <nl> } <nl> into ( " embeddable " ) { <nl> 
mmm a / admin - ui / build . gradle <nl> ppp b / admin - ui / build . gradle <nl> apply plugin : ' java ' <nl> + archivesBaseName = ' crate - admin - ui ' <nl> + <nl> / / we do not want to have elasticsearch here , since we provide it in : es <nl> configurations { <nl> all * . exclude group : ' org . elasticsearch ' <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' : libraries : androidutils ' <nl> - include ' : SeriesGuideBeta ' <nl> + include ' : SeriesGuideFree ' <nl> include ' : libraries : pagerslidingtabstrip ' <nl> include ' : libraries : android - menudrawer ' <nl> include ' : libraries : actionbarsherlock - i18n ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> if ( ! project . hasProperty ( ' sonatypeRepo ' ) | | <nl> apply plugin : ' maven ' <nl> apply plugin : ' signing ' <nl> - version = " 0 . 3 . 6 " <nl> + version = " 0 . 3 . 7 " <nl> group = " com . facebook . rebound " <nl> signing { <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 172 <nl> - versionName " 3 . 1 . 1 " <nl> + versionCode 173 <nl> + versionName " 3 . 1 . 1 . 1 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / worldedit - sponge / build . gradle <nl> ppp b / worldedit - sponge / build . gradle <nl> repositories { <nl> sourceCompatibility = 1 . 8 <nl> targetCompatibility = 1 . 8 <nl> - version = " 6 . 1 . 1 " <nl> - ext . internalVersion = version + " ; " + gitCommitHash <nl> - <nl> minecraft { <nl> version = " 1 . 8 . 9 " <nl> mappings = " stable_22 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 1 . 2 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 1 . 3 ' <nl> classpath ' com . neenbedankt . gradle . plugins : android - apt : 1 . 4 ' <nl> } <nl> } <nl> 
mmm a / brut . apktool . smali / baksmali / build . gradle <nl> ppp b / brut . apktool . smali / baksmali / build . gradle <nl> dependencies { <nl> compile depends . guava <nl> testCompile depends . junit <nl> - testCompile project ( ' : smali ' ) <nl> + testCompile project ( ' : brut . apktool . smali : smali ' ) <nl> proguard depends . proguard <nl> } <nl> 
mmm a / modules / third - party / org - gradle - resources - http / build . gradle <nl> ppp b / modules / third - party / org - gradle - resources - http / build . gradle <nl> deploy { <nl> } <nl> jar { <nl> + baseName = " gradle - resources - http " <nl> duplicatesStrategy = " exclude " <nl> from sourceSets . main . output <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 25 <nl> - versionCode 225 <nl> - versionName ' 3 . 3 . 7 ' <nl> + versionCode 226 <nl> + versionName ' 3 . 3 . 8 ' <nl> multiDexEnabled true <nl> buildConfigField ' boolean ' , ' LEAK_CANARY_ENABLED ' , ' Boolean . parseBoolean ( " true " ) ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha1 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / tests - on - jvm / build . gradle <nl> ppp b / tests - on - jvm / build . gradle <nl> repositories { <nl> apply plugin : ' java ' <nl> apply plugin : ' findbugs ' <nl> apply plugin : ' checkstyle ' <nl> + apply plugin : ' jacoco ' <nl> dependencies { <nl> testCompile project ( ' : ' ) <nl> 
mmm a / bin / templates / project / build . gradle <nl> ppp b / bin / templates / project / build . gradle <nl> android { <nl> } <nl> } <nl> + lintOptions { <nl> + abortOnError false ; <nl> + } <nl> + <nl> compileSdkVersion cdvCompileSdkVersion <nl> buildToolsVersion cdvBuildToolsVersion <nl> 
mmm a / grails - web - jsp / build . gradle <nl> ppp b / grails - web - jsp / build . gradle <nl> dependencies { <nl> compile project ( " : grails - web - gsp " ) <nl> / / Required for JSP support <nl> - compile ' javax . servlet . jsp : jsp - api : 2 . 1 ' <nl> + provided ' javax . servlet . jsp : jsp - api : 2 . 1 ' <nl> } <nl> - <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> tasks . withType ( Test ) { <nl> testLogging { <nl> exceptionFormat " full " <nl> - events " failed " , " started " <nl> + events " failed " , " started " , " standard_out " , " standard_error " <nl> } <nl> } <nl> 
mmm a / modules / settings . gradle <nl> ppp b / modules / settings . gradle <nl> FileTree fileTree = fileTree ( rootDir ) { <nl> + exclude " * * / bin / * * " <nl> exclude " sdk / * / samples / build . gradle " <nl> if ( Boolean . getBoolean ( " portal . build " ) ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> checkstyle { <nl> configFile = new File ( rootDir , ' config / checkstyle . xml ' ) <nl> - toolVersion = ' 7 . 2 ' <nl> + toolVersion = ' 7 . 3 ' <nl> } <nl> compileJava { <nl> 
mmm a / gradle / groovyProject . gradle <nl> ppp b / gradle / groovyProject . gradle <nl> test { <nl> tasks . matching { it instanceof Compile | | it instanceof GroovyCompile } . all { <nl> options . compilerArgs < < " - Xlint : unchecked " <nl> + options . useAnt = false <nl> } <nl> tasks . withType ( Jar ) . each { jar - > <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' com . jfrog . artifactory ' <nl> group = ' com . sk89q . worldedit ' <nl> - version = ' 6 . 1 . 3 ' <nl> + version = ' 6 . 1 . 4 - SNAPSHOT ' <nl> ext . internalVersion = version + " ; " + gitCommitHash <nl> sourceCompatibility = 1 . 7 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> android { <nl> compileSdkVersion 23 <nl> - buildToolsVersion " 23 . 0 . 3 " <nl> + buildToolsVersion " 24 . 0 . 1 " <nl> defaultConfig { <nl> minSdkVersion 7 <nl> 
mmm a / sdk / build . gradle <nl> ppp b / sdk / build . gradle <nl> task cleanSdk ( ) < < { <nl> file ( " JME3TestsTemplateAndroid / src / jmetest / " ) . deleteDir ( ) <nl> } <nl> - jar . dependsOn ( buildSdk ) <nl> - clean . dependsOn ( cleanSdk ) ; <nl> - <nl> + tasks . remove ( uploadArchives ) <nl> + jar . dependsOn ( buildSdk ) <nl> + clean . dependsOn ( cleanSdk ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' java ' <nl> sourceCompatibility = 1 . 6 <nl> + jar . baseName = ' activeandroid ' <nl> sourceSets { <nl> main { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> compileSdkVersion = 19 <nl> - buildToolsVersion = ' 19 . 0 . 1 ' <nl> + buildToolsVersion = ' 19 . 0 . 3 ' <nl> versionCode = 239 <nl> versionName = ' 12 . 2 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> sourceCompatibility = 1 . 6 <nl> group = ' com . tomakehurst ' <nl> - version = 1 . 5 <nl> + version = 1 . 6 <nl> repositories { <nl> mavenCentral ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { project - > <nl> / / Testing <nl> testCompile ' junit : junit : 4 . 8 . 1 ' <nl> + testCompile ( ' org . spockframework : spock - core : 0 . 5 - groovy - 1 . 8 ' ) { <nl> + transitive = false <nl> + } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 1 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' <nl> / / NOTE : Do not place your application dependencies here ; they belong <nl> / / in the individual module build . gradle files <nl> 
mmm a / gradle / check . gradle <nl> ppp b / gradle / check . gradle <nl> apply plugin : ' pmd ' <nl> apply plugin : ' cobertura ' <nl> cobertura { <nl> sourceDirs = sourceSets . main . java . srcDirs <nl> - format = ' html ' <nl> + format = ' xml ' <nl> includes = [ ' * * / * . java ' , ' * * / * . groovy ' ] <nl> excludes = [ ] <nl> } <nl> 
mmm a / xabber / build . gradle <nl> ppp b / xabber / build . gradle <nl> repositories { <nl> } <nl> ext { <nl> - smackVersion = ' 4 . 1 . 4 ' <nl> + smackVersion = ' 4 . 1 . 5 ' <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> nettyVersion = ' 4 . 0 . 34 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 14 ' <nl> + slf4jVersion = ' 1 . 7 . 16 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 7 . 0 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project ( " : examples / sensors " ) { <nl> } <nl> project ( " : testing " ) { <nl> + uploadArchives . onlyIf { false } <nl> dependencies { <nl> testCompile project ( ' : core ' ) <nl> testCompile project ( ' : examples / treasury_yield ' ) <nl> 
mmm a / gradle / scala . gradle <nl> ppp b / gradle / scala . gradle <nl> apply plugin : ' scala ' <nl> / / <nl> / / The Scala module expects scalaVersion and scalaBaseVersion <nl> - / / to be setup as extension properties on this project . <nl> + / / to be set up as extension properties on this project . <nl> / / <nl> / / Setup additional sources <nl> 
mmm a / library / build . gradle <nl> ppp b / library / build . gradle <nl> task sourcesJar ( type : Jar ) { <nl> } <nl> task jar ( type : Jar ) { <nl> - from ' build / classes ' <nl> + from ' build / classes / release ' <nl> } <nl> task javadocJar ( type : Jar , dependsOn : " javadocRelease " ) { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> mavenCentral ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' <nl> + classpath ' com . android . tools . build : gradle : 1 . 1 . 0 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15030 <nl> - versionName = ' 17 - beta1 ' <nl> + versionCode = 15031 <nl> + versionName = ' 17 - beta2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> - shortVersion = ' 4 . 2 . 0 - beta2 ' <nl> - isSnapshot = false <nl> + shortVersion = ' 4 . 2 . 0 - beta3 ' <nl> + isSnapshot = true <nl> jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> apply plugin : ' com . jfrog . artifactory - upload ' <nl> group = ' com . sk89q . worldedit ' <nl> - version = ' 6 . 0 - beta - 01 ' <nl> + version = ' 6 . 0 - SNAPSHOT ' <nl> ext . internalVersion = version + " ; " + gitCommitHash <nl> sourceCompatibility = 1 . 6 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' maven ' <nl> apply from : ' gradle / functions . gradle ' <nl> - def apktoolversion_major = ' 2 . 0 . 2 ' <nl> - def apktoolversion_minor = ' ' ; <nl> + def apktoolversion_major = ' 2 . 0 . 3 ' <nl> + def apktoolversion_minor = ' SNAPSHOT ' ; <nl> allprojects { <nl> apply plugin : ' java ' <nl> 
mmm a / Library / build . gradle <nl> ppp b / Library / build . gradle <nl> dependencies { <nl> android { <nl> compileSdkVersion 22 <nl> - buildToolsVersion " 21 . 1 . 2 " <nl> + buildToolsVersion " 22 . 0 . 1 " <nl> defaultConfig { <nl> minSdkVersion 8 <nl> 
mmm a / d2j - smali / build . gradle <nl> ppp b / d2j - smali / build . gradle <nl> dependencies { <nl> } <nl> generateGrammarSource { <nl> - maxHeapSize = " 64m " <nl> arguments + = [ ' - no - listener ' , ' - visitor ' , ' - package ' , ' com . googlecode . d2j . smali . antlr4 ' ] <nl> } <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . mrengineer13 . snackbar . sample " <nl> minSdkVersion 9 <nl> targetSdkVersion 20 <nl> - versionCode 6 <nl> - versionName " 1 . 5 " <nl> + versionCode 7 <nl> + versionName " 1 . 6 " <nl> } <nl> packagingOptions { <nl> 
mmm a / subprojects / code - quality / code - quality . gradle <nl> ppp b / subprojects / code - quality / code - quality . gradle <nl> dependencies { <nl> compile project ( ' : core ' ) <nl> compile project ( ' : plugins ' ) <nl> - compile " org . codenarc : CodeNarc : 0 . 12 @ jar " <nl> + compile " org . codenarc : CodeNarc : 0 . 13 @ jar " <nl> compile libraries . slf4j_api <nl> / / CodeNarc dependencies <nl> 
mmm a / ProKey / LinkBubblePro / build . gradle <nl> ppp b / ProKey / LinkBubblePro / build . gradle <nl> buildscript { <nl> } <nl> / / Manifest version information ! <nl> - def versionMajor = 1 <nl> - def versionMinor = 0 <nl> + def versionMajor = 0 <nl> + def versionMinor = 9 <nl> def versionPatch = 0 <nl> def versionBuild = 0 / / bump for dogfood builds , public betas , etc . <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> jcenter ( ) <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha1 ' <nl> + classpath ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha2 ' <nl> classpath ' com . jakewharton . hugo : hugo - plugin : 1 . 2 . 1 ' <nl> } <nl> } <nl> 
mmm a / hibernate - core / hibernate - core . gradle <nl> ppp b / hibernate - core / hibernate - core . gradle <nl> dependencies { <nl> transitive = true <nl> } <nl> provided ( libraries . ant ) <nl> - provided ( libraries . jacc ) { <nl> - transitive = false <nl> - } <nl> + provided ( libraries . jacc ) <nl> provided ( libraries . validation ) <nl> testCompile ( libraries . validation ) <nl> testCompile ( libraries . validator ) { <nl> 
mmm a / v7 / appcompat / build . gradle <nl> ppp b / v7 / appcompat / build . gradle <nl> android { <nl> androidTest . java . srcDir ' tests / src ' <nl> } <nl> + compileOptions { <nl> + sourceCompatibility JavaVersion . VERSION_1_7 <nl> + targetCompatibility JavaVersion . VERSION_1_7 <nl> + } <nl> + <nl> lintOptions { <nl> / / TODO : fix errors and reenable . <nl> abortOnError false <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15022 <nl> - versionName = ' 16 . 0 . 1 ' <nl> + versionCode = 15030 <nl> + versionName = ' 17 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " de . robv . android . xposed . installer " <nl> minSdkVersion 15 <nl> targetSdkVersion 23 <nl> - versionCode 38 <nl> - versionName " 3 . 1 " <nl> + versionCode 39 <nl> + versionName " 3 . 1 . 1 " <nl> archivesBaseName = " XposedInstaller_ $ { versionName } " . replace ( ' ' , ' _ ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> junitVersion = ' 4 . 11 ' <nl> hamcrestVersion = ' 1 . 3 ' <nl> mockitoVersion = ' 1 . 9 . 5 ' <nl> - httpComponentVersion = ' 4 . 3 . 2 ' <nl> + httpComponentVersion = ' 4 . 3 . 4 ' <nl> jsonpathVersion = ' 0 . 9 . 1 ' <nl> freemarkerVersion = ' 2 . 3 . 20 ' <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 0 . 0 - rc2 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( projectDir , ' documentation ' ) <nl> 
mmm a / idea / idea . gradle <nl> ppp b / idea / idea . gradle <nl> apply plugin : " idea " <nl> idea { <nl> project { <nl> - jdkName " 1 . 6 " <nl> + jdkName " 1 . 7 " <nl> ipr { <nl> withXml { provider - > <nl> def node = provider . asNode ( ) <nl> 
mmm a / UltimateRecyclerView / app / build . gradle <nl> ppp b / UltimateRecyclerView / app / build . gradle <nl> android { <nl> applicationId " com . marshalchen . ultimaterecyclerview . demo " <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> - versionCode 5 <nl> - versionName " 1 . 0 . 5 " <nl> + versionCode 8 <nl> + versionName " 1 . 0 . 7 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> include ' grails - bootstrap ' , <nl> ' grails - core ' , <nl> ' grails - spring ' , <nl> ' grails - hibernate ' , <nl> - ' grails - web ' <nl> + ' grails - web ' , <nl> + ' grails - test ' <nl> / * , <nl> ' crud ' , <nl> ' docs ' , <nl> 
mmm a / grails - hibernate / build . gradle <nl> ppp b / grails - hibernate / build . gradle <nl> dependencies { <nl> project ( ' : grails - plugin - testing ' ) <nl> } <nl> test { <nl> - maxParallelForks = 2 <nl> - forkEvery = 30 <nl> + / / maxParallelForks = 4 <nl> + forkEvery = 100 <nl> + maxHeapSize = ' 1024m ' <nl> } <nl> jar . appendix = ' hibernate ' <nl> \ No newline at end of file <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15116 <nl> - versionName = ' 23 . 0 . 1 ' <nl> + versionCode = 15120 <nl> + versionName = ' 24 - beta1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 1 . 0 - alpha5 ' <nl> - isSnapshot = true <nl> + isSnapshot = false <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( buildDir , ' documentation ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> + subprojects { <nl> + group = GROUP <nl> + version = VERSION_NAME <nl> + } <nl> + <nl> ext { <nl> minSdkVersion = 15 <nl> compileSdkVersion = 22 <nl> 
mmm a / clients / flash / settings . gradle <nl> ppp b / clients / flash / settings . gradle <nl> - include ' common - library ' , ' web - client ' , ' air - client ' <nl> + include ' common - library ' , ' web - client ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> libs = [ <nl> allprojects { <nl> group = " org . spockframework " <nl> - version = " 0 . 6 - groovy - 1 . 7 - SNAPSHOT " <nl> + version = " 0 . 6 - groovy - 1 . 7 - rc - 1 " <nl> apply from : profile ( " common " ) <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> + rootProject . name = ' gradle - template - multi ' / / TEMPLATE : Change this <nl> include ' template - client ' , ' template - server ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> project . ext { <nl> guavaVersion = ' 19 . 0 ' <nl> nettyVersion = ' 4 . 0 . 35 . Final ' <nl> - slf4jVersion = ' 1 . 7 . 18 ' <nl> + slf4jVersion = ' 1 . 7 . 19 ' <nl> commonsIoVersion = ' 2 . 4 ' <nl> jacksonVersion = ' 2 . 7 . 3 ' <nl> junitVersion = ' 4 . 12 ' <nl> 
mmm a / h2o - test - accuracy / build . gradle <nl> ppp b / h2o - test - accuracy / build . gradle <nl> test { <nl> } <nl> } <nl> } <nl> - new File ( " h2o - test - accuracy / testng . xml " ) . write ( xmlWriter . toString ( ) ) <nl> + file ( " testng . xml " ) . write ( xmlWriter . toString ( ) ) <nl> suites ( " testng . xml " ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' idea ' <nl> - version = ' 2 . 2b3 ' <nl> + version = ' 2 . 2b4 ' <nl> if ( ! ( ' release ' in gradle . startParameter . taskNames ) ) { <nl> def versionSuffix <nl> 
mmm a / hibernate - core / hibernate - core . gradle <nl> ppp b / hibernate - core / hibernate - core . gradle <nl> dependencies { <nl> compile ( libraries . classmate ) <nl> compile ( libraries . jpa ) <nl> compile ( libraries . javassist ) <nl> + compile ( libraries . antlr ) <nl> antlr ( libraries . antlr ) <nl> provided ( libraries . ant ) <nl> provided ( libraries . jacc ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 110 <nl> + versionCode 111 <nl> versionName " 1 . 8 . 1 " <nl> project . ext . set ( archivesBaseName , archivesBaseName + " - " + versionName ) ; <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> repositories { <nl> apply plugin : ' war ' <nl> apply plugin : ' jetty ' <nl> + sourceCompatibility = 1 . 7 <nl> + targetCompatibility = 1 . 7 <nl> + <nl> dependencies { <nl> / / for the VMWareClient <nl> compile ' com . cloudbees . thirdparty : vijava : 5 . 0 . 0 ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> assets . srcDirs = [ ' assets ' ] <nl> } <nl> - instrumentTest { <nl> - java . srcDirs = [ ' tests / src ' ] <nl> - assets . srcDirs = [ ' tests / assets ' ] ; <nl> - } <nl> + instrumentTest . setRoot ( ' tests ' ) <nl> } <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 182 <nl> - versionName " 3 . 1 . 3 . 1 " <nl> + versionCode 183 <nl> + versionName " 3 . 1 . 3 . 2 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> uploadArchives { <nl> task buildAll ( dependsOn : [ build , perfClasses ] ) <nl> + build . dependsOn perfClasses <nl> + <nl> task listJars < < { <nl> configurations . perfCompile . each { file - > println file . name } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15081 <nl> - versionName = ' 21 . 1 . 0 - beta2 ' <nl> + versionCode = 15082 <nl> + versionName = ' 21 . 1 . 0 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11264 <nl> - versionName = ' 14 . 0 . 1 ' <nl> + versionCode = 11265 <nl> + versionName = ' 14 . 0 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' } ) { <nl> evaluationDependsOn ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> - version = ' 3 . 0 . 0 - SNAPSHOT ' <nl> + version = ' 3 . 0 . 0 - beta3 ' <nl> sourceCompatibility = JavaVersion . VERSION_1_6 <nl> targetCompatibility = JavaVersion . VERSION_1_6 <nl> 
mmm a / config / gradle / common . gradle <nl> ppp b / config / gradle / common . gradle <nl> test { <nl> } <nl> jacoco { <nl> - toolVersion = " 0 . 7 . 5 . 201505241946 " <nl> + toolVersion = " 0 . 7 . 4 . 201502262128 " <nl> } <nl> jacocoTestReport { <nl> 
mmm a / examples / kotlinExample / build . gradle <nl> ppp b / examples / kotlinExample / build . gradle <nl> android { <nl> command { <nl> events 2000 <nl> } <nl> + <nl> + / / Incremental builds currently doesn ' t work with Kotlin <nl> + dexOptions { <nl> + incremental false <nl> + } <nl> } <nl> tasks . preBuild { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15054 <nl> - versionName = ' 19 . 0 . 1 ' <nl> + versionCode = 15055 <nl> + versionName = ' 19 . 0 . 2 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 1 . 0 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15006 <nl> - versionName = ' 15 . 0 . 4 ' <nl> + versionCode = 15007 <nl> + versionName = ' 15 . 0 . 5 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> versionName " 4 . 1 " <nl> - versionCode 186 <nl> + versionCode 187 <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15072 <nl> - versionName = ' 20 . 1 . 0 ' <nl> + versionCode = 15073 <nl> + versionName = ' 20 . 1 . 1 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> configure ( subprojects . findAll { it . name ! = ' util ' } ) { <nl> evaluationDependsOn ( ' : util ' ) <nl> group = ' org . mongodb ' <nl> - version = ' 3 . 0 . 0 - SNAPSHOT ' <nl> + version = ' 3 . 0 . 0 - beta2 ' <nl> sourceCompatibility = JavaVersion . VERSION_1_6 <nl> targetCompatibility = JavaVersion . VERSION_1_6 <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> proguardFiles getDefaultProguardFile ( ' proguard - android . txt ' ) , ' proguard - rules . txt ' <nl> } <nl> } <nl> + lintOptions { <nl> + abortOnError false <nl> + } <nl> } <nl> dependencies { <nl> 
mmm a / compiler / build . gradle <nl> ppp b / compiler / build . gradle <nl> task testGolden ( type : Exec , dependsOn : ' generateTestProto ' ) { <nl> } <nl> task testNanoGolden ( type : Exec , dependsOn : ' java_pluginExecutable ' ) { <nl> + doFirst { <nl> + temporaryDir . createNewFile ( ) ; <nl> + } <nl> + <nl> environment ' TEST_TMP_DIR ' , temporaryDir <nl> commandLine ' . / src / test / run_nano_test . sh ' <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : app ' , ' : common ' , ' : library ' , ' : database ' , ' : storage ' , ' : ui_flow ' <nl> + include ' : app ' , ' : auth ' , ' : common ' , ' : library ' , ' : database ' , ' : storage ' <nl> 
mmm a / api / build . gradle <nl> ppp b / api / build . gradle <nl> apply plugin : " signing " <nl> jar . baseName = " seriesguide - api " <nl> group = " com . uwetrottmann . seriesguide " <nl> - version = " 1 . 0 . 0 - SNAPSHOT " <nl> + version = " 1 . 0 . 0 " <nl> / / load properties file <nl> def Properties props = new Properties ( ) <nl> 
mmm a / HackVG / app / build . gradle <nl> ppp b / HackVG / app / build . gradle <nl> android { <nl> minSdkVersion 16 <nl> targetSdkVersion 21 <nl> - versionCode 1 <nl> - versionName " 0 . 4 " <nl> + versionCode 2 <nl> + versionName " 0 . 6 " <nl> } <nl> buildTypes { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> ivyVersion = ' 2 . 4 . 0 - rc1 ' <nl> jansiVersion = ' 1 . 11 ' <nl> jarjarVersion = ' 1 . 3 ' <nl> - jlineVersion = ' 2 . 11 ' <nl> + jlineVersion = ' 2 . 12 ' <nl> jmockVersion = ' 1 . 2 . 0 ' <nl> logbackVersion = ' 1 . 0 . 13 ' <nl> log4jVersion = ' 1 . 2 . 17 ' <nl> 
mmm a / grails - hibernate / build . gradle <nl> ppp b / grails - hibernate / build . gradle <nl> dependencies { <nl> runtime ( ' antlr : antlr : 2 . 7 . 7 ' ) { <nl> exclude group : ' commons - logging ' , module : ' commons - logging ' <nl> } <nl> + runtime ' javax . validation : validation - api : 1 . 0 . 0 . GA ' <nl> } <nl> test { <nl> 
mmm a / gradle / idea . gradle <nl> ppp b / gradle / idea . gradle <nl> idea { <nl> project { <nl> - jdkName " 1 . 6 " <nl> + jdkName " 1 . 7 " <nl> + languageLevel " 1 . 7 " <nl> ipr { <nl> withXml { provider - > <nl> def node = provider . asNode ( ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> subprojects { <nl> options . encoding = ' ISO - 8859 - 1 ' <nl> options . fork = true <nl> options . debug = true <nl> - options . compilerArgs = [ ' - Xlint : all ' ] <nl> + options . compilerArgs = [ ' - Xlint : all ' , ' - Xlint : - options ' ] <nl> onlyIf { JavaVersion . current ( ) . isJava7Compatible ( ) } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> project . ext { <nl> okhttpVersion = " 2 . 7 . 0 " <nl> okioVersion = " 1 . 6 . 0 " <nl> - audioPlayerVersion = " v1 . 0 . 7 " <nl> + audioPlayerVersion = " v1 . 0 . 8 " <nl> } <nl> task wrapper ( type : Wrapper ) { <nl> 
mmm a / samples / gae - xml / gae . gradle <nl> ppp b / samples / gae - xml / gae . gradle <nl> dependencies { <nl> " com . google . appengine : appengine - api - stubs : $ gaeVersion " <nl> } <nl> + <nl> + project . tasks . appengineFunctionalTest . enabled = false <nl> \ No newline at end of file <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . miguelcatalan . materialsearchview . sample " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 3 <nl> - versionName " 1 . 0 . 2 " <nl> + versionCode 4 <nl> + versionName " 1 . 2 . 0 " <nl> } <nl> buildTypes { <nl> release { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> license { <nl> } <nl> } <nl> - println " CHECKSTYLE " <nl> checkstyle { <nl> configFile = project ( ' SpongeAPI ' ) . file ( ' checkstyle . xml ' ) <nl> configProperties = [ <nl> 
mmm a / android - sample / build . gradle <nl> ppp b / android - sample / build . gradle <nl> repositories { <nl> dependencies { <nl> compile ' joda - time : joda - time : 2 . 2 ' <nl> + compile ' com . android . support : support - v4 : 18 . 0 . 0 ' <nl> testLocalCompile ' joda - time : joda - time : 2 . 2 ' <nl> testLocalCompile ' junit : junit : 4 . 8 . 2 ' <nl> 
mmm a / WordPress / build . gradle <nl> ppp b / WordPress / build . gradle <nl> android { <nl> defaultConfig { <nl> applicationId " org . wordpress . android " <nl> - versionName " alpha - 4 " <nl> - versionCode 248 <nl> + versionName " 5 . 3 - rc - 1 " <nl> + versionCode 250 <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> 
mmm a / subprojects / composite - builds / composite - builds . gradle <nl> ppp b / subprojects / composite - builds / composite - builds . gradle <nl> dependencies { <nl> useTestFixtures ( project : ' : dependencyManagement ' ) <nl> useTestFixtures ( project : ' : ide ' ) <nl> + <nl> + verifyTestFilesCleanup . errorWhenNotEmpty = false <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> android { <nl> defaultConfig { <nl> packageName " org . wordpress . android " <nl> - versionName " 2 . 6 " <nl> - versionCode 91 <nl> + versionName " 2 . 6 . 1 " <nl> + versionCode 92 <nl> minSdkVersion 9 <nl> targetSdkVersion 19 <nl> } <nl> 
mmm a / gradle / release - process . gradle <nl> ppp b / gradle / release - process . gradle <nl> github { <nl> release { <nl> doFirst { <nl> - if ( ! project . git . status ( ) . uncommitted . isEmpty ( ) ) { <nl> + if ( project . git . status ( ) . uncommitted ) { <nl> throw new GradleException ( ' You have uncommitted changes . ' ) <nl> } <nl> } <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> ext { <nl> okHttpVersion = ' 3 . 0 . 1 ' <nl> daggerVersion = ' 1 . 2 . 2 ' <nl> leakCanaryVersion = ' 1 . 4 - beta1 ' <nl> - retrofitVersion = ' 2 . 0 . 0 - SNAPSHOT ' <nl> + retrofitVersion = ' 2 . 0 . 0 - beta4 ' <nl> } <nl> dependencies { <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 23 . 0 . 2 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15151 <nl> - versionName = ' 27 - beta2 ' <nl> + versionCode = 15152 <nl> + versionName = ' 27 - beta3 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> task signUniversal ( type : SignJar , dependsOn : ' outputJar ' ) { <nl> } <nl> uploadArchives . dependsOn signUniversal <nl> build . dependsOn signUniversal <nl> + installer . dependsOn signUniversal <nl> / / MDK package <nl> 
mmm a / subprojects / launcher / launcher . gradle <nl> ppp b / subprojects / launcher / launcher . gradle <nl> class StartScriptGenerator extends DefaultTask { <nl> @ InputFiles <nl> FileCollection launcherJar <nl> + @ TaskAction <nl> def generate ( ) { <nl> logging . captureStandardOutput ( LogLevel . INFO ) <nl> def factory = services . get ( ClassLoaderFactory ) <nl> 
mmm a / realm - annotations - processor / build . gradle <nl> ppp b / realm - annotations - processor / build . gradle <nl> task assembleRealm ( type : GradleBuild ) { <nl> tasks = [ ' assemble ' ] <nl> } <nl> - tasks . assemble { <nl> + tasks . compileJava { <nl> dependsOn compileAnnotations <nl> } <nl> 
mmm a / subprojects / docs / docs . gradle <nl> ppp b / subprojects / docs / docs . gradle <nl> task dslDocbook ( type : AssembleDslDocTask , dependsOn : [ dslMetaData ] ) { <nl> } <nl> task dslStandaloneDocbook ( type : UserGuideTransformTask , dependsOn : [ dslDocbook ] ) { <nl> - inputs . files allUserguideSrc <nl> sourceFile = dslDocbook . destFile <nl> destFile = new File ( docbookSrc , ' dsl - standalone . xml ' ) <nl> javadocUrl = ' . . / javadoc ' <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 169 <nl> - versionName " 3 . 1 . 0 . 12 " <nl> + versionCode 170 <nl> + versionName " 3 . 1 . 0 . 13 " <nl> multiDexEnabled true <nl> generatedDensities = [ ] <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> applicationId " com . afollestad . materialdialogssample " <nl> minSdkVersion 14 <nl> targetSdkVersion 21 <nl> - versionCode 9 <nl> + versionCode 10 <nl> versionName " 1 . 0 " <nl> } <nl> buildTypes { <nl> Binary files a / sample / sample . apk and b / sample / sample . apk differ <nl> 
mmm a / gradle / convention . gradle <nl> ppp b / gradle / convention . gradle <nl> artifacts { <nl> configurations { <nl> provided { <nl> description = ' much like compile , but indicates you expect the JDK or a container to provide it . It is only available on the compilation classpath , and is not transitive . ' <nl> - transitive = false <nl> - visible = false <nl> + transitive = true <nl> + visible = true <nl> } <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> rootProject . name = ' rxjava ' <nl> include ' rxjava - core ' , \ <nl> - ' rxjava - examples ' , \ <nl> ' language - adaptors : rxjava - groovy ' , \ <nl> ' language - adaptors : rxjava - jruby ' , \ <nl> ' language - adaptors : rxjava - clojure ' , \ <nl> 
mmm a / gradle / analytics . gradle <nl> ppp b / gradle / analytics . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath group : ' com . gradleware . analytics ' , name : ' analytics - plugin ' , version : ' 0 . 1 - 20140715012327 ' <nl> + classpath group : ' com . gradleware . analytics ' , name : ' analytics - plugin ' , version : ' 0 . 1 - 20140728061809 ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' com . github . johnrengelman . shadow ' <nl> sourceCompatibility = 1 . 7 <nl> targetCompatibility = 1 . 7 <nl> group = ' com . github . tomakehurst ' <nl> - version = ' 2 . 1 . 11 - mocklab ' <nl> + version = ' 2 . 2 . 1 - mocklab ' <nl> def shouldPublishLocally = System . getProperty ( ' LOCAL_PUBLISH ' ) <nl> 
mmm a / modules / build . gradle <nl> ppp b / modules / build . gradle <nl> gradle . beforeProject { <nl> if ( FileUtil . exists ( project , " docroot / WEB - INF / service . xml " ) ) { <nl> task buildService ( dependsOn : " build - service " ) <nl> + task buildWSDD ( dependsOn : " build - wsdd " ) <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> apply plugin : ' com . android . library ' <nl> android { <nl> compileSdkVersion 21 <nl> - buildToolsVersion ' 21 . 1 . 1 ' <nl> + buildToolsVersion ' 21 . 1 . 2 ' <nl> compileOptions { <nl> sourceCompatibility JavaVersion . VERSION_1_7 <nl> targetCompatibility JavaVersion . VERSION_1_7 <nl> 
mmm a / deeplinkdispatch / build . gradle <nl> ppp b / deeplinkdispatch / build . gradle <nl> apply plugin : ' java ' <nl> + sourceCompatibility = 1 . 7 <nl> + <nl> apply plugin : ' com . bmuschko . nexus ' <nl> dependencies { <nl> 
mmm a / ratpack - manual / ratpack - manual . gradle <nl> ppp b / ratpack - manual / ratpack - manual . gradle <nl> artifacts { <nl> archives manualZip <nl> } <nl> - task build ( dependsOn : manualZip ) <nl> + task check ( dependsOn : checkstyleApi ) <nl> + task build ( dependsOn : [ assemble , check ] ) <nl> + <nl> compass { <nl> cssDir = file ( ' src / css ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> apply plugin : ' eclipse ' <nl> ext { <nl> - shortVersion = ' 4 . 0 . 0 ' <nl> - isSnapshot = true <nl> + shortVersion = ' 4 . 0 . 0 - rc1 ' <nl> + isSnapshot = false <nl> gitCommit = getGitCommit ( ) <nl> javadocAllDir = new File ( buildDir , ' javadoc ' ) <nl> documentationDir = new File ( projectDir , ' documentation ' ) <nl> 
mmm a / subprojects / performance / build . gradle <nl> ppp b / subprojects / performance / build . gradle <nl> configurations { <nl> dependencies { <nl> testCompile ' org . codehaus . groovy : groovy : 2 . 4 . 4 ' <nl> - stats ' org . apache . commons : commons - math3 : 3 . 5 ' <nl> + stats ' org . apache . commons : commons - math3 : 3 . 6 ' <nl> } <nl> sourceCompatibility = 1 . 8 <nl> 
mmm a / spock - report / report . gradle <nl> ppp b / spock - report / report . gradle <nl> - apply from : script ( " publishMaven " ) <nl> + / / apply from : script ( " publishMaven " ) <nl> displayName = " Spock Framework - Report Module " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15082 <nl> - versionName = ' 21 . 1 . 0 - beta3 ' <nl> + versionCode = 15083 <nl> + versionName = ' 21 . 1 . 0 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> } <nl> idea { <nl> - project { <nl> - languageLevel " 7 " <nl> - } <nl> module { <nl> inheritOutputDirs = false <nl> outputDir = file ( ' build - idea / classes / main ' ) <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 21 . 1 . 1 ' <nl> / / API level 15 + - > version 15xxx <nl> - versionCode = 15092 <nl> - versionName = ' 22 . 0 . 0 - beta3 ' <nl> + versionCode = 15093 <nl> + versionName = ' 22 . 0 . 0 - beta4 ' <nl> } <nl> ext . libraries = [ <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> } <nl> + File javaHome = new File ( System . getProperty ( ' java . home ' ) ) <nl> + logger . lifecycle " Using Java from $ javaHome ( version $ { System . getProperty ( ' java . version ' ) } ) " <nl> + <nl> / / TODO use antlr plugin <nl> / / apply plugin : ' antlr ' <nl> 
mmm a / app / build . gradle <nl> ppp b / app / build . gradle <nl> android { <nl> applicationId " io . github . hidroh . materialistic " <nl> minSdkVersion 9 <nl> targetSdkVersion 22 <nl> - versionCode 16 <nl> + versionCode 17 <nl> versionName " 1 . 4 " <nl> resValue " bool " , " debug " , " true " <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 23 <nl> - versionCode 120 <nl> + versionCode 121 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / ratpack - lazybones / ratpack - lazybones . gradle <nl> ppp b / ratpack - lazybones / ratpack - lazybones . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath " uk . co . cacoethes : lazybones - gradle : 1 . 2 . 2 " <nl> + classpath " uk . co . cacoethes : lazybones - gradle : 1 . 2 . 3 " <nl> } <nl> } <nl> 
mmm a / actor - js / build . gradle <nl> ppp b / actor - js / build . gradle <nl> gwt { <nl> compiler { <nl> strict = true ; <nl> - enableClosureCompiler = true ; <nl> + style = " PRETTY " <nl> + / / enableClosureCompiler = true ; <nl> / / disableClassMetadata = true ; <nl> / / disableCastChecking = true ; <nl> } <nl> 
mmm a / version . gradle <nl> ppp b / version . gradle <nl> allprojects { <nl> ext { <nl> shortVersion = ' 4 . 2 . 0 - alpha3 ' <nl> isSnapshot = true <nl> - jxmppVersion = ' 0 . 5 . 0 - alpha6 ' <nl> + jxmppVersion = ' 0 . 5 . 0 - alpha7 ' <nl> smackMinAndroidSdk = 8 <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> jerseyVersion = " 1 . 11 " <nl> governatorVersion = " 1 . 2 . 10 " <nl> archaiusVersion = " 0 . 6 . 0 " <nl> - ribbonVersion = " 0 . 3 . 12 " <nl> + ribbonVersion = " 2 . 0 - RC9 " <nl> blitzVersion = " 1 . 34 " <nl> } <nl> 
mmm a / twidere / build . gradle <nl> ppp b / twidere / build . gradle <nl> android { <nl> applicationId " org . mariotaku . twidere " <nl> minSdkVersion 14 <nl> targetSdkVersion 22 <nl> - versionCode 103 <nl> + versionCode 104 <nl> versionName " 0 . 3 . 0 " <nl> multiDexEnabled true <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' : app ' , ' : library ' , ' : sample ' <nl> + include ' : library ' , ' : sample ' <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> buildscript { <nl> } <nl> dependencies { <nl> - classpath ' com . android . tools . build : gradle : 0 . 5 . + ' <nl> + classpath ' com . android . tools . build : gradle : 0 . 6 . + ' <nl> } <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> tasks . withType ( JavaCompile ) { <nl> options . encoding = " UTF - 8 " <nl> + options . compilerArgs < < " - Xlint : unchecked " <nl> } <nl> } <nl> 
mmm a / WordPressAnalytics / build . gradle <nl> ppp b / WordPressAnalytics / build . gradle <nl> android { <nl> publishNonDefault true <nl> compileSdkVersion 23 <nl> - buildToolsVersion ' 23 . 0 . 0 ' <nl> + buildToolsVersion ' 23 . 0 . 1 ' <nl> defaultConfig { <nl> versionName " 1 . 0 . 0 " <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> allprojects { <nl> options . encoding = " UTF - 8 " <nl> } <nl> - version = ' 3 . 0 . 4 - SNAPSHOT ' <nl> + version = ' 3 . 0 . 5 ' <nl> } <nl> 
mmm a / deeplinkdispatch / build . gradle <nl> ppp b / deeplinkdispatch / build . gradle <nl> checkstyle { <nl> configProperties = [ ' checkstyle . cache . file ' : rootProject . file ( ' build / checkstyle . cache ' ) ] <nl> } <nl> + project . group = ' com . airbnb ' <nl> + project . version = PROJECT_VERSION <nl> + <nl> modifyPom { <nl> project { <nl> name ' DeepLinkDispatch library ' <nl> 
mmm a / sample / build . gradle <nl> ppp b / sample / build . gradle <nl> android { <nl> dependencies { <nl> compile project ( ' : cropper ' ) <nl> - compile ' com . android . support : appcompat - v7 : 23 . 0 . 0 ' <nl> + compile ' com . android . support : appcompat - v7 : 23 . 2 . 1 ' <nl> } <nl> 
mmm a / settings . gradle <nl> ppp b / settings . gradle <nl> - include ' ignition - support ' , ' ignition - cache ' , ' ignition - http ' <nl> \ No newline at end of file <nl> + include ' ignition - support ' , ' ignition - cache ' , ' ignition - http ' , ' ignition - ui ' <nl> \ No newline at end of file <nl> 
mmm a / samples / comparison / build . gradle <nl> ppp b / samples / comparison / build . gradle <nl> dependencies { <nl> compile project ( ' : fbcore ' ) <nl> compile project ( ' : imagepipeline ' ) <nl> compile project ( ' : imagepipeline - backends : imagepipeline - okhttp3 ' ) <nl> + compile project ( ' : animated - gif ' ) <nl> compile project ( ' : tools : stetho ' ) <nl> } <nl> 
mmm a / build . gradle <nl> ppp b / build . gradle <nl> ext { <nl> buildToolsVersion = ' 19 . 0 . 3 ' <nl> / / API level 11 + - > version 11xxx <nl> - versionCode = 11252 <nl> + versionCode = 11253 <nl> versionName = ' 13 ' <nl> } <nl> 
